var searchIndex = {};
searchIndex["aho_corasick"] = {"doc":"An implementation of the Aho-Corasick string search algorithm.","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["match"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["match"],"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"fullacautomaton"}}],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing Aho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",5,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators. The type parameter `P` is the type of the pattern that was used to construct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"has_match","","Return true if and only if the given state and current pattern index indicate a match.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[10,"set_goto","","Set the next state index for the character given.",7,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"acautomaton"}}],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"generics":["dense"],"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,{"inputs":[{"name":"self"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"get_match","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"},{"name":"usize"}],"output":{"name":"match"}}],[11,"has_match","","",8,{"inputs":[{"name":"self"},{"name":"stateidx"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"p"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"dense"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",9,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sparse"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"stateidx"}}],[11,"set_goto","","",10,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"stateidx"}],"output":null}],[11,"heap_bytes","","",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Return the number of patterns in the automaton.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the automaton has no patterns.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matches"}}],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"matchesoverlapping"}}],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatches"}}],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"streammatchesoverlapping"}}]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["alga"] = {"doc":"Traits for algebra.","items":[[0,"general","alga","Fundamental algebraic structures.",null,null],[3,"Multiplicative","alga::general","The multiplication operator, commonly symbolized by `Ã—`.",null,null],[3,"Additive","","The addition operator, commonly symbolized by `+`.",null,null],[3,"Id","","The universal identity element wrt. a given operator, usually noted `Id` with a context-dependent subscript.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new identity element.",0,{"inputs":[],"output":{"name":"id"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"identity","","",0,{"inputs":[],"output":{"name":"id"}}],[11,"default_epsilon","","",0,null],[11,"default_max_relative","","",0,null],[11,"default_max_ulps","","",0,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",0,null],[11,"ulps_eq","","",0,null],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"id"}}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":null}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"id"}}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":null}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"id"}}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"id"}],"output":null}],[11,"operate","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"id"}}],[11,"inverse","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"one","","",0,{"inputs":[],"output":{"name":"id"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"id"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_superset","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"is_in_subset","","",0,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"meet","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"join","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"additive"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"multiplicative"}}],[11,"operator_token","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"operator_token","","",2,{"inputs":[],"output":{"name":"self"}}],[8,"Inverse","","Trait used to define the inverse element relative to the given operator.",null,null],[10,"inverse","","Returns the inverse of `self`, relative to the operator `O`.",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","In-place inversin of `self`.",3,{"inputs":[{"name":"self"}],"output":null}],[8,"Operator","","Trait implemented by types representing abstract operators.",null,null],[10,"operator_token","","Returns the structure that identifies the operator.",4,{"inputs":[],"output":{"name":"self"}}],[8,"ClosedAdd","","[Alias] Trait alias for `Add` and `AddAsign` with result of type `Self`.",null,null],[8,"ClosedMul","","[Alias] Trait alias for `Mul` and `MulAsign` with result of type `Self`.",null,null],[8,"ClosedSub","","[Alias] Trait alias for `Sub` and `SubAsign` with result of type `Self`.",null,null],[8,"ClosedNeg","","[Alias] Trait alias for `Neg` with result of type `Self`.",null,null],[8,"ClosedDiv","","[Alias] Trait alias for `Div` and `DivAsign` with result of type `Self`.",null,null],[8,"Identity","","A type that is equipped with identity.",null,null],[10,"identity","","The identity element.",5,{"inputs":[],"output":{"name":"self"}}],[11,"id","","Specific identity.",5,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[8,"SubsetOf","","Nested sets and conversions between them (using an injective mapping). Useful to work with substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever `SubsetOf` is).",null,null],[10,"to_superset","","The inclusion map: converts `self` to the equivalent element of its superset.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"from_superset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",6,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[10,"from_superset_unchecked","","Use with care! Same as `self.to_superset` but without any property checks. Always succeeds.",6,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"is_in_subset","","Checks if `element` is actually part of the subset `Self` (and can be converted to it).",6,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[8,"SupersetOf","","Nested sets and conversions between them. Useful to work with substructures. It is preferable to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because `SupersetOf` is automatically implemented whenever `SubsetOf` is.",null,null],[11,"to_subset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_in_subset","","Checks if `self` is actually part of its subset `T` (and can be converted to it).",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"to_subset_unchecked","","Use with care! Same as `self.to_subset` but without any property checks. Always succeeds.",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"from_subset","","The inclusion map: converts `self` to the equivalent element of its superset.",7,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"AbstractMagma","","Types that are closed under a given operator.",null,null],[10,"operate","","Performs an operation.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"op","","Performs specific operation.",8,{"inputs":[{"name":"self"},{"name":"o"},{"name":"self"}],"output":{"name":"self"}}],[8,"AbstractQuasigroup","","A magma with the divisibility property.",null,null],[11,"prop_inv_is_latin_square_approx","","Returns `true` if latin squareness holds for the given arguments. Approximate equality is used for verifications.",9,null],[11,"prop_inv_is_latin_square","","Returns `true` if latin squareness holds for the given arguments.",9,null],[8,"AbstractLoop","","A quasigroup with an unique identity element.",null,null],[8,"AbstractSemigroup","","An associative magma.",null,null],[11,"prop_is_associative_approx","","Returns `true` if associativity holds for the given arguments. Approximate equality is used for verifications.",10,null],[11,"prop_is_associative","","Returns `true` if associativity holds for the given arguments.",10,null],[8,"AbstractMonoid","","A semigroup equipped with an identity element.",null,null],[11,"prop_operating_identity_element_is_noop_approx","","Checks whether operating with the identity element is a no-op for the given argument. Approximate equality is used for verifications.",11,null],[11,"prop_operating_identity_element_is_noop","","Checks whether operating with the identity element is a no-op for the given argument.",11,null],[8,"AbstractGroup","","A group is a loop and a monoid at the same time.",null,null],[8,"AbstractGroupAbelian","","An commutative group.",null,null],[11,"prop_is_commutative_approx","","Returns `true` if the operator is commutative for the given argument tuple. Approximate equality is used for verifications.",12,null],[11,"prop_is_commutative","","Returns `true` if the operator is commutative for the given argument tuple.",12,null],[8,"AbstractRing","","A ring is the combination of an abelian group and a multiplicative monoid structure.",null,null],[11,"prop_mul_and_add_are_distributive_approx","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple. Approximate equality is used for verifications.",13,null],[11,"prop_mul_and_add_are_distributive","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple.",13,null],[8,"AbstractRingCommutative","","A ring with a commutative multiplication.",null,null],[11,"prop_mul_is_commutative_approx","","Returns `true` if the multiplication operator is commutative for the given argument tuple. Approximate equality is used for verifications.",14,null],[11,"prop_mul_is_commutative","","Returns `true` if the multiplication operator is commutative for the given argument tuple.",14,null],[8,"AbstractField","","A field is a commutative ring, and an abelian group under both operators.",null,null],[8,"AbstractModule","","A module combines two sets: one with an abelian group structure and another with a commutative ring structure.",null,null],[16,"AbstractRing","","The underlying scalar field.",15,null],[10,"multiply_by","","Multiplies an element of the ring with an element of the module.",15,null],[8,"MeetSemilattice","","A set where every two elements have an infimum (i.e. greatest lower bound).",null,null],[10,"meet","","Returns the meet (aka. infimum) of two values.",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"JoinSemilattice","","A set where every two elements have a suppremum (i.e. smallest upper bound).",null,null],[10,"join","","Returns the join (aka. supremum) of two values.",17,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"Lattice","","Partially orderable sets where every two elements have a suppremum and infimum.",null,null],[11,"meet_join","","Returns the infimum and the supremum simultaneously.",18,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_sort2","","Sorts two values in increasing order using a partial ordering.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to `min` or `max`.",18,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"AdditiveMagma","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveQuasigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveLoop","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveSemigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveMonoid","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveGroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveGroupAbelian","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeMagma","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeQuasigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeLoop","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeSemigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeMonoid","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeGroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeGroupAbelian","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Ring","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"RingCommutative","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Field","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Module","","A module which overloads the `*` and `+` operators.",null,null],[16,"Ring","","The underlying scalar field.",19,null],[8,"Real","","Trait shared by all reals.",null,null],[10,"floor","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","",20,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","",20,null],[10,"exp_m1","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pi","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"two_pi","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_2","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_3","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_4","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_6","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_8","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_1_pi","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_pi","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_sqrt_pi","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"e","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"log2_e","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"log10_e","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"ln_2","","",20,{"inputs":[],"output":{"name":"self"}}],[10,"ln_10","","",20,{"inputs":[],"output":{"name":"self"}}],[0,"linear","alga","Traits dedicated to linear algebra.",null,null],[11,"transform_point","alga::general","",0,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"transform_vector","","",0,null],[11,"inverse_transform_point","","",0,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_transform_vector","","",0,null],[11,"decompose","","",0,null],[11,"append_translation","","",0,null],[11,"prepend_translation","","",0,null],[11,"append_rotation","","",0,null],[11,"prepend_rotation","","",0,null],[11,"append_scaling","","",0,null],[11,"prepend_scaling","","",0,null],[11,"translation","","",0,null],[11,"rotation","","",0,null],[11,"scaling","","",0,null],[11,"powf","","",0,null],[11,"rotation_between","","",0,null],[11,"scaled_rotation_between","","",0,null],[11,"to_vector","","",0,null],[11,"from_vector","","",0,null],[8,"VectorSpace","alga::linear","A vector space has a module structure over a field instead of a ring.",null,null],[16,"Field","","The underlying scalar field.",21,null],[8,"NormedSpace","","A normed vector space.",null,null],[10,"norm_squared","","The squared norm of this vector.",22,null],[10,"norm","","The norm of this vector.",22,null],[10,"normalize","","Returns a normalized version of this vector.",22,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"normalize_mut","","Normalizes this vector in-place and returns its norm.",22,null],[10,"try_normalize","","Returns a normalized version of this vector unless its norm as smaller or equal to `eps`.",22,null],[10,"try_normalize_mut","","Normalizes this vector in-place or does nothing if its norm is smaller or equal to `eps`.",22,null],[8,"InnerSpace","","A vector space aquipped with an inner product.",null,null],[16,"Real","","The result of inner product (same as the field used by this vector space).",23,null],[10,"inner_product","","Computes the inner product of `self` with `other`.",23,null],[11,"angle","","Measures the angle between two vectors.",23,null],[8,"FiniteDimVectorSpace","","A finite-dimensional vector space.",null,null],[10,"dimension","","The vector space dimension.",24,{"inputs":[],"output":{"name":"usize"}}],[11,"canonical_basis","","Applies the given closule to each element of this vector space's canonical basis. Stops if `f` returns `false`.",24,{"inputs":[{"name":"f"}],"output":null}],[10,"canonical_basis_element","","The i-the canonical basis element.",24,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"dot","","The dot product between two vectors.",24,null],[10,"component_unchecked","","Same as `&self[i]` but without bound-checking.",24,null],[10,"component_unchecked_mut","","Same as `&mut self[i]` but without bound-checking.",24,null],[8,"FiniteDimInnerSpace","","A finite-dimensional vector space equipped with an inner product that must coincide with the dot product.",null,null],[10,"orthonormalize","","Orthonormalizes the given family of vectors. The largest free family of vectors is moved at the beginning of the array and its size is returned. Vectors at an indices larger or equal to this length can be modified to an arbitrary value.",25,null],[10,"orthonormal_subspace_basis","","Applies the given closure to each element of the orthonormal basis of the subspace orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is unspecified.",25,null],[8,"AffineSpace","","A set points associated with a vector space and a transitive and free additive group action (the translation).",null,null],[16,"Translation","","The associated vector space.",26,null],[11,"translate_by","","Same as `*self + *t`. Applies the additive group action of this affine space's associated vector space on `self`.",26,null],[11,"subtract","","Same as `*self - *other`. Returns the unique element `v` of the associated vector space such that `self = right + v`.",26,null],[8,"EuclideanSpace","","The finite-dimensional affine space based on the field of reals.",null,null],[16,"Coordinates","","The underlying finite vector space.",27,null],[16,"Real","","The underlying reals.",27,null],[10,"origin","","The preferred origin of this euclidean space.",27,{"inputs":[],"output":{"name":"self"}}],[11,"scale_by","","Multiplies the distance of this point to `Self::origin()` by `s`.",27,null],[11,"coordinates","","The coordinates of this point, i.e., the translation from the origin.",27,null],[11,"from_coordinates","","Builds a point from its coordinates relative to the origin.",27,null],[11,"distance_squared","","The distance between two points.",27,null],[11,"distance","","The distance between two points.",27,null],[8,"Transformation","","A general transformation acting on an euclidean space. It may not be inversible.",null,null],[10,"transform_point","","Applies this group's action on a point from the euclidean space.",28,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[10,"transform_vector","","Applies this group's action on a vector from the euclidean space.",28,null],[8,"AffineTransformation","","The group of affine transformations. They are decomposable into a rotation, a non-uniform scaling, a second rotation, and a translation (applied in that order).",null,null],[16,"Rotation","","Type of the first rotation to be applied.",29,null],[16,"NonUniformScaling","","Type of the non-uniform scaling to be applied.",29,null],[16,"Translation","","The type of the pure translation part of this affine transformation.",29,null],[10,"decompose","","Decomposes this affine transformation into a rotation followed by a non-uniform scaling, followed by a rotation, followed by a translation.",29,null],[10,"append_translation","","Appends a translation to this similarity.",29,null],[10,"prepend_translation","","Prepends a translation to this similarity.",29,null],[10,"append_rotation","","Appends a rotation to this similarity.",29,null],[10,"prepend_rotation","","Prepends a rotation to this similarity.",29,null],[10,"append_scaling","","Appends a scaling factor to this similarity.",29,null],[10,"prepend_scaling","","Prepends a scaling factor to this similarity.",29,null],[11,"append_rotation_wrt_point","","Appends to this similarity a rotation centered at the point `p`, i.e., this point is left invariant.",29,null],[8,"Scaling","","Subgroups of the (signed) uniform scaling group.",null,null],[11,"to_real","","Converts this scaling factor to a real. Same as `self.to_superset()`.",30,null],[11,"from_real","","Attempts to convert a real to an element of this scaling subgroup. Same as `Self::from_superset()`. Returns `None` if no such scaling is possible for this subgroup.",30,null],[11,"powf","","Raises the scaling to a power. The result must be equivalent to `self.to_superset().powf(n)`. Returns `None` if the result is not representable by `Self`.",30,null],[11,"scale_between","","The scaling required to make `a` have the same norm as `b`, i.e., `|b| = |a| * norm_ratio(a, b)`.",30,null],[8,"Similarity","","Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.",null,null],[16,"Scaling","","The type of the pure (uniform) scaling part of this similarity transformation.",31,null],[10,"translation","","The pure translational component of this similarity transformation.",31,null],[10,"rotation","","The pure rotational component of this similarity transformation.",31,null],[10,"scaling","","The pure scaling component of this similarity transformation.",31,null],[11,"translate_point","","Applies this transformation's pure translational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"rotate_point","","Applies this transformation's pure rotational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"scale_point","","Applies this transformation's pure scaling part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"rotate_vector","","Applies this transformation's pure rotational part to a vector.",31,null],[11,"scale_vector","","Applies this transformation's pure scaling part to a vector.",31,null],[11,"inverse_translate_point","","Applies this transformation inverse's pure translational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_rotate_point","","Applies this transformation inverse's pure rotational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_scale_point","","Applies this transformation inverse's pure scaling part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_rotate_vector","","Applies this transformation inverse's pure rotational part to a vector.",31,null],[11,"inverse_scale_vector","","Applies this transformation inverse's pure scaling part to a vector.",31,null],[8,"Isometry","","Subgroups of the isometry group `E(n)`, i.e., rotations, reflexions, and translations.",null,null],[8,"DirectIsometry","","Subgroups of the orientation-preserving isometry group `SE(n)`, i.e., rotations and translations.",null,null],[8,"Translation","","Subgroups of the n-dimensional translation group `T(n)`.",null,null],[10,"to_vector","","Converts this translation to a vector.",32,null],[10,"from_vector","","Attempts to convert a vector to this translation. Returns `None` if the translation represented by `v` is not part of the translation subgroup represented by `Self`.",32,null],[11,"powf","","Raises the translation to a power. The result must be equivalent to `self.to_superset() * n`.  Returns `None` if the result is not representable by `Self`.",32,null],[11,"translation_between","","The translation needed to make `a` coincide with `b`, i.e., `b = a * translation_to(a, b)`.",32,{"inputs":[{"name":"e"},{"name":"e"}],"output":{"name":"option"}}],[8,"OrthogonalTransformation","","Subgroups of the n-dimensional rotations and scaling `O(n)`.",null,null],[8,"Rotation","","Subgroups of the n-dimensional rotation group `SO(n)`.",null,null],[10,"powf","","Raises this rotation to a power. If this is a simple rotation, the result must be equivalent to multiplying the rotation angle by `n`.",33,null],[10,"rotation_between","","Computes a simple rotation that makes the angle between `a` and `b` equal to zero, i.e., `b.angle(a * delta_rotation(a, b)) = 0`. If `a` and `b` are collinear, the computed rotation may not be unique. Returns `None` if no such simple rotation exists in the subgroup represented by `Self`.",33,null],[10,"scaled_rotation_between","","Computes the rotation between `a` and `b` and raises it to the power `n`.",33,null],[8,"ProjectiveTransformation","","The most general form of inversible transformations on an euclidean space. ",null,null],[10,"inverse_transform_point","","Applies this group's inverse action on a point from the euclidean space.",34,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[10,"inverse_transform_vector","","Applies this group's inverse action on a vector from the euclidean space.",34,null],[8,"Matrix","","The space of all matrices.",null,null],[16,"Field","","The underlying field.",35,null],[16,"Row","","The type of rows of this matrix.",35,null],[16,"Column","","The type of columns of this matrix.",35,null],[16,"Transpose","","The type of the transposed matrix.",35,null],[10,"nrows","","The number of rows of this matrix.",35,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"ncolumns","","The number of columns of this matrix.",35,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"row","","The i-th row of this matrix.",35,null],[10,"column","","The i-th column of this matrix.",35,null],[10,"get_unchecked","","Gets the component at row `i` and column `j` of this matrix without bound checking.",35,null],[11,"get","","Gets the component at row `i` and column `j` of this matrix.",35,null],[10,"transpose","","Transposes this matrix.",35,null],[8,"MatrixMut","","The space of all matrices that are stable under modifications of its components, rows and columns.",null,null],[11,"set_row","","Sets the i-th row of this matrix.",36,null],[10,"set_row_mut","","In-place sets the i-th row of this matrix.",36,null],[11,"set_column","","Sets the i-th col of this matrix.",36,null],[10,"set_column_mut","","In-place sets the i-th col of this matrix.",36,null],[10,"set_unchecked","","Sets the component at row `i` and column `j` of this matrix without bound checking.",36,null],[11,"set","","Sets the component at row `i` and column `j` of this matrix.",36,null],[8,"SquareMatrix","","The monoid of all square matrices, including non-inversible ones.",null,null],[16,"Vector","","The type of rows, column, and diagonal of this matrix.",37,null],[10,"diagonal","","The diagonal of this matrix.",37,null],[10,"determinant","","The determinant of this matrix.",37,null],[10,"try_inverse","","Attempts to inverse `self`.",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"dimension","","The number of rows or column of this matrix.",37,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"transpose_mut","","In-place transposition.",37,{"inputs":[{"name":"self"}],"output":null}],[8,"SquareMatrixMut","","The monoid of all mutable square matrices that are stable under modification of its diagonal.",null,null],[10,"from_diagonal","","Constructs a new diagonal matrix.",38,null],[11,"set_diagonal","","Sets the matrix diagonal.",38,null],[10,"set_diagonal_mut","","In-place sets the matrix diagonal.",38,null],[8,"InversibleSquareMatrix","","The group of inversible matrix. Commonly known as the General Linear group `GL(n)` by algebraists.",null,null],[14,"impl_marker","alga","Implements empty traits aka marker traits for types provided. # Examples",null,null],[14,"impl_quasigroup","","Implements the quasigroup trait for types provided. # Examples",null,null],[14,"impl_semigroup","","Implements the semigroup trait for types provded. # Examples",null,null],[14,"impl_loop","","Implements the loop trait for types provided. # Examples",null,null],[14,"impl_monoid","","Implements the monoid trait for types provided. # Examples",null,null],[14,"impl_group","","Implements the group trait for types provided. # Examples",null,null],[14,"impl_abelian","","Implements the abelian group trait for types provided. # Examples",null,null],[14,"impl_ring","","Implements the ring trait for types provided. # Examples",null,null],[14,"impl_ring_commutative","","Implements the commutative ring trait for types provided. # Examples",null,null],[14,"impl_field","","Implements the field trait for types provided. # Examples",null,null],[11,"op","alga::general","Performs specific operation.",8,{"inputs":[{"name":"self"},{"name":"o"},{"name":"self"}],"output":{"name":"self"}}],[11,"prop_inv_is_latin_square_approx","","Returns `true` if latin squareness holds for the given arguments. Approximate equality is used for verifications.",9,null],[11,"prop_inv_is_latin_square","","Returns `true` if latin squareness holds for the given arguments.",9,null],[11,"prop_is_associative_approx","","Returns `true` if associativity holds for the given arguments. Approximate equality is used for verifications.",10,null],[11,"prop_is_associative","","Returns `true` if associativity holds for the given arguments.",10,null],[11,"prop_operating_identity_element_is_noop_approx","","Checks whether operating with the identity element is a no-op for the given argument. Approximate equality is used for verifications.",11,null],[11,"prop_operating_identity_element_is_noop","","Checks whether operating with the identity element is a no-op for the given argument.",11,null],[11,"prop_is_commutative_approx","","Returns `true` if the operator is commutative for the given argument tuple. Approximate equality is used for verifications.",12,null],[11,"prop_is_commutative","","Returns `true` if the operator is commutative for the given argument tuple.",12,null],[11,"prop_mul_and_add_are_distributive_approx","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple. Approximate equality is used for verifications.",13,null],[11,"prop_mul_and_add_are_distributive","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple.",13,null],[11,"prop_mul_is_commutative_approx","","Returns `true` if the multiplication operator is commutative for the given argument tuple. Approximate equality is used for verifications.",14,null],[11,"prop_mul_is_commutative","","Returns `true` if the multiplication operator is commutative for the given argument tuple.",14,null],[11,"id","","Specific identity.",5,{"inputs":[{"name":"o"}],"output":{"name":"self"}}],[11,"inverse_mut","","In-place inversin of `self`.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"meet_join","","Returns the infimum and the supremum simultaneously.",18,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_sort2","","Sorts two values in increasing order using a partial ordering.",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to `min` or `max`.",18,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_superset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",6,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"to_subset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"angle","alga::linear","Measures the angle between two vectors.",23,null],[11,"canonical_basis","","Applies the given closule to each element of this vector space's canonical basis. Stops if `f` returns `false`.",24,{"inputs":[{"name":"f"}],"output":null}],[11,"translate_by","","Same as `*self + *t`. Applies the additive group action of this affine space's associated vector space on `self`.",26,null],[11,"subtract","","Same as `*self - *other`. Returns the unique element `v` of the associated vector space such that `self = right + v`.",26,null],[11,"scale_by","","Multiplies the distance of this point to `Self::origin()` by `s`.",27,null],[11,"coordinates","","The coordinates of this point, i.e., the translation from the origin.",27,null],[11,"from_coordinates","","Builds a point from its coordinates relative to the origin.",27,null],[11,"distance_squared","","The distance between two points.",27,null],[11,"distance","","The distance between two points.",27,null],[11,"append_rotation_wrt_point","","Appends to this similarity a rotation centered at the point `p`, i.e., this point is left invariant.",29,null],[11,"translate_point","","Applies this transformation's pure translational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"rotate_point","","Applies this transformation's pure rotational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"scale_point","","Applies this transformation's pure scaling part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"rotate_vector","","Applies this transformation's pure rotational part to a vector.",31,null],[11,"scale_vector","","Applies this transformation's pure scaling part to a vector.",31,null],[11,"inverse_translate_point","","Applies this transformation inverse's pure translational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_rotate_point","","Applies this transformation inverse's pure rotational part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_scale_point","","Applies this transformation inverse's pure scaling part to a point.",31,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_rotate_vector","","Applies this transformation inverse's pure rotational part to a vector.",31,null],[11,"inverse_scale_vector","","Applies this transformation inverse's pure scaling part to a vector.",31,null],[11,"to_real","","Converts this scaling factor to a real. Same as `self.to_superset()`.",30,null],[11,"from_real","","Attempts to convert a real to an element of this scaling subgroup. Same as `Self::from_superset()`. Returns `None` if no such scaling is possible for this subgroup.",30,null],[11,"powf","","Raises the scaling to a power. The result must be equivalent to `self.to_superset().powf(n)`. Returns `None` if the result is not representable by `Self`.",30,null],[11,"scale_between","","The scaling required to make `a` have the same norm as `b`, i.e., `|b| = |a| * norm_ratio(a, b)`.",30,null],[11,"powf","","Raises the translation to a power. The result must be equivalent to `self.to_superset() * n`.  Returns `None` if the result is not representable by `Self`.",32,null],[11,"translation_between","","The translation needed to make `a` coincide with `b`, i.e., `b = a * translation_to(a, b)`.",32,{"inputs":[{"name":"e"},{"name":"e"}],"output":{"name":"option"}}],[11,"get","","Gets the component at row `i` and column `j` of this matrix.",35,null],[11,"set_row","","Sets the i-th row of this matrix.",36,null],[11,"set_column","","Sets the i-th col of this matrix.",36,null],[11,"set","","Sets the component at row `i` and column `j` of this matrix.",36,null],[11,"dimension","","The number of rows or column of this matrix.",37,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"transpose_mut","","In-place transposition.",37,{"inputs":[{"name":"self"}],"output":null}],[11,"set_diagonal","","Sets the matrix diagonal.",38,null]],"paths":[[3,"Id"],[3,"Additive"],[3,"Multiplicative"],[8,"Inverse"],[8,"Operator"],[8,"Identity"],[8,"SubsetOf"],[8,"SupersetOf"],[8,"AbstractMagma"],[8,"AbstractQuasigroup"],[8,"AbstractSemigroup"],[8,"AbstractMonoid"],[8,"AbstractGroupAbelian"],[8,"AbstractRing"],[8,"AbstractRingCommutative"],[8,"AbstractModule"],[8,"MeetSemilattice"],[8,"JoinSemilattice"],[8,"Lattice"],[8,"Module"],[8,"Real"],[8,"VectorSpace"],[8,"NormedSpace"],[8,"InnerSpace"],[8,"FiniteDimVectorSpace"],[8,"FiniteDimInnerSpace"],[8,"AffineSpace"],[8,"EuclideanSpace"],[8,"Transformation"],[8,"AffineTransformation"],[8,"Scaling"],[8,"Similarity"],[8,"Translation"],[8,"Rotation"],[8,"ProjectiveTransformation"],[8,"Matrix"],[8,"MatrixMut"],[8,"SquareMatrix"],[8,"SquareMatrixMut"]]};
searchIndex["approx"] = {"doc":"A crate that provides facilities for testing the approximate equality of floating-point based types, using either relative difference, or units in the last place (ULPs) comparisons.","items":[[3,"Relative","approx","The requisite parameters for testing for approximate equality.",null,null],[12,"lhs","","The left-hand side of the approximate equality comparison.",0,null],[12,"rhs","","The right-hand side of the approximate equality comparison.",0,null],[12,"epsilon","","The tolerance to use when testing values that are close together.",0,null],[12,"max_relative","","The relative tolerance for testing values that are far-apart.",0,null],[3,"Ulps","","The requisite parameters for testing for approximate equality.",null,null],[12,"lhs","","The left-hand side of the approximate equality comparison.",1,null],[12,"rhs","","The right-hand side of the approximate equality comparison.",1,null],[12,"epsilon","","The tolerance to use when testing values that are close together.",1,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",1,null],[8,"ApproxEq","","Equality comparisons based on floating point tolerances.",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",2,null],[10,"default_epsilon","","The default tolerance to use when testing values that are close together.",2,null],[10,"default_max_relative","","The default relative tolerance for testing values that are far-apart.",2,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are far-apart.",2,{"inputs":[],"output":{"name":"u32"}}],[10,"relative_eq","","A test for equality that uses a relative comparison if the values are far apart.",2,null],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",2,null],[10,"ulps_eq","","A test for equality that uses units in the last place (ULP) if the values are far apart.",2,null],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",2,null],[11,"new","","The beginning of a chained equality expression, using a relative based comparison.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"relative"}}],[11,"epsilon","","Replace the epsilon value with the one specified.",0,null],[11,"max_relative","","Replace the maximum relative value with the one specified.",0,null],[11,"eq","","Peform the equality comparison",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ne","","Peform the inequality comparison",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","The beginning of a chained equality expression, using an ULPs based comparison.",1,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ulps"}}],[11,"epsilon","","Replace the epsilon value with the one specified.",1,null],[11,"max_ulps","","Replace the max ulps value with the one specified.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"ulps"}}],[11,"eq","","Peform the equality comparison",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ne","","Peform the inequality comparison",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[14,"relative_eq","","Predicate for testing the approximate equality of two values.",null,null],[14,"relative_ne","","Predicate for testing the approximate inequality of two values.",null,null],[14,"assert_relative_eq","","",null,null],[14,"assert_relative_ne","","",null,null],[14,"ulps_eq","","Predicate for testing the approximate equality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"ulps_ne","","Predicate for testing the approximate inequality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"assert_ulps_eq","","",null,null],[14,"assert_ulps_ne","","",null,null]],"paths":[[3,"Relative"],[3,"Ulps"],[8,"ApproxEq"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",null,null],[11,"ip","","Returns the current instruction pointer of this frame.",0,null],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name","","Returns the name of this function.",1,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,null],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"backtraceframe"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"backtracesymbol"}}],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",3,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",3,{"inputs":[{"generics":["backtraceframe"],"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["backtraceframe"],"name":"vec"}}],[11,"ip","","Same as `Frame::ip`",4,null],[11,"symbol_address","","Same as `Frame::symbol_address`",4,null],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,null],[11,"name","","Same as `Symbol::name`",5,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Same as `Symbol::addr`",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Same as `Symbol::filename`",5,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Same as `Symbol::lineno`",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"backtrace"}}]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"] = {"doc":"","items":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex["base64"] = {"doc":"Configs","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",null,null],[4,"DecodeError","","Errors that can occur while decoding.",null,null],[13,"InvalidByte","","An invalid byte was found in the input. The offset and offending byte are provided.",0,null],[13,"InvalidLength","","The length of the input is invalid.",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"LineEnding","","Line ending used in optional line wrapping.",null,null],[13,"LF","","Unix-style \\n",2,null],[13,"CRLF","","Windows-style \\r\\n",2,null],[4,"LineWrap","","Line wrap configuration.",null,null],[13,"NoWrap","","Don't wrap.",3,null],[13,"Wrap","","Wrap lines with the specified length and line ending. The length must be > 0.",3,null],[5,"encode","","Encode arbitrary octets as base64. Returns a String. Convenience for `encode_config(input, base64::STANDARD);`.",null,{"inputs":[{"name":"t"}],"output":{"name":"string"}}],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,{"inputs":[{"name":"t"},{"name":"config"}],"output":{"name":"string"}}],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the supplied output buffer, which will grow the buffer if needed.",null,{"inputs":[{"name":"t"},{"name":"config"},{"name":"string"}],"output":null}],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the supplied output buffer.",null,null],[5,"decode","","Decode from string reference as octets. Returns a Result containing a Vec. Convenience `decode_config(input, base64::STANDARD);`.",null,{"inputs":[{"name":"t"}],"output":{"generics":["vec","decodeerror"],"name":"result"}}],[5,"decode_config","","Decode from string reference as octets. Returns a Result containing a Vec.",null,{"inputs":[{"name":"t"},{"name":"config"}],"output":{"generics":["vec","decodeerror"],"name":"result"}}],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the supplied buffer to avoid allocation. Returns a Result containing an empty tuple, aka ().",null,{"inputs":[{"name":"t"},{"name":"config"},{"name":"vec"}],"output":{"generics":["decodeerror"],"name":"result"}}],[5,"decode_config_slice","","Decode the input into the provided output slice.",null,null],[0,"display","","Enables base64'd output anywhere you might use a `Display` implementation, like a format string.",null,null],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format string without heap allocation.",null,null],[4,"DisplayError","","Errors that can occur initializing a Base64Display.",null,null],[13,"InvalidLineLength","","If wrapping is configured, the line length must be a multiple of 4, and must not be absurdly large (currently capped at 1024, subject to change).",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"displayerror"}],"output":{"name":"bool"}}],[11,"with_config","","Create a `Base64Display` with the provided config.",5,null],[11,"standard","","Convenience method for creating a `Base64Display` with the `STANDARD` configuration.",5,null],[11,"url_safe","","Convenience method for creating a `Base64Display` with the `URL_SAFE` configuration.",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","base64","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[17,"STANDARD","","Standard character set with padding.",null,null],[17,"STANDARD_NO_PAD","","Standard character set without padding.",null,null],[17,"MIME","","As per standards for MIME encoded messages",null,null],[17,"URL_SAFE","","URL-safe character set with padding",null,null],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",null,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"characterset"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"lineending"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"linewrap"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Config`.",6,{"inputs":[{"name":"characterset"},{"name":"bool"},{"name":"bool"},{"name":"linewrap"}],"output":{"name":"config"}}]],"paths":[[4,"DecodeError"],[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DisplayError"],[3,"Base64Display"],[3,"Config"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style bitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"bigendian"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u64"],"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["i64"],"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",0,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",0,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",0,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",0,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",0,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",0,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",0,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",0,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",0,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",0,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",0,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",null,null],[3,"Iter","","Iterator over the bytes contained by the buffer.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner value.",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an underlying buffer.",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the inner value.",null,null],[11,"from_buf","bytes","",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_buf","","",2,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","bytes::buf","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Chain` sequencing the provided values.",3,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"chain"}}],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"u"}}],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",3,{"inputs":[{"name":"self"}],"output":{"name":"u"}}],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",3,null],[11,"remaining","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes","","",3,null],[11,"advance","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"bytes_vec","","",3,null],[11,"remaining_mut","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes_mut","","",3,null],[11,"advance_mut","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"bytes_vec_mut","","",3,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"size_hint","","",4,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"read","","",5,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"limit","","Returns the maximum number of bytes that can be read.",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit","","Sets the maximum number of bytes that can be read.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"remaining","","",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes","","",6,null],[11,"advance","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",7,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",7,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",7,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"write","","",7,null],[11,"flush","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","","Advance the internal cursor of the Buf",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_i16","","Gets a signed 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_i32","","Gets a signed 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_i64","","Gets a signed 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"get_int","","Gets a signed n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[8,"BufMut","","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"put_i16","","Writes a signed 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":null}],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"put_i32","","Writes a signed 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":null}],[11,"put_int","","Writes a signed n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":null}],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"inputs":[{"name":"self"}],"output":{"name":"writer"}}],[8,"FromBuf","","Conversion from a [`Buf`]",null,null],[10,"from_buf","","Creates a value from a buffer.",10,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"IntoBuf","","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"with_capacity","bytes","Creates a new `Bytes` with the specified capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"bytes"}}],[11,"new","","Creates a new empty `Bytes`.",1,{"inputs":[],"output":{"name":"bytes"}}],[11,"from_static","","Creates a new `Bytes` from a static slice.",1,null],[11,"len","","Returns the number of bytes contained in this `Bytes`.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"slice_from","","Returns a slice of self for the index range `[begin..self.len())`.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"split_to","","Splits the bytes into two at the given index.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytes"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and keeping the rest.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clear","","Clears the buffer, removing all data.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"try_mut","","Attempts to convert into a `BytesMut` handle.",1,{"inputs":[{"name":"self"}],"output":{"generics":["bytesmut","bytes"],"name":"result"}}],[11,"extend_from_slice","","Appends given bytes to this object.",1,null],[11,"into_buf","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"as_ref","","",1,null],[11,"deref","","",1,null],[11,"from","","",1,{"inputs":[{"name":"bytesmut"}],"output":{"name":"bytes"}}],[11,"from","","",1,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"bytes"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"bytes"}}],[11,"from","","",1,null],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"bytes"}}],[11,"from_iter","","",2,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_iter","","",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"ordering"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"bytes"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"borrow","","",1,null],[11,"into_iter","","",1,null],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"extend","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",2,{"inputs":[{"name":"usize"}],"output":{"name":"bytesmut"}}],[11,"new","","Creates a new `BytesMut` with default capacity.",2,{"inputs":[],"output":{"name":"bytesmut"}}],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold without reallocating.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"freeze","","Converts `self` into an immutable `Bytes`.",2,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytesmut"}}],[11,"take","","Removes the bytes from the current view, returning them in a new `BytesMut` handle.",2,{"inputs":[{"name":"self"}],"output":{"name":"bytesmut"}}],[11,"split_to","","Splits the buffer into two at the given index.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bytesmut"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and keeping the rest.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clear","","Clears the buffer, removing all data.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"set_len","","Sets the length of the buffer.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted into the given `BytesMut`.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"extend_from_slice","","Appends given bytes to this object.",2,null],[11,"unsplit","","Combine splitted BytesMut objects back as contiguous.",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":null}],[11,"remaining_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"advance_mut","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"bytes_mut","","",2,null],[11,"put_slice","","",2,null],[11,"put_u8","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","",2,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"into_buf","","",2,null],[11,"as_ref","","",2,null],[11,"deref","","",2,null],[11,"as_mut","","",2,null],[11,"deref_mut","","",2,null],[11,"from","","",2,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"bytesmut"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"bytesmut"}}],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"bytesmut"}}],[11,"from","","",2,{"inputs":[{"name":"bytes"}],"output":{"name":"bytesmut"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"ordering"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"bytesmut"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"borrow","","",2,null],[11,"write_str","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","",2,{"inputs":[{"name":"self"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bytesmut"}}],[11,"into_iter","","",2,null],[11,"extend","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"extend","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"bool"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","bytes","Advance the internal cursor of the Buf",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_i16","","Gets a signed 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_i32","","Gets a signed 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_i64","","Gets a signed 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"get_int","","Gets a signed n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[8,"BufMut","bytes","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"put_i16","","Writes a signed 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":null}],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"put_i32","","Writes a signed 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":null}],[11,"put_int","","Writes a signed n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":null}],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"inputs":[{"name":"self"}],"output":{"name":"writer"}}],[8,"IntoBuf","bytes","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"littleendian"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"bigendian"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"read_u16","","",12,null],[11,"read_u32","","",12,null],[11,"read_u64","","",12,null],[11,"read_uint","","",12,null],[11,"write_u16","","",12,null],[11,"write_u32","","",12,null],[11,"write_u64","","",12,null],[11,"write_uint","","",12,null],[11,"read_u16_into","","",12,null],[11,"read_u32_into","","",12,null],[11,"read_u64_into","","",12,null],[11,"write_u16_into","","",12,null],[11,"write_u32_into","","",12,null],[11,"write_u64_into","","",12,null],[11,"from_slice_u16","","",12,null],[11,"from_slice_u32","","",12,null],[11,"from_slice_u64","","",12,null],[11,"from_slice_f32","","",12,null],[11,"from_slice_f64","","",12,null],[11,"read_u16","","",13,null],[11,"read_u32","","",13,null],[11,"read_u64","","",13,null],[11,"read_uint","","",13,null],[11,"write_u16","","",13,null],[11,"write_u32","","",13,null],[11,"write_u64","","",13,null],[11,"write_uint","","",13,null],[11,"read_u16_into","","",13,null],[11,"read_u32_into","","",13,null],[11,"read_u64_into","","",13,null],[11,"write_u16_into","","",13,null],[11,"write_u32_into","","",13,null],[11,"write_u64_into","","",13,null],[11,"from_slice_u16","","",13,null],[11,"from_slice_u32","","",13,null],[11,"from_slice_u64","","",13,null],[11,"from_slice_f32","","",13,null],[11,"from_slice_f64","","",13,null],[11,"hash","","",12,null],[11,"hash","","",13,null],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"i8"}}],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_i16","","Gets a signed 16 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_i32","","Gets a signed 32 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"get_i64","","Gets a signed 64 bit integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"get_int","","Gets a signed n-byte integer from `self` in the specified byte order.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in the specified byte order.",8,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"inputs":[{"name":"self"},{"name":"i8"}],"output":null}],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"put_i16","","Writes a signed 16 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":null}],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"put_i32","","Writes a signed 32 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"usize"}],"output":null}],[11,"put_int","","Writes a signed n-byte integer to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"usize"}],"output":null}],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in the specified byte order.",9,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"inputs":[{"name":"self"}],"output":{"name":"writer"}}]],"paths":[[8,"ByteOrder"],[3,"Bytes"],[3,"BytesMut"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["ctrlc"] = {"doc":"Cross platform handling of Ctrl-C signals.","items":[[4,"Error","ctrlc","Ctrl-C error.",null,null],[13,"MultipleHandlers","","Ctrl-C signal handler already registered.",0,null],[13,"System","","Unexpected system error.",0,null],[5,"set_handler","","Register signal handler for Ctrl-C.",null,{"inputs":[{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}]],"paths":[[4,"Error"]]};
searchIndex["error_chain"] = {"doc":"A library for consistent and reliable error handling","items":[[3,"Backtrace","error_chain","Representation of an owned and self-contained backtrace.",null,null],[3,"Iter","","Iterator over the error chain using the `Error::cause()` method.",null,null],[3,"DisplayChain","","A struct which formats an error for output.",null,null],[0,"example_generated","","These modules show an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Error","error_chain::example_generated","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",1,null],[13,"Inner","","Link to another `ErrorChain`.",1,null],[13,"Io","","Link to a `std::error::Error` type.",1,null],[13,"Custom","","A custom error kind.",1,null],[0,"inner","","Another code generated by the macro.",null,null],[3,"Error","error_chain::example_generated::inner","The Error type.",null,null],[12,"0","","The kind of the error.",2,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",3,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",2,null],[11,"with_chain","","",2,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",2,null],[11,"iter","","",2,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",2,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",2,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",2,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",2,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",2,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",2,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",2,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",2,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[6,"Result","error_chain::example_generated","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",0,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",0,null],[11,"with_chain","","",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",0,null],[11,"iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",0,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",0,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",0,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[8,"ExitCode","error_chain","Represents a value that can be used as the exit status of the process. See `quick_main!`.",null,null],[10,"code","","Returns the value to use as the exit status.",6,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[8,"ChainedError","","This trait is implemented on all the errors generated by the `error_chain` macro.",null,null],[16,"ErrorKind","","Associated kind type.",7,null],[10,"from_kind","","Constructs an error from a kind, and generates a backtrace.",7,null],[10,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",7,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[10,"kind","","Returns the kind of the error.",7,null],[10,"iter","","Iterates over the error chain.",7,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[10,"backtrace","","Returns the backtrace associated with this error.",7,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"display_chain","","Returns an object which implements `Display` for printing the full context of this error.",7,{"inputs":[{"name":"self"}],"output":{"name":"displaychain"}}],[10,"chain_err","","Extends the error chain with a new entry.",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new iterator over the error chain using `Error::cause()`.",8,{"inputs":[{"generics":["error"],"name":"option"}],"output":{"name":"iter"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"error_chain","","Macro for generating error types and traits. See crate level documentation for details.",null,null],[14,"quick_main","","Convenient wrapper to be able to use `?` and such in the main. You can use it with a separated function:",null,null],[14,"bail","","Exits a function early with an error",null,null],[14,"ensure","","Exits a function early with an error if the condition is not satisfied",null,null],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",10,{"inputs":[],"output":{"name":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",10,{"inputs":[],"output":{"name":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",10,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",10,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"into","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["backtraceframe"],"name":"vec"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"backtrace"}}],[11,"from","","",10,{"inputs":[{"generics":["backtraceframe"],"name":"vec"}],"output":{"name":"backtrace"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"ResultExt"],[8,"ExitCode"],[8,"ChainedError"],[3,"Iter"],[3,"DisplayChain"],[3,"Backtrace"]]};
searchIndex["foreign_types"] = {"doc":"A framework for Rust wrappers over C APIs.","items":[[14,"foreign_type","foreign_types","A macro to easily define wrappers for foreign types.",null,null]],"paths":[]};
searchIndex["foreign_types_shared"] = {"doc":"Internal crate used by foreign-types","items":[[3,"Opaque","foreign_types_shared","An opaque type used to define `ForeignTypeRef` types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,null],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,null]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"]]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"asyncsink"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `merge` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"futureresult"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",23,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,null],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",27,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",29,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",30,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",31,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"poll","","",32,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"shareditem"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sharederror"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",36,null],[16,"Item","","The item that the future may resolve with.",36,null],[16,"Error","","The error that the future may resolve with.",36,null],[10,"into_future","","Consumes this object and produces a future.",36,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",37,null],[16,"Error","","Possible errors during conversion.",37,null],[10,"future_from","","Consume the given value, beginning the conversion.",37,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"executeerrorkind"}],"output":{"name":"bool"}}],[11,"new","","Create a new `ExecuteError`",39,{"inputs":[{"name":"executeerrorkind"},{"name":"f"}],"output":{"name":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",39,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,{"inputs":[{"name":"self"}],"output":{"name":"f"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"FuturesUnordered","","An unbounded set of futures.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",40,null],[13,"Second","","An item from the second stream",40,null],[13,"Both","","Items from both streams",40,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iter"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"i"}],"output":{"name":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"result"}],"output":{"name":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresordered"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",45,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",45,null],[11,"poll_complete","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",45,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",47,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",50,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",50,null],[11,"poll_complete","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",50,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",50,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",51,null],[11,"poll_complete","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",51,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",54,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",55,null],[11,"poll_complete","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",58,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",60,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",61,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",63,null],[11,"poll_complete","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",63,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",64,null],[11,"poll_complete","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",64,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",64,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",67,null],[11,"poll_complete","","",67,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",67,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",67,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",68,null],[11,"poll_complete","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",68,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",68,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",69,null],[11,"poll_complete","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",69,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",70,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",71,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",72,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",73,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",74,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",75,null],[11,"poll_complete","","",75,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",75,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",75,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",76,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",76,null],[11,"poll_complete","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",77,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",78,null],[11,"poll_complete","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",78,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",79,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"poll"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"next","","",80,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",81,{"inputs":[{"name":"self"},{"name":"splitsink"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"poll","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",82,{"inputs":[{"name":"self"},{"name":"splitstream"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"start_send","","",82,null],[11,"poll_complete","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Constructs a new, empty `FuturesUnordered`",83,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",83,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the set.",83,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",83,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",83,{"inputs":[{"name":"self"}],"output":null}],[11,"from_iter","","",83,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"new","","Constructs a new, empty `FuturesOrdered`",84,{"inputs":[],"output":{"name":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",84,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",84,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",84,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",84,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",85,null],[16,"Error","","The type of error this stream may generate.",85,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",85,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",85,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",85,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",85,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",85,{"inputs":[{"name":"self"}],"output":{"name":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",85,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",85,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",85,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",85,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",85,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",85,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",85,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",85,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",85,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",85,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",85,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",85,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",85,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",85,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",85,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",86,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",86,null],[11,"poll_complete","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",86,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",87,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",87,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",87,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",87,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",87,null],[11,"poll_complete","","",87,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",87,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",88,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",89,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",90,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",91,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",92,null],[11,"poll_complete","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",92,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",93,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",93,null],[11,"poll_complete","","",93,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",93,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",94,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",94,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",94,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",95,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",95,null],[10,"start_send","","Begin the process of sending a value to the sink.",95,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"with","","Composes a function in front of the sink.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",95,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",95,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",95,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"inputs":[],"output":{"name":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"inputs":[{"name":"unparkevent"},{"name":"f"}],"output":{"name":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",96,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a new future, returning the fused future and task.",null,{"inputs":[{"name":"t"}],"output":{"name":"spawn"}}],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",null,{"inputs":[{"name":"t"},{"name":"usize"},{"name":"f"}],"output":{"name":"r"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",97,{"inputs":[{"name":"self"}],"output":null}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",98,{"inputs":[{"name":"self"},{"name":"run"}],"output":null}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",100,{"inputs":[{"name":"self"}],"output":{"name":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",100,{"inputs":[{"name":"self"}],"output":null}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",102,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",102,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",103,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",101,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",101,{"inputs":[{"name":"self"}],"output":{"generics":["canceled"],"name":"poll"}}],[11,"drop","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",104,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",104,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",105,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",105,{"inputs":[{"name":"self"}],"output":null}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"trysenderror"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",110,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",110,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",111,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",111,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",106,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"start_send","","",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",106,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",106,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"start_send","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"drop","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",108,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",108,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",109,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",109,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll","","",112,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",113,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","futures::sync","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",114,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",114,{"inputs":[{"name":"self"}],"output":{"generics":["bilockguard"],"name":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",114,{"inputs":[{"name":"self"}],"output":{"name":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",114,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",115,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",115,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",115,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",116,{"inputs":[{"name":"self"}],"output":{"generics":["bilockacquired"],"name":"poll"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",117,{"inputs":[{"name":"self"}],"output":{"name":"bilock"}}],[11,"deref","","",117,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",117,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",117,{"inputs":[{"name":"self"}],"output":null}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",118,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"drop","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",119,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",120,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",120,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",121,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",122,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",122,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",124,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",125,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",125,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",126,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",126,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",126,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",127,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",127,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",128,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"from","futures::executor","",129,{"inputs":[{"name":"nodetohandle"}],"output":{"name":"notifyhandle"}}],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",130,{"inputs":[],"output":{"name":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",130,{"inputs":[{"name":"self"}],"output":null}],[11,"notify","","Notifies the task that last called `register`.",130,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",131,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",132,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",132,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",132,{"inputs":[{"name":"self"},{"generics":["executor"],"name":"arc"}],"output":null}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",132,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",132,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",132,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",132,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",132,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",132,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",132,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",133,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","futures::task","",134,{"inputs":[{"name":"self"}],"output":{"name":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",134,{"inputs":[{"generics":["eventset"],"name":"arc"},{"name":"usize"}],"output":{"name":"unparkevent"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","futures::executor","",129,{"inputs":[{"name":"arc"}],"output":{"name":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","futures::task","",135,{"inputs":[{"name":"self"}],"output":{"name":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",135,{"inputs":[{"name":"self"}],"output":null}],[11,"is_current","","Returns `true` when called from within the context of the task.",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",132,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",132,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",132,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",132,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",132,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",132,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",132,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",132,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",129,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",129,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",129,{"inputs":[{"name":"t"}],"output":{"name":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"Task"]]};
searchIndex["futures_cpupool"] = {"doc":"A simple crate for executing work on a thread pool, and getting back a future.","items":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",null,null],[3,"Builder","","Thread pool configuration object",null,null],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn` function, which proxies the futures running on the thread pool.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new thread pool with `size` worker threads associated with it.",0,{"inputs":[{"name":"usize"}],"output":{"name":"cpupool"}}],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal to the number of CPUs on the host.",0,{"inputs":[],"output":{"name":"cpupool"}}],[11,"spawn","","Spawns a future to run on this thread pool, returning a future representing the produced value.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cpufuture"}}],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cpufuture"}}],[11,"execute","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"cpupool"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Create a builder a number of workers equal to the number of CPUs on the host.",1,{"inputs":[],"output":{"name":"builder"}}],[11,"pool_size","","Set size of a future CpuPool",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"stack_size","","Set stack size of threads in the pool.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"name_prefix","","Set thread name prefix of a future CpuPool",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"after_start","","Execute function `f` right after each thread is started but before running any jobs on it.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"before_stop","","Execute function `f` before each worker thread stops.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"create","","Create CpuPool with configured parameters",1,{"inputs":[{"name":"self"}],"output":{"name":"cpupool"}}]],"paths":[[3,"CpuPool"],[3,"Builder"],[3,"CpuFuture"]]};
searchIndex["generic_array"] = {"doc":"This crate implements a structure that can be used as a generic array type.use Core Rust array types `[T; N]` can't be used generically with respect to `N`, so for example this:","items":[[5,"transmute","generic_array","Reinterprets the bits of a value of one type as another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[3,"GenericArrayImplEven","","Internal type used to generate a struct of appropriate size",null,null],[3,"GenericArrayImplOdd","","Internal type used to generate a struct of appropriate size",null,null],[3,"GenericArray","","Struct representing a generic array - `GenericArray<T, N>` works like [T; N]",null,null],[0,"arr","","",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","",0,null],[0,"iter","generic_array","",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"into_iter","generic_array","",1,null],[11,"drop","generic_array::iter","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"count","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"nth","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_back","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","generic_array","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"genericarray"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"genericarray"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"genericarray"}],"output":{"name":"ordering"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",1,null],[11,"borrow_mut","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[8,"ArrayLength","","Trait making `GenericArray` work, marking types to be used as length of an array",null,null],[16,"ArrayType","","Associated type representing the array type for the number",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"genericarrayimpleven"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"genericarrayimplodd"}}],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"map_slice","","map a function over a  slice to a `GenericArray`. The length of the slice must be equal to the length of the array",1,null],[11,"map","","map a function over a `GenericArray`.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"genericarray"}}],[11,"as_slice","","Extracts a slice containing the entire array",1,null],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array",1,null],[11,"from_slice","","Converts slice to a generic array reference with inferred length;",1,null],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",1,null],[11,"clone_from_slice","","Function constructing an array from a slice by clonning its content",1,null],[14,"arr_impl","","Proper implementation of `arr!`",null,null],[14,"arr","","Macro allowing for easy generation of Generic Arrays. Example: `let test = arr![u32; 1, 2, 3];`",null,null]],"paths":[[8,"AddLength"],[3,"GenericArray"],[3,"GenericArrayIter"],[8,"ArrayLength"],[3,"GenericArrayImplEven"],[3,"GenericArrayImplOdd"]]};
searchIndex["glob"] = {"doc":"Support for matching file paths against Unix shell style patterns.","items":[[3,"Paths","glob","An iterator that yields `Path`s from the filesystem that match a particular pattern.",null,null],[3,"GlobError","","A glob iteration error.",null,null],[3,"PatternError","","A pattern parsing error.",null,null],[12,"pos","","The approximate character index of where the error occurred.",0,null],[12,"msg","","A message describing the error.",0,null],[3,"Pattern","","A compiled Unix shell style pattern.",null,null],[3,"MatchOptions","","Configuration options to modify the behaviour of `Pattern::matches_with(..)`",null,null],[12,"case_sensitive","","Whether or not patterns should be matched in a case-sensitive manner. This currently only considers upper/lower case relationships between ASCII characters, but in future this might be extended to work with Unicode.",1,null],[12,"require_literal_separator","","If this is true then path-component separator characters (e.g. `/` on Posix) must be matched by a literal `/`, rather than by `*` or `?` or `[...]`",1,null],[12,"require_literal_leading_dot","","If this is true then paths that contain components that start with a `.` will not match unless the `.` appears literally in the pattern: `*`, `?`, `**`, or `[...]` will not match. This is useful because such files are conventionally considered hidden on Unix systems and it might be desirable to skip them when listing files.",1,null],[5,"glob","","Return an iterator that produces all the Paths that match the given pattern, which may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"}],"output":{"generics":["paths","patternerror"],"name":"result"}}],[5,"glob_with","","Return an iterator that produces all the Paths that match the given pattern, which may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"},{"name":"matchoptions"}],"output":{"generics":["paths","patternerror"],"name":"result"}}],[6,"GlobResult","","An alias for a glob iteration result.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"path","","The Path that the error corresponds to.",2,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"error","","The error in question.",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["globresult"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pattern"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"ordering"}}],[11,"hash","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"pattern"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"generics":["pattern","patternerror"],"name":"result"}}],[11,"new","","This function compiles Unix shell style patterns.",4,{"inputs":[{"name":"str"}],"output":{"generics":["pattern","patternerror"],"name":"result"}}],[11,"escape","","Escape metacharacters within the given string by surrounding them in brackets. The resulting string will, when compiled into a `Pattern`, match the input string and nothing else.",4,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"matches","","Return if the given `str` matches this `Pattern` using the default match options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches_path","","Return if the given `Path`, when converted to a `str`, matches this `Pattern` using the default match options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"matches_with","","Return if the given `str` matches this `Pattern` using the specified match options.",4,{"inputs":[{"name":"self"},{"name":"str"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"matches_path_with","","Return if the given `Path`, when converted to a `str`, matches this `Pattern` using the specified match options.",4,{"inputs":[{"name":"self"},{"name":"path"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"as_str","","Access the original glob pattern.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"matchoptions"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"matchoptions"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"matchoptions"}}],[11,"new","","Constructs a new `MatchOptions` with default field values. This is used when calling functions that do not take an explicit `MatchOptions` parameter.",1,{"inputs":[],"output":{"name":"matchoptions"}}]],"paths":[[3,"PatternError"],[3,"MatchOptions"],[3,"GlobError"],[3,"Paths"],[3,"Pattern"]]};
searchIndex["httparse"] = {"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for parsing.",null,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"invalidchunksize"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_complete","","Convenience method to check if status is complete.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_partial","","Convenience method to check if status is partial.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is `Partial`.",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"response"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"response"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"header"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"header"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"header"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",null,{"inputs":[{"name":"str"}],"output":{"generics":["string","errors"],"name":"result"}}],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,null],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"generics":["string"],"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"generics":["vec"],"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"generics":["string"],"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical Standard #46)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"flags"}],"output":{"generics":["string","errors"],"name":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[7,"PUNYCODE_PREFIX","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["input_buffer"] = {"doc":"A buffer for reading data from the network.","items":[[3,"InputBuffer","input_buffer","A FIFO buffer for reading packets from network.",null,null],[3,"DoRead","","The reference to the buffer used for reading.",null,null],[3,"SizeLimit","","Size limit error.",null,null],[17,"MIN_READ","","The recommended minimum read size.",null,null],[11,"new","","Create a new empty input buffer.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Create a new empty input buffer.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_partially_read","","Create a input buffer filled with previously read data.",0,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"self"}}],[11,"as_cursor","","Get the data as a cursor.",0,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"as_cursor_mut","","Get the data as a mutable cursor.",0,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"remove_garbage","","Remove the already consumed portion of the data.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"into_vec","","Get the rest of the buffer and destroy the buffer.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"read_from","","Read next portion of data from the given input stream.",0,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["usize"],"name":"ioresult"}}],[11,"prepare","","Prepare reading.",0,{"inputs":[{"name":"self"}],"output":{"name":"doread"}}],[11,"prepare_reserve","","Prepare reading with the given reserve.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"doread"}}],[11,"remaining","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes","","",0,null],[11,"advance","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"with_limit","","Enforce the size limit.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["sizelimit"],"name":"result"}}],[11,"read_from","","Read next portion of data from the given input stream.",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["usize"],"name":"ioresult"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"sizelimit"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}]],"paths":[[3,"InputBuffer"],[3,"DoRead"],[3,"SizeLimit"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,null],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",null,null],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"from_bytes","","",0,null],[11,"from_bytes_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"IoVec"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"inputs":[{"name":"t"}],"output":null}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"__lazy_static_create","","",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled `Cell`, but with frozen contents.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with frozen contents.",null,null],[3,"AtomicLazyCell","","A lazily filled `Cell`, with frozen contents.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"lazycell"}}],[11,"new","","Creates a new, empty, `LazyCell`.",0,{"inputs":[],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the duration of the cell itself.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing function to fail.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get","","Returns a copy of the contents of the lazy cell.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"atomiclazycell"}}],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,{"inputs":[],"output":{"name":"atomiclazycell"}}],[11,"fill","","Put a value into this cell.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get","","Returns a copy of the contents of the lazy cell.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"dirent","","",null,null],[12,"d_ino","","",35,null],[12,"d_off","","",35,null],[12,"d_reclen","","",35,null],[12,"d_type","","",35,null],[12,"d_name","","",35,null],[3,"dirent64","","",null,null],[12,"d_ino","","",36,null],[12,"d_off","","",36,null],[12,"d_reclen","","",36,null],[12,"d_type","","",36,null],[12,"d_name","","",36,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",37,null],[12,"rlim_max","","",37,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",39,null],[12,"ifa_name","","",39,null],[12,"ifa_flags","","",39,null],[12,"ifa_addr","","",39,null],[12,"ifa_netmask","","",39,null],[12,"ifa_ifu","","",39,null],[12,"ifa_data","","",39,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",40,null],[12,"pw_passwd","","",40,null],[12,"pw_uid","","",40,null],[12,"pw_gid","","",40,null],[12,"pw_gecos","","",40,null],[12,"pw_dir","","",40,null],[12,"pw_shell","","",40,null],[3,"spwd","","",null,null],[12,"sp_namp","","",41,null],[12,"sp_pwdp","","",41,null],[12,"sp_lstchg","","",41,null],[12,"sp_min","","",41,null],[12,"sp_max","","",41,null],[12,"sp_warn","","",41,null],[12,"sp_inact","","",41,null],[12,"sp_expire","","",41,null],[12,"sp_flag","","",41,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",42,null],[12,"f_frsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_favail","","",42,null],[12,"f_fsid","","",42,null],[12,"f_flag","","",42,null],[12,"f_namemax","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curspace","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_valid","","",43,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",44,null],[12,"ssi_errno","","",44,null],[12,"ssi_code","","",44,null],[12,"ssi_pid","","",44,null],[12,"ssi_uid","","",44,null],[12,"ssi_fd","","",44,null],[12,"ssi_tid","","",44,null],[12,"ssi_band","","",44,null],[12,"ssi_overrun","","",44,null],[12,"ssi_trapno","","",44,null],[12,"ssi_status","","",44,null],[12,"ssi_int","","",44,null],[12,"ssi_ptr","","",44,null],[12,"ssi_utime","","",44,null],[12,"ssi_stime","","",44,null],[12,"ssi_addr","","",44,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",45,null],[12,"it_value","","",45,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",46,null],[12,"mq_maxmsg","","",46,null],[12,"mq_msgsize","","",46,null],[12,"mq_curmsgs","","",46,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",47,null],[12,"if_name","","",47,null],[3,"msginfo","","",null,null],[12,"msgpool","","",48,null],[12,"msgmap","","",48,null],[12,"msgmax","","",48,null],[12,"msgmnb","","",48,null],[12,"msgmni","","",48,null],[12,"msgssz","","",48,null],[12,"msgtql","","",48,null],[12,"msgseg","","",48,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",49,null],[12,"msg_len","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",66,null],[12,"p_offset","","",66,null],[12,"p_vaddr","","",66,null],[12,"p_paddr","","",66,null],[12,"p_filesz","","",66,null],[12,"p_memsz","","",66,null],[12,"p_flags","","",66,null],[12,"p_align","","",66,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",67,null],[12,"p_flags","","",67,null],[12,"p_offset","","",67,null],[12,"p_vaddr","","",67,null],[12,"p_paddr","","",67,null],[12,"p_filesz","","",67,null],[12,"p_memsz","","",67,null],[12,"p_align","","",67,null],[3,"ucred","","",null,null],[12,"pid","","",68,null],[12,"uid","","",68,null],[12,"gid","","",68,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",69,null],[12,"mnt_dir","","",69,null],[12,"mnt_type","","",69,null],[12,"mnt_opts","","",69,null],[12,"mnt_freq","","",69,null],[12,"mnt_passno","","",69,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",70,null],[12,"aio_lio_opcode","","",70,null],[12,"aio_reqprio","","",70,null],[12,"aio_buf","","",70,null],[12,"aio_nbytes","","",70,null],[12,"aio_sigevent","","",70,null],[12,"aio_offset","","",70,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",71,null],[12,"e_exit","","",71,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",72,null],[12,"tv_usec","","",72,null],[3,"utmpx","","",null,null],[12,"ut_type","","",73,null],[12,"ut_pid","","",73,null],[12,"ut_line","","",73,null],[12,"ut_id","","",73,null],[12,"ut_user","","",73,null],[12,"ut_host","","",73,null],[12,"ut_exit","","",73,null],[12,"ut_session","","",73,null],[12,"ut_tv","","",73,null],[12,"ut_addr_v6","","",73,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",74,null],[12,"sa_mask","","",74,null],[12,"sa_flags","","",74,null],[12,"sa_restorer","","",74,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",75,null],[12,"ss_flags","","",75,null],[12,"ss_size","","",75,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",76,null],[12,"si_errno","","",76,null],[12,"si_code","","",76,null],[12,"_pad","","",76,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",77,null],[12,"gl_pathv","","",77,null],[12,"gl_offs","","",77,null],[12,"gl_flags","","",77,null],[3,"statfs","","",null,null],[12,"f_type","","",78,null],[12,"f_bsize","","",78,null],[12,"f_blocks","","",78,null],[12,"f_bfree","","",78,null],[12,"f_bavail","","",78,null],[12,"f_files","","",78,null],[12,"f_ffree","","",78,null],[12,"f_fsid","","",78,null],[12,"f_namelen","","",78,null],[12,"f_frsize","","",78,null],[3,"msghdr","","",null,null],[12,"msg_name","","",79,null],[12,"msg_namelen","","",79,null],[12,"msg_iov","","",79,null],[12,"msg_iovlen","","",79,null],[12,"msg_control","","",79,null],[12,"msg_controllen","","",79,null],[12,"msg_flags","","",79,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",80,null],[12,"cmsg_level","","",80,null],[12,"cmsg_type","","",80,null],[3,"termios","","",null,null],[12,"c_iflag","","",81,null],[12,"c_oflag","","",81,null],[12,"c_cflag","","",81,null],[12,"c_lflag","","",81,null],[12,"c_line","","",81,null],[12,"c_cc","","",81,null],[12,"c_ispeed","","",81,null],[12,"c_ospeed","","",81,null],[3,"flock","","",null,null],[12,"l_type","","",82,null],[12,"l_whence","","",82,null],[12,"l_start","","",82,null],[12,"l_len","","",82,null],[12,"l_pid","","",82,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",83,null],[12,"loads","","",83,null],[12,"totalram","","",83,null],[12,"freeram","","",83,null],[12,"sharedram","","",83,null],[12,"bufferram","","",83,null],[12,"totalswap","","",83,null],[12,"freeswap","","",83,null],[12,"procs","","",83,null],[12,"pad","","",83,null],[12,"totalhigh","","",83,null],[12,"freehigh","","",83,null],[12,"mem_unit","","",83,null],[12,"_f","","",83,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",84,null],[12,"msg_stime","","",84,null],[12,"msg_rtime","","",84,null],[12,"msg_ctime","","",84,null],[12,"msg_qnum","","",84,null],[12,"msg_qbytes","","",84,null],[12,"msg_lspid","","",84,null],[12,"msg_lrpid","","",84,null],[3,"stat","","",null,null],[12,"st_dev","","",85,null],[12,"st_ino","","",85,null],[12,"st_nlink","","",85,null],[12,"st_mode","","",85,null],[12,"st_uid","","",85,null],[12,"st_gid","","",85,null],[12,"st_rdev","","",85,null],[12,"st_size","","",85,null],[12,"st_blksize","","",85,null],[12,"st_blocks","","",85,null],[12,"st_atime","","",85,null],[12,"st_atime_nsec","","",85,null],[12,"st_mtime","","",85,null],[12,"st_mtime_nsec","","",85,null],[12,"st_ctime","","",85,null],[12,"st_ctime_nsec","","",85,null],[3,"stat64","","",null,null],[12,"st_dev","","",86,null],[12,"st_ino","","",86,null],[12,"st_nlink","","",86,null],[12,"st_mode","","",86,null],[12,"st_uid","","",86,null],[12,"st_gid","","",86,null],[12,"st_rdev","","",86,null],[12,"st_size","","",86,null],[12,"st_blksize","","",86,null],[12,"st_blocks","","",86,null],[12,"st_atime","","",86,null],[12,"st_atime_nsec","","",86,null],[12,"st_mtime","","",86,null],[12,"st_mtime_nsec","","",86,null],[12,"st_ctime","","",86,null],[12,"st_ctime_nsec","","",86,null],[3,"statfs64","","",null,null],[12,"f_type","","",87,null],[12,"f_bsize","","",87,null],[12,"f_blocks","","",87,null],[12,"f_bfree","","",87,null],[12,"f_bavail","","",87,null],[12,"f_files","","",87,null],[12,"f_ffree","","",87,null],[12,"f_fsid","","",87,null],[12,"f_namelen","","",87,null],[12,"f_frsize","","",87,null],[12,"f_flags","","",87,null],[12,"f_spare","","",87,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",88,null],[12,"f_frsize","","",88,null],[12,"f_blocks","","",88,null],[12,"f_bfree","","",88,null],[12,"f_bavail","","",88,null],[12,"f_files","","",88,null],[12,"f_ffree","","",88,null],[12,"f_favail","","",88,null],[12,"f_fsid","","",88,null],[12,"f_flag","","",88,null],[12,"f_namemax","","",88,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",89,null],[12,"exponent","","",89,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",90,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",91,null],[12,"swd","","",91,null],[12,"ftw","","",91,null],[12,"fop","","",91,null],[12,"rip","","",91,null],[12,"rdp","","",91,null],[12,"mxcsr","","",91,null],[12,"mxcr_mask","","",91,null],[12,"_st","","",91,null],[12,"_xmm","","",91,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",92,null],[12,"swd","","",92,null],[12,"ftw","","",92,null],[12,"fop","","",92,null],[12,"rip","","",92,null],[12,"rdp","","",92,null],[12,"mxcsr","","",92,null],[12,"mxcr_mask","","",92,null],[12,"st_space","","",92,null],[12,"xmm_space","","",92,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",93,null],[12,"r14","","",93,null],[12,"r13","","",93,null],[12,"r12","","",93,null],[12,"rbp","","",93,null],[12,"rbx","","",93,null],[12,"r11","","",93,null],[12,"r10","","",93,null],[12,"r9","","",93,null],[12,"r8","","",93,null],[12,"rax","","",93,null],[12,"rcx","","",93,null],[12,"rdx","","",93,null],[12,"rsi","","",93,null],[12,"rdi","","",93,null],[12,"orig_rax","","",93,null],[12,"rip","","",93,null],[12,"cs","","",93,null],[12,"eflags","","",93,null],[12,"rsp","","",93,null],[12,"ss","","",93,null],[12,"fs_base","","",93,null],[12,"gs_base","","",93,null],[12,"ds","","",93,null],[12,"es","","",93,null],[12,"fs","","",93,null],[12,"gs","","",93,null],[3,"user","","",null,null],[12,"regs","","",94,null],[12,"u_fpvalid","","",94,null],[12,"i387","","",94,null],[12,"u_tsize","","",94,null],[12,"u_dsize","","",94,null],[12,"u_ssize","","",94,null],[12,"start_code","","",94,null],[12,"start_stack","","",94,null],[12,"signal","","",94,null],[12,"u_ar0","","",94,null],[12,"u_fpstate","","",94,null],[12,"magic","","",94,null],[12,"u_comm","","",94,null],[12,"u_debugreg","","",94,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",95,null],[12,"fpregs","","",95,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",96,null],[12,"uc_link","","",96,null],[12,"uc_stack","","",96,null],[12,"uc_mcontext","","",96,null],[12,"uc_sigmask","","",96,null],[3,"ipc_perm","","",null,null],[12,"__key","","",97,null],[12,"uid","","",97,null],[12,"gid","","",97,null],[12,"cuid","","",97,null],[12,"cgid","","",97,null],[12,"mode","","",97,null],[12,"__seq","","",97,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",98,null],[12,"shm_segsz","","",98,null],[12,"shm_atime","","",98,null],[12,"shm_dtime","","",98,null],[12,"shm_ctime","","",98,null],[12,"shm_cpid","","",98,null],[12,"shm_lpid","","",98,null],[12,"shm_nattch","","",98,null],[3,"termios2","","",null,null],[12,"c_iflag","","",99,null],[12,"c_oflag","","",99,null],[12,"c_cflag","","",99,null],[12,"c_lflag","","",99,null],[12,"c_line","","",99,null],[12,"c_cc","","",99,null],[12,"c_ispeed","","",99,null],[12,"c_ospeed","","",99,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"QCMD","","",null,{"inputs":[{"name":"c_int"},{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"statfs64"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"statvfs64"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"termios2"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"itimerspec"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"input_event"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"input_id"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"input_absinfo"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"input_keymap_entry"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"input_mask"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ff_replay"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ff_trigger"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"ff_envelope"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"ff_constant_effect"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"ff_ramp_effect"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"ff_condition_effect"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"ff_periodic_effect"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"ff_rumble_effect"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"ff_effect"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"dl_phdr_info"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"elf32_phdr"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"elf64_phdr"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"mntent"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"servent"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"generics":["setloggererror"],"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"generics":["setloggererror"],"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"generics":["box","shutdownloggererror"],"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"generics":["shutdownloggererror"],"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"generics":["loglevel"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"generics":["loglevelfilter"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"self"}],"output":{"generics":["loglevel"],"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"self"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern using debug assertions.",null,null]],"paths":[]};
searchIndex["matrixmultiply"] = {"doc":"","items":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,null],[5,"dgemm","","General matrix multiplication (f64)",null,null]],"paths":[]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface to the corresponding functions in `libc`.","items":[[3,"Memchr","memchr","An iterator for memchr",null,null],[3,"Memchr2","","An iterator for Memchr2",null,null],[3,"Memchr3","","An iterator for Memchr3",null,null],[5,"memchr","","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",0,null],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new iterator that yields all positions of needle in haystack.",1,null],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"size_hint","","",1,null],[11,"new","","Create a new Memchr2 that's initalized to zero with a haystack",2,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"size_hint","","",2,null]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on non-blocking APIs, event notification, and other useful utilities for building high performance IO apps.","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space `Poll` registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated `Registration`.",null,null],[3,"PollOpt","","Options supplied when registering an `Evented` handle with `Poll`",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",0,null],[3,"Events","","A collection of readiness events.",null,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"pollopt"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"ordering"}}],[11,"empty","","Return a `PollOpt` representing no set options.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"edge","","Return a `PollOpt` representing edge-triggered notifications.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"level","","Return a `PollOpt` representing level-triggered notifications.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"is_edge","","Returns true if the options include edge-triggered notifications.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_level","","Returns true if the options include level-triggered notifications.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains","","Returns true if `self` is a superset of `other`.",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"bool"}}],[11,"insert","","Adds all options represented by `other` into `self`.",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":null}],[11,"remove","","Removes all options represented by `other` from `self`.",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":null}],[11,"bitor","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"bitxor","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"bitand","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"pollopt"}],"output":{"name":"pollopt"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"ordering"}}],[11,"empty","","Returns the empty `Ready` set.",2,{"inputs":[],"output":{"name":"ready"}}],[11,"readable","","Returns a `Ready` representing readable readiness.",2,{"inputs":[],"output":{"name":"ready"}}],[11,"writable","","Returns a `Ready` representing writable readiness.",2,{"inputs":[],"output":{"name":"ready"}}],[11,"is_empty","","Returns true if `Ready` is the empty set",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_readable","","Returns true if the value includes readable readiness",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_writable","","Returns true if the value includes writable readiness",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"remove","","Removes all options represented by `other` from `self`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"contains","","Returns true if `self` is a superset of `other`.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"bitor","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"bitor_assign","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"bitxor","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"bitxor_assign","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"bitand","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"bitand_assign","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ready"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"setreadiness"}}],[11,"new","","Return a new `Poll` handle.",4,{"inputs":[],"output":{"generics":["poll"],"name":"result"}}],[11,"register","","Register an `Evented` handle with the `Poll` instance.",4,{"inputs":[{"name":"self"},{"name":"e"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",4,{"inputs":[{"name":"self"},{"name":"e"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",4,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"poll","","Wait for readiness events",4,{"inputs":[{"name":"self"},{"name":"events"},{"generics":["duration"],"name":"option"}],"output":{"generics":["usize"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity` events.",5,{"inputs":[{"name":"usize"}],"output":{"name":"events"}}],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the `Event` values.",5,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"clear","","Clearing all `Event` values from container explicitly.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new2","","Create and return a new `Registration` and the associated `SetReadiness`.",6,null],[11,"register","","",6,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",6,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",6,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"readiness","","Returns the registration's current readiness.",3,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"set_readiness","","Set the registration's readiness",3,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"unixready"}],"output":{"name":"ready"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"token"}}],[0,"net","","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a remote socket.",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the specified address.",7,{"inputs":[{"name":"socketaddr"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpBuilder`, connecting it to the address specified.",7,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,{"inputs":[{"name":"tcpstream"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",7,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",7,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",7,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",7,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",7,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",7,null],[11,"read_bufs","","Read in a list of buffers all at once.",7,null],[11,"write_bufs","","Write a list of buffers all at once.",7,null],[11,"read","","",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"register","","",7,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",7,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",7,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Convenience method to bind a new TCP listener to the specified address to receive new connections.",8,{"inputs":[{"name":"socketaddr"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"from_listener","","Creates a new `TcpListener` from an instance of a `std::net::TcpListener` type.",8,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"accept","","Accepts a new `TcpStream`.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",8,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",8,{"inputs":[{"name":"self"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"register","","",8,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",8,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",8,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"into_raw_fd","","",7,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",7,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",7,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcpstream"}}],[11,"into_raw_fd","","",8,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",8,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",8,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcplistener"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a UDP socket from the given address.",9,{"inputs":[{"name":"socketaddr"}],"output":{"generics":["udpsocket"],"name":"result"}}],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std socket.",9,{"inputs":[{"name":"udpsocket"}],"output":{"generics":["udpsocket"],"name":"result"}}],[11,"local_addr","","Returns the socket address that this socket was created from.",9,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["udpsocket"],"name":"result"}}],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",9,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"send","","Sends data on the socket to the address previously bound via connect(). On success, returns the number of bytes written.",9,null],[11,"recv","","Receives data from the socket previously bound with connect(). On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"connect","","Connects the UDP socket setting the default destination for `send()` and limiting packets that are read via `recv` from the address specified in `addr`.",9,{"inputs":[{"name":"self"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"register","","",9,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",9,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",9,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"into_raw_fd","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",9,{"inputs":[{"name":"rawfd"}],"output":{"name":"udpsocket"}}],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","[`Events`] iterator.",null,null],[3,"Event","","An readiness event returned by [`Poll::poll`].",null,null],[8,"Evented","","A value that may be registered with `Poll`",null,null],[10,"register","","Register `self` with the given `Poll` instance.",10,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",null,null],[12,"0","","",11,null],[3,"UnixReady","","Unix specific extensions to `Ready`",null,null],[11,"clone","mio::event","",12,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Event` containing `readiness` and `token`",12,{"inputs":[{"name":"ready"},{"name":"token"}],"output":{"name":"event"}}],[11,"readiness","","Returns the event's readiness.",12,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"token","","Returns the event's token.",12,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"fmt","mio::unix","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"register","","",11,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"reregister","","",11,{"inputs":[{"name":"self"},{"name":"poll"},{"name":"token"},{"name":"ready"},{"name":"pollopt"}],"output":{"name":"result"}}],[11,"deregister","","",11,{"inputs":[{"name":"self"},{"name":"poll"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unixready"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"bool"}}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"ordering"}}],[11,"error","","Returns a `Ready` representing error readiness.",14,{"inputs":[],"output":{"name":"unixready"}}],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,{"inputs":[],"output":{"name":"unixready"}}],[11,"is_error","","Returns true if the value includes error readiness",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_hup","","Returns true if the value includes HUP readiness",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",14,{"inputs":[{"name":"ready"}],"output":{"name":"unixready"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"ready"}}],[11,"bitor","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"bitxor","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"bitand","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"sub","","",14,{"inputs":[{"name":"self"},{"name":"unixready"}],"output":{"name":"unixready"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"SetReadiness"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["nalgebra"] = {"doc":"nalgebra","items":[[8,"Real","nalgebra","Trait shared by all reals.",null,null],[10,"floor","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","",0,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","",0,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","",0,null],[10,"exp_m1","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pi","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"two_pi","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_2","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_3","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_4","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_6","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_8","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_1_pi","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_pi","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_sqrt_pi","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"e","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"log2_e","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"log10_e","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"ln_2","","",0,{"inputs":[],"output":{"name":"self"}}],[10,"ln_10","","",0,{"inputs":[],"output":{"name":"self"}}],[3,"Id","","The universal identity element wrt. a given operator, usually noted `Id` with a context-dependent subscript.",null,null],[5,"id","","Gets the ubiquitous multiplicative identity element.",null,{"inputs":[],"output":{"name":"id"}}],[5,"one","","Gets the multiplicative identity element.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Gets the additive identity element.",null,{"inputs":[],"output":{"name":"t"}}],[5,"origin","","Gets the origin of the given point.",null,{"inputs":[],"output":{"name":"p"}}],[5,"dimension","","The dimension of the given algebraic entity seen as a vector space.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"wrap","","Wraps `val` into the range `[min, max]` using modular arithmetics.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"clamp","","Returns a reference to the input value clamped to the interval `[min, max]`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Same as `cmp::max`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"min","","Same as `cmp::min`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"abs","","The absolute value of `a`.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"inf","","Returns the infimum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"sup","","Returns the supremum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"inf_sup","","Returns simultaneously the infimum and supremum of `a` and `b`.",null,null],[5,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"generics":["ordering"],"name":"option"}}],[5,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to `min` or `max`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_sort2","","Sorts two values in increasing order using a partial ordering.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"try_inverse","","Tries to gets an inverted copy of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"option"}}],[5,"inverse","","Computes the multiplicative inverse of an (always invertible) algebraic entity.",null,{"inputs":[{"name":"m"}],"output":{"name":"m"}}],[5,"dot","","Computes the dot product of two vectors.",null,null],[5,"angle","","Computes the smallest angle between two vectors.",null,null],[5,"norm","","Computes the L2 (euclidean) norm of a vector.",null,null],[5,"norm_squared","","Computes the squared L2 (euclidean) norm of the vector `v`.",null,null],[5,"normalize","","Computes the normalized version of the vector `v`.",null,{"inputs":[{"name":"v"}],"output":{"name":"v"}}],[5,"try_normalize","","Computes the normalized version of the vector `v` or returns `None` if its norm is smaller than `min_norm`.",null,null],[5,"center","","The center of two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[5,"distance","","The distance between two points.",null,null],[5,"distance_squared","","The squared distance between two points.",null,null],[5,"convert","","Converts an object from one type to an equivalent or more general one.",null,{"inputs":[{"name":"from"}],"output":{"name":"to"}}],[5,"try_convert","","Attempts to convert an object to a more specific one.",null,{"inputs":[{"name":"from"}],"output":{"name":"option"}}],[5,"is_convertible","","Indicates if `::try_convert` will succeed without actually performing the conversion.",null,{"inputs":[{"name":"from"}],"output":{"name":"bool"}}],[5,"convert_unchecked","","Use with care! Same as `try_convert` but without any property checks.",null,{"inputs":[{"name":"from"}],"output":{"name":"to"}}],[5,"convert_ref","","Converts an object from one type to an equivalent or more general one.",null,{"inputs":[{"name":"from"}],"output":{"name":"to"}}],[5,"try_convert_ref","","Attempts to convert an object to a more specific one.",null,{"inputs":[{"name":"from"}],"output":{"name":"option"}}],[5,"convert_ref_unchecked","","Use with care! Same as `try_convert` but without any property checks.",null,{"inputs":[{"name":"from"}],"output":{"name":"to"}}],[0,"core","","[Reexported at the root of this crate.] Data structures for vector and matrix computations.",null,null],[3,"Matrix","nalgebra::core","The most generic column-major matrix (and vector) type.",null,null],[12,"data","","The data storage that contains all the matrix components and informations about its number of rows and column (if needed).",1,null],[3,"Unit","","A wrapper that ensures the undelying algebraic entity has a unit norm.",null,null],[3,"SliceStorage","","A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.",null,null],[3,"SliceStorageMut","","A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.",null,null],[3,"MatrixArray","","A array-based statically sized matrix data storage.",null,null],[3,"MatrixVec","","A Vec-based matrix data storage. It may be dynamically-sized.",null,null],[0,"dimension","","Traits and tags for identifying the dimension of all algebraic entities.",null,null],[3,"Dynamic","nalgebra::core::dimension","Dim of dynamically-sized algebraic entities.",null,null],[3,"U1","","",null,null],[3,"U0","","",null,null],[3,"U2","","",null,null],[3,"U3","","",null,null],[3,"U4","","",null,null],[3,"U5","","",null,null],[3,"U6","","",null,null],[3,"U7","","",null,null],[3,"U8","","",null,null],[3,"U9","","",null,null],[3,"U10","","",null,null],[3,"U11","","",null,null],[3,"U12","","",null,null],[3,"U13","","",null,null],[3,"U14","","",null,null],[3,"U15","","",null,null],[3,"U16","","",null,null],[3,"U17","","",null,null],[3,"U18","","",null,null],[3,"U19","","",null,null],[3,"U20","","",null,null],[3,"U21","","",null,null],[3,"U22","","",null,null],[3,"U23","","",null,null],[3,"U24","","",null,null],[3,"U25","","",null,null],[3,"U26","","",null,null],[3,"U27","","",null,null],[3,"U28","","",null,null],[3,"U29","","",null,null],[3,"U30","","",null,null],[3,"U31","","",null,null],[3,"U32","","",null,null],[3,"U33","","",null,null],[3,"U34","","",null,null],[3,"U35","","",null,null],[3,"U36","","",null,null],[3,"U37","","",null,null],[3,"U38","","",null,null],[3,"U39","","",null,null],[3,"U40","","",null,null],[3,"U41","","",null,null],[3,"U42","","",null,null],[3,"U43","","",null,null],[3,"U44","","",null,null],[3,"U45","","",null,null],[3,"U46","","",null,null],[3,"U47","","",null,null],[3,"U48","","",null,null],[3,"U49","","",null,null],[3,"U50","","",null,null],[3,"U51","","",null,null],[3,"U52","","",null,null],[3,"U53","","",null,null],[3,"U54","","",null,null],[3,"U55","","",null,null],[3,"U56","","",null,null],[3,"U57","","",null,null],[3,"U58","","",null,null],[3,"U59","","",null,null],[3,"U60","","",null,null],[3,"U61","","",null,null],[3,"U62","","",null,null],[3,"U63","","",null,null],[3,"U64","","",null,null],[3,"U65","","",null,null],[3,"U66","","",null,null],[3,"U67","","",null,null],[3,"U68","","",null,null],[3,"U69","","",null,null],[3,"U70","","",null,null],[3,"U71","","",null,null],[3,"U72","","",null,null],[3,"U73","","",null,null],[3,"U74","","",null,null],[3,"U75","","",null,null],[3,"U76","","",null,null],[3,"U77","","",null,null],[3,"U78","","",null,null],[3,"U79","","",null,null],[3,"U80","","",null,null],[3,"U81","","",null,null],[3,"U82","","",null,null],[3,"U83","","",null,null],[3,"U84","","",null,null],[3,"U85","","",null,null],[3,"U86","","",null,null],[3,"U87","","",null,null],[3,"U88","","",null,null],[3,"U89","","",null,null],[3,"U90","","",null,null],[3,"U91","","",null,null],[3,"U92","","",null,null],[3,"U93","","",null,null],[3,"U94","","",null,null],[3,"U95","","",null,null],[3,"U96","","",null,null],[3,"U97","","",null,null],[3,"U98","","",null,null],[3,"U99","","",null,null],[3,"U100","","",null,null],[3,"U101","","",null,null],[3,"U102","","",null,null],[3,"U103","","",null,null],[3,"U104","","",null,null],[3,"U105","","",null,null],[3,"U106","","",null,null],[3,"U107","","",null,null],[3,"U108","","",null,null],[3,"U109","","",null,null],[3,"U110","","",null,null],[3,"U111","","",null,null],[3,"U112","","",null,null],[3,"U113","","",null,null],[3,"U114","","",null,null],[3,"U115","","",null,null],[3,"U116","","",null,null],[3,"U117","","",null,null],[3,"U118","","",null,null],[3,"U119","","",null,null],[3,"U120","","",null,null],[3,"U121","","",null,null],[3,"U122","","",null,null],[3,"U123","","",null,null],[3,"U124","","",null,null],[3,"U125","","",null,null],[3,"U126","","",null,null],[3,"U127","","",null,null],[6,"DimSum","","",null,null],[6,"DimNameSum","","",null,null],[6,"DimProd","","",null,null],[6,"DimNameProd","","",null,null],[6,"DimDiff","","",null,null],[6,"DimNameDiff","","",null,null],[6,"DimQuot","","",null,null],[6,"DimNameQuot","","",null,null],[6,"DimMinimum","","",null,null],[6,"DimNameNimimum","","",null,null],[6,"DimMaximum","","",null,null],[6,"DimNameMaximum","","",null,null],[8,"IsDynamic","","Trait implemented by `Dynamic`.",null,null],[8,"IsNotStaticOne","","Trait implemented by `Dynamic` and type-level integers different from `U1`.",null,null],[8,"Dim","","Trait implemented by any type that can be used as a dimension. This includes type-level integers and `Dynamic` (for dimensions not known at compile-time).",null,null],[11,"is","","",2,{"inputs":[],"output":{"name":"bool"}}],[10,"try_to_usize","","Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self = Dynamic`.",2,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[10,"value","","Gets the run-time value of `self`. For type-level integers, this is the same as `Self::try_to_usize().unwrap()`.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"from_usize","","Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level integer and `dim != Self::try_to_usize().unwrap()`.",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[8,"DimAdd","","",null,null],[16,"Output","","",3,null],[10,"add","","",3,null],[8,"DimNameAdd","","",null,null],[16,"Output","","",4,null],[10,"add","","",4,null],[8,"DimMul","","",null,null],[16,"Output","","",5,null],[10,"mul","","",5,null],[8,"DimNameMul","","",null,null],[16,"Output","","",6,null],[10,"mul","","",6,null],[8,"DimSub","","",null,null],[16,"Output","","",7,null],[10,"sub","","",7,null],[8,"DimNameSub","","",null,null],[16,"Output","","",8,null],[10,"sub","","",8,null],[8,"DimDiv","","",null,null],[16,"Output","","",9,null],[10,"div","","",9,null],[8,"DimNameDiv","","",null,null],[16,"Output","","",10,null],[10,"div","","",10,null],[8,"DimMin","","",null,null],[16,"Output","","",11,null],[10,"min","","",11,null],[8,"DimNameMin","","",null,null],[16,"Output","","",12,null],[10,"min","","",12,null],[8,"DimMax","","",null,null],[16,"Output","","",13,null],[10,"max","","",13,null],[8,"DimNameMax","","",null,null],[16,"Output","","",14,null],[10,"max","","",14,null],[8,"DimName","","Trait implemented exclusively by type-level integers.",null,null],[16,"Value","","",15,null],[10,"name","","The name of this dimension, i.e., the singleton `Self`.",15,{"inputs":[],"output":{"name":"self"}}],[11,"dim","","The value of this dimension.",15,{"inputs":[],"output":{"name":"usize"}}],[8,"NamedDim","","",null,null],[16,"Name","","",16,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"dynamic"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"dynamic"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"dynamic"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","A dynamic size equal to `value`.",17,{"inputs":[{"name":"usize"}],"output":{"name":"dynamic"}}],[11,"try_to_usize","","",17,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",17,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"add","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"dynamic"}}],[11,"sub","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"dynamic"}}],[11,"add","","",17,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"dynamic"}}],[11,"mul","","",17,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"dynamic"}}],[11,"sub","","",17,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"dynamic"}}],[11,"div","","",17,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"dynamic"}}],[11,"min","","",17,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"dynamic"}}],[11,"max","","",17,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"dynamic"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u1"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"u1"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",18,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",18,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u0"}}],[11,"hash","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"u0"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",19,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",19,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u2"}}],[11,"hash","","",20,null],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"u2"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",20,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",20,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u3"}}],[11,"hash","","",21,null],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"u3"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",21,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",21,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u4"}}],[11,"hash","","",22,null],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"u4"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",22,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",22,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u5"}}],[11,"hash","","",23,null],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"u5"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",23,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",23,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u6"}}],[11,"hash","","",24,null],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"u6"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",24,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",24,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u7"}}],[11,"hash","","",25,null],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"u7"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",25,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",25,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"hash","","",26,null],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",26,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",26,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u9"}}],[11,"hash","","",27,null],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"u9"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",27,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",27,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u10"}}],[11,"hash","","",28,null],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"u10"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",28,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",28,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u11"}}],[11,"hash","","",29,null],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"u11"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",29,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",29,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",29,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u12"}}],[11,"hash","","",30,null],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"u12"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",30,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",30,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u13"}}],[11,"hash","","",31,null],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"u13"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",31,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",31,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u14"}}],[11,"hash","","",32,null],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"u14"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",32,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",32,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u15"}}],[11,"hash","","",33,null],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"u15"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",33,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",33,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"hash","","",34,null],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",34,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",34,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",34,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u17"}}],[11,"hash","","",35,null],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"u17"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",35,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",35,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",35,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u18"}}],[11,"hash","","",36,null],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"u18"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",36,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",36,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",36,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u19"}}],[11,"hash","","",37,null],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"u19"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",37,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",37,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",37,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u20"}}],[11,"hash","","",38,null],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"u20"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",38,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",38,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",38,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u21"}}],[11,"hash","","",39,null],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"u21"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",39,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",39,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u22"}}],[11,"hash","","",40,null],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"u22"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",40,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",40,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",40,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u23"}}],[11,"hash","","",41,null],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"u23"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",41,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",41,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",41,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u24"}}],[11,"hash","","",42,null],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"u24"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",42,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",42,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",42,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u25"}}],[11,"hash","","",43,null],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"u25"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",43,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",43,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",43,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u26"}}],[11,"hash","","",44,null],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"u26"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",44,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",44,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",44,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u27"}}],[11,"hash","","",45,null],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"u27"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",45,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",45,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u28"}}],[11,"hash","","",46,null],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"u28"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",46,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",46,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u29"}}],[11,"hash","","",47,null],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"u29"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",47,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",47,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",47,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u30"}}],[11,"hash","","",48,null],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"u30"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",48,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",48,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",48,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u31"}}],[11,"hash","","",49,null],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"u31"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",49,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",49,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",49,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"hash","","",50,null],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",50,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",50,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",50,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u33"}}],[11,"hash","","",51,null],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"u33"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",51,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",51,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",51,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u34"}}],[11,"hash","","",52,null],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"u34"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",52,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",52,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",52,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u35"}}],[11,"hash","","",53,null],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"u35"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",53,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",53,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",53,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u36"}}],[11,"hash","","",54,null],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"u36"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",54,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",54,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",54,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u37"}}],[11,"hash","","",55,null],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"u37"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",55,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",55,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",55,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u38"}}],[11,"hash","","",56,null],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"u38"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",56,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",56,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",56,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u39"}}],[11,"hash","","",57,null],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"u39"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",57,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",57,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",57,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u40"}}],[11,"hash","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"u40"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",58,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",58,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",58,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u41"}}],[11,"hash","","",59,null],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"u41"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",59,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",59,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",59,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u42"}}],[11,"hash","","",60,null],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"u42"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",60,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",60,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",60,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",60,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u43"}}],[11,"hash","","",61,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"u43"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",61,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",61,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",61,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",61,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u44"}}],[11,"hash","","",62,null],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"u44"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",62,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",62,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",62,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u45"}}],[11,"hash","","",63,null],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"u45"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",63,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",63,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",63,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",63,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u46"}}],[11,"hash","","",64,null],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"u46"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",64,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",64,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",64,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",64,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u47"}}],[11,"hash","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"u47"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",65,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",65,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",65,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",65,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u48"}}],[11,"hash","","",66,null],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"u48"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",66,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",66,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",66,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",66,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u49"}}],[11,"hash","","",67,null],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"u49"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",67,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",67,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",67,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",67,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u50"}}],[11,"hash","","",68,null],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"u50"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",68,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",68,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",68,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",68,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u51"}}],[11,"hash","","",69,null],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"u51"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",69,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",69,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",69,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",69,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u52"}}],[11,"hash","","",70,null],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"u52"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",70,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",70,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",70,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",70,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u53"}}],[11,"hash","","",71,null],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"u53"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",71,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",71,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",71,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",71,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u54"}}],[11,"hash","","",72,null],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"u54"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",72,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",72,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",72,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",72,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"u55"}}],[11,"hash","","",73,null],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"u55"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",73,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",73,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",73,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",73,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"u56"}}],[11,"hash","","",74,null],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"u56"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",74,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",74,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",74,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",74,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"u57"}}],[11,"hash","","",75,null],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"u57"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",75,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",75,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",75,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",75,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"u58"}}],[11,"hash","","",76,null],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"u58"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",76,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",76,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",76,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",76,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"u59"}}],[11,"hash","","",77,null],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"u59"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",77,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",77,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",77,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",77,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"u60"}}],[11,"hash","","",78,null],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"u60"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",78,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",78,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",78,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",78,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"u61"}}],[11,"hash","","",79,null],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"u61"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",79,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",79,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",79,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",79,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"u62"}}],[11,"hash","","",80,null],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"u62"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",80,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",80,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",80,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",80,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u63"}}],[11,"hash","","",81,null],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"u63"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",81,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",81,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",81,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",81,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"hash","","",82,null],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",82,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",82,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",82,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",82,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"u65"}}],[11,"hash","","",83,null],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"u65"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",83,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",83,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",83,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",83,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u66"}}],[11,"hash","","",84,null],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"u66"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",84,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",84,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",84,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",84,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u67"}}],[11,"hash","","",85,null],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"u67"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",85,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",85,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",85,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",85,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u68"}}],[11,"hash","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"u68"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",86,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",86,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",86,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",86,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u69"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"u69"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",87,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",87,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",87,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",87,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u70"}}],[11,"hash","","",88,null],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"u70"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",88,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",88,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",88,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",88,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u71"}}],[11,"hash","","",89,null],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"u71"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",89,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",89,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",89,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",89,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u72"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"u72"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",90,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",90,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",90,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",90,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u73"}}],[11,"hash","","",91,null],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"u73"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",91,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",91,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",91,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",91,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u74"}}],[11,"hash","","",92,null],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"u74"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",92,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",92,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",92,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",92,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u75"}}],[11,"hash","","",93,null],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"u75"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",93,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",93,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",93,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",93,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u76"}}],[11,"hash","","",94,null],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"u76"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",94,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",94,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",94,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",94,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u77"}}],[11,"hash","","",95,null],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"u77"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",95,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",95,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",95,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",95,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u78"}}],[11,"hash","","",96,null],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"u78"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",96,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",96,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",96,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",96,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u79"}}],[11,"hash","","",97,null],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"u79"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",97,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",97,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",97,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",97,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u80"}}],[11,"hash","","",98,null],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"u80"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",98,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",98,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",98,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",98,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u81"}}],[11,"hash","","",99,null],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"u81"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",99,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",99,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",99,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",99,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"u82"}}],[11,"hash","","",100,null],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"u82"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",100,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",100,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",100,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",100,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u83"}}],[11,"hash","","",101,null],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"u83"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",101,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",101,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",101,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",101,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u84"}}],[11,"hash","","",102,null],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"u84"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",102,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",102,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",102,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",102,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u85"}}],[11,"hash","","",103,null],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"u85"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",103,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",103,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",103,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",103,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"u86"}}],[11,"hash","","",104,null],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"u86"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",104,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",104,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",104,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",104,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u87"}}],[11,"hash","","",105,null],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"u87"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",105,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",105,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",105,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",105,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u88"}}],[11,"hash","","",106,null],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"u88"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",106,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",106,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",106,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",106,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u89"}}],[11,"hash","","",107,null],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"u89"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",107,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",107,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",107,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",107,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"u90"}}],[11,"hash","","",108,null],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"u90"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",108,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",108,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",108,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",108,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u91"}}],[11,"hash","","",109,null],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"u91"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",109,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",109,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",109,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",109,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"u92"}}],[11,"hash","","",110,null],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"u92"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",110,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",110,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",110,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",110,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"u93"}}],[11,"hash","","",111,null],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"u93"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",111,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",111,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",111,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",111,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u94"}}],[11,"hash","","",112,null],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"u94"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",112,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",112,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",112,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",112,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u95"}}],[11,"hash","","",113,null],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"u95"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",113,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",113,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",113,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",113,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u96"}}],[11,"hash","","",114,null],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"u96"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",114,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",114,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",114,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"u97"}}],[11,"hash","","",115,null],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"u97"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",115,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",115,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",115,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",115,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"u98"}}],[11,"hash","","",116,null],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"u98"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",116,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",116,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",116,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",116,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"u99"}}],[11,"hash","","",117,null],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"u99"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",117,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",117,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",117,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",117,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"u100"}}],[11,"hash","","",118,null],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"u100"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",118,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",118,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",118,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",118,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u101"}}],[11,"hash","","",119,null],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"u101"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",119,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",119,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",119,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",119,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"u102"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"u102"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",120,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",120,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",120,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",120,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"u103"}}],[11,"hash","","",121,null],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"u103"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",121,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",121,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",121,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",121,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u104"}}],[11,"hash","","",122,null],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"u104"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",122,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",122,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",122,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",122,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"u105"}}],[11,"hash","","",123,null],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"u105"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",123,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",123,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",123,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",123,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u106"}}],[11,"hash","","",124,null],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"u106"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",124,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",124,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",124,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",124,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u107"}}],[11,"hash","","",125,null],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"u107"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",125,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",125,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",125,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",125,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"u108"}}],[11,"hash","","",126,null],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"u108"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",126,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",126,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",126,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",126,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u109"}}],[11,"hash","","",127,null],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"u109"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",127,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",127,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",127,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",127,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"u110"}}],[11,"hash","","",128,null],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"u110"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",128,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",128,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",128,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",128,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"u111"}}],[11,"hash","","",129,null],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"u111"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",129,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",129,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",129,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",129,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u112"}}],[11,"hash","","",130,null],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"u112"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",130,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",130,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",130,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",130,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"u113"}}],[11,"hash","","",131,null],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"u113"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",131,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",131,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",131,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",131,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u114"}}],[11,"hash","","",132,null],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"u114"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",132,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",132,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",132,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",132,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"u115"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"u115"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",133,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",133,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",133,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",133,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"u116"}}],[11,"hash","","",134,null],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"u116"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",134,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",134,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",134,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",134,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"u117"}}],[11,"hash","","",135,null],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"u117"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",135,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",135,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",135,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",135,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"u118"}}],[11,"hash","","",136,null],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"u118"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",136,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",136,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",136,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",136,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"u119"}}],[11,"hash","","",137,null],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"u119"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",137,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",137,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",137,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",137,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"u120"}}],[11,"hash","","",138,null],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"u120"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",138,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",138,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",138,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",138,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u121"}}],[11,"hash","","",139,null],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"u121"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",139,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",139,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",139,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",139,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"u122"}}],[11,"hash","","",140,null],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"u122"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",140,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",140,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",140,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",140,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u123"}}],[11,"hash","","",141,null],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"u123"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",141,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",141,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",141,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",141,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"u124"}}],[11,"hash","","",142,null],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"u124"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",142,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",142,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",142,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",142,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"u125"}}],[11,"hash","","",143,null],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"u125"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",143,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",143,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",143,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",143,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"u126"}}],[11,"hash","","",144,null],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"u126"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",144,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",144,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",144,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",144,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u127"}}],[11,"hash","","",145,null],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"u127"}],"output":{"name":"bool"}}],[11,"try_to_usize","","",145,{"inputs":[],"output":{"generics":["usize"],"name":"option"}}],[11,"from_usize","","",145,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"value","","",145,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"name","","",145,{"inputs":[],"output":{"name":"self"}}],[0,"constraint","nalgebra::core","Compatibility constraints between matrix shapes, e.g., for addition or multiplication.",null,null],[3,"ShapeConstraint","nalgebra::core::constraint","A type used in `where` clauses for enforcing constraints.",null,null],[8,"AreMultipliable","","Constraints `C1` and `R2` to be equivalent.",null,null],[8,"DimEq","","Constraints `D1` and `D2` to be equivalent.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",146,null],[8,"SameNumberOfRows","","Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",147,null],[8,"SameNumberOfColumns","","Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",148,null],[8,"SameDimension","","Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic entities (e.g. square matrices).",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",149,null],[0,"allocator","nalgebra::core","Abstract definition of a matrix data storage allocator.",null,null],[6,"SameShapeR","nalgebra::core::allocator","The number of rows of the result of a componentwise operation on two matrices.",null,null],[6,"SameShapeC","","The number of columns of the result of a componentwise operation on two matrices.",null,null],[8,"Allocator","","A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()` elements of type `N`.",null,null],[16,"Buffer","","The type of buffer this allocator can instanciate.",150,null],[10,"allocate_uninitialized","","Allocates a buffer with the given number of rows and columns without initializing its content.",150,null],[10,"allocate_from_iterator","","Allocates a buffer initialized with the content of the given iterator.",150,null],[8,"Reallocator","","A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom Ã— CFrom) elements to a smaller or larger size (RTo, CTo).",null,null],[10,"reallocate_copy","","Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer `buf`. Data stored by `buf` are linearly copied to the output:",151,null],[8,"SameShapeAllocator","","Restricts the given number of rows and columns to be respectively the same.",null,null],[8,"SameShapeVectorAllocator","","Restricts the given number of rows to be equal.",null,null],[0,"storage","nalgebra::core","Abstract definition of a matrix data storage.",null,null],[6,"SameShapeStorage","nalgebra::core::storage","The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.",null,null],[6,"Owned","","The owned data storage that can be allocated from `S`.",null,null],[6,"RStride","","The row-stride of the owned data storage for a buffer of dimension `(R, C)`.",null,null],[6,"CStride","","The column-stride of the owned data storage for a buffer of dimension `(R, C)`.",null,null],[8,"Storage","","The trait shared by all matrix data storage.",null,null],[16,"RStride","","The static stride of this storage's rows.",152,null],[16,"CStride","","The static stride of this storage's columns.",152,null],[10,"ptr","","The matrix data pointer.",152,null],[10,"shape","","The dimension of the matrix at run-time. Arr length of zero indicates the additive identity element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.",152,null],[10,"strides","","The spacing between concecutive row elements and consecutive column elements.",152,null],[11,"linear_index","","Compute the index corresponding to the irow-th row and icol-th column of this matrix. The index must be such that the following holds:",152,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"get_address_unchecked_linear","","Gets the address of the i-th matrix component without performing bound-checking.",152,null],[11,"get_address_unchecked","","Gets the address of the i-th matrix component without performing bound-checking.",152,null],[11,"get_unchecked_linear","","Retrieves a reference to the i-th element without bound-checking.",152,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"get_unchecked","","Retrieves a reference to the i-th element without bound-checking.",152,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"n"}}],[10,"is_contiguous","","Indicates whether this data buffer stores its elements contiguously.",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"as_slice","","Retrieves the data buffer as a contiguous slice.",152,null],[10,"into_owned","","Builds a matrix data storage that does not contain any reference.",152,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[10,"clone_owned","","Clones this data storage to one that does not contain any reference.",152,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[8,"StorageMut","","Trait implemented by matrix data storage that can provide a mutable access to its elements.",null,null],[10,"ptr_mut","","The matrix mutable data pointer.",153,null],[11,"get_address_unchecked_linear_mut","","Gets the mutable address of the i-th matrix component without performing bound-checking.",153,null],[11,"get_address_unchecked_mut","","Gets the mutable address of the i-th matrix component without performing bound-checking.",153,null],[11,"get_unchecked_linear_mut","","Retrieves a mutable reference to the i-th element without bound-checking.",153,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"get_unchecked_mut","","Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.",153,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"n"}}],[11,"swap_unchecked_linear","","Swaps two elements using their linear index without bound-checking.",153,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_unchecked","","Swaps two elements without bound-checking.",153,null],[10,"as_mut_slice","","Retrieves the mutable data buffer as a contiguous slice.",153,null],[8,"ContiguousStorage","","A matrix storage that is stored contiguously in memory.",null,null],[8,"ContiguousStorageMut","","A mutable matrix storage that is stored contiguously in memory.",null,null],[0,"coordinates","nalgebra::core","Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead of `v[2]`.",null,null],[3,"X","nalgebra::core::coordinates","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",154,null],[3,"XY","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",155,null],[12,"y","","",155,null],[3,"XYZ","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",156,null],[12,"y","","",156,null],[12,"z","","",156,null],[3,"XYZW","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",157,null],[12,"y","","",157,null],[12,"z","","",157,null],[12,"w","","",157,null],[3,"XYZWA","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",158,null],[12,"y","","",158,null],[12,"z","","",158,null],[12,"w","","",158,null],[12,"a","","",158,null],[3,"XYZWAB","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",159,null],[12,"y","","",159,null],[12,"z","","",159,null],[12,"w","","",159,null],[12,"a","","",159,null],[12,"b","","",159,null],[3,"IJKW","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"i","","",160,null],[12,"j","","",160,null],[12,"k","","",160,null],[12,"w","","",160,null],[3,"M2x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",161,null],[12,"m21","","",161,null],[12,"m12","","",161,null],[12,"m22","","",161,null],[3,"M2x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",162,null],[12,"m21","","",162,null],[12,"m12","","",162,null],[12,"m22","","",162,null],[12,"m13","","",162,null],[12,"m23","","",162,null],[3,"M2x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",163,null],[12,"m21","","",163,null],[12,"m12","","",163,null],[12,"m22","","",163,null],[12,"m13","","",163,null],[12,"m23","","",163,null],[12,"m14","","",163,null],[12,"m24","","",163,null],[3,"M2x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",164,null],[12,"m21","","",164,null],[12,"m12","","",164,null],[12,"m22","","",164,null],[12,"m13","","",164,null],[12,"m23","","",164,null],[12,"m14","","",164,null],[12,"m24","","",164,null],[12,"m15","","",164,null],[12,"m25","","",164,null],[3,"M2x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",165,null],[12,"m21","","",165,null],[12,"m12","","",165,null],[12,"m22","","",165,null],[12,"m13","","",165,null],[12,"m23","","",165,null],[12,"m14","","",165,null],[12,"m24","","",165,null],[12,"m15","","",165,null],[12,"m25","","",165,null],[12,"m16","","",165,null],[12,"m26","","",165,null],[3,"M3x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",166,null],[12,"m21","","",166,null],[12,"m31","","",166,null],[12,"m12","","",166,null],[12,"m22","","",166,null],[12,"m32","","",166,null],[3,"M3x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",167,null],[12,"m21","","",167,null],[12,"m31","","",167,null],[12,"m12","","",167,null],[12,"m22","","",167,null],[12,"m32","","",167,null],[12,"m13","","",167,null],[12,"m23","","",167,null],[12,"m33","","",167,null],[3,"M3x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",168,null],[12,"m21","","",168,null],[12,"m31","","",168,null],[12,"m12","","",168,null],[12,"m22","","",168,null],[12,"m32","","",168,null],[12,"m13","","",168,null],[12,"m23","","",168,null],[12,"m33","","",168,null],[12,"m14","","",168,null],[12,"m24","","",168,null],[12,"m34","","",168,null],[3,"M3x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",169,null],[12,"m21","","",169,null],[12,"m31","","",169,null],[12,"m12","","",169,null],[12,"m22","","",169,null],[12,"m32","","",169,null],[12,"m13","","",169,null],[12,"m23","","",169,null],[12,"m33","","",169,null],[12,"m14","","",169,null],[12,"m24","","",169,null],[12,"m34","","",169,null],[12,"m15","","",169,null],[12,"m25","","",169,null],[12,"m35","","",169,null],[3,"M3x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",170,null],[12,"m21","","",170,null],[12,"m31","","",170,null],[12,"m12","","",170,null],[12,"m22","","",170,null],[12,"m32","","",170,null],[12,"m13","","",170,null],[12,"m23","","",170,null],[12,"m33","","",170,null],[12,"m14","","",170,null],[12,"m24","","",170,null],[12,"m34","","",170,null],[12,"m15","","",170,null],[12,"m25","","",170,null],[12,"m35","","",170,null],[12,"m16","","",170,null],[12,"m26","","",170,null],[12,"m36","","",170,null],[3,"M4x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",171,null],[12,"m21","","",171,null],[12,"m31","","",171,null],[12,"m41","","",171,null],[12,"m12","","",171,null],[12,"m22","","",171,null],[12,"m32","","",171,null],[12,"m42","","",171,null],[3,"M4x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",172,null],[12,"m21","","",172,null],[12,"m31","","",172,null],[12,"m41","","",172,null],[12,"m12","","",172,null],[12,"m22","","",172,null],[12,"m32","","",172,null],[12,"m42","","",172,null],[12,"m13","","",172,null],[12,"m23","","",172,null],[12,"m33","","",172,null],[12,"m43","","",172,null],[3,"M4x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",173,null],[12,"m21","","",173,null],[12,"m31","","",173,null],[12,"m41","","",173,null],[12,"m12","","",173,null],[12,"m22","","",173,null],[12,"m32","","",173,null],[12,"m42","","",173,null],[12,"m13","","",173,null],[12,"m23","","",173,null],[12,"m33","","",173,null],[12,"m43","","",173,null],[12,"m14","","",173,null],[12,"m24","","",173,null],[12,"m34","","",173,null],[12,"m44","","",173,null],[3,"M4x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",174,null],[12,"m21","","",174,null],[12,"m31","","",174,null],[12,"m41","","",174,null],[12,"m12","","",174,null],[12,"m22","","",174,null],[12,"m32","","",174,null],[12,"m42","","",174,null],[12,"m13","","",174,null],[12,"m23","","",174,null],[12,"m33","","",174,null],[12,"m43","","",174,null],[12,"m14","","",174,null],[12,"m24","","",174,null],[12,"m34","","",174,null],[12,"m44","","",174,null],[12,"m15","","",174,null],[12,"m25","","",174,null],[12,"m35","","",174,null],[12,"m45","","",174,null],[3,"M4x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",175,null],[12,"m21","","",175,null],[12,"m31","","",175,null],[12,"m41","","",175,null],[12,"m12","","",175,null],[12,"m22","","",175,null],[12,"m32","","",175,null],[12,"m42","","",175,null],[12,"m13","","",175,null],[12,"m23","","",175,null],[12,"m33","","",175,null],[12,"m43","","",175,null],[12,"m14","","",175,null],[12,"m24","","",175,null],[12,"m34","","",175,null],[12,"m44","","",175,null],[12,"m15","","",175,null],[12,"m25","","",175,null],[12,"m35","","",175,null],[12,"m45","","",175,null],[12,"m16","","",175,null],[12,"m26","","",175,null],[12,"m36","","",175,null],[12,"m46","","",175,null],[3,"M5x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",176,null],[12,"m21","","",176,null],[12,"m31","","",176,null],[12,"m41","","",176,null],[12,"m51","","",176,null],[12,"m12","","",176,null],[12,"m22","","",176,null],[12,"m32","","",176,null],[12,"m42","","",176,null],[12,"m52","","",176,null],[3,"M5x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",177,null],[12,"m21","","",177,null],[12,"m31","","",177,null],[12,"m41","","",177,null],[12,"m51","","",177,null],[12,"m12","","",177,null],[12,"m22","","",177,null],[12,"m32","","",177,null],[12,"m42","","",177,null],[12,"m52","","",177,null],[12,"m13","","",177,null],[12,"m23","","",177,null],[12,"m33","","",177,null],[12,"m43","","",177,null],[12,"m53","","",177,null],[3,"M5x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",178,null],[12,"m21","","",178,null],[12,"m31","","",178,null],[12,"m41","","",178,null],[12,"m51","","",178,null],[12,"m12","","",178,null],[12,"m22","","",178,null],[12,"m32","","",178,null],[12,"m42","","",178,null],[12,"m52","","",178,null],[12,"m13","","",178,null],[12,"m23","","",178,null],[12,"m33","","",178,null],[12,"m43","","",178,null],[12,"m53","","",178,null],[12,"m14","","",178,null],[12,"m24","","",178,null],[12,"m34","","",178,null],[12,"m44","","",178,null],[12,"m54","","",178,null],[3,"M5x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",179,null],[12,"m21","","",179,null],[12,"m31","","",179,null],[12,"m41","","",179,null],[12,"m51","","",179,null],[12,"m12","","",179,null],[12,"m22","","",179,null],[12,"m32","","",179,null],[12,"m42","","",179,null],[12,"m52","","",179,null],[12,"m13","","",179,null],[12,"m23","","",179,null],[12,"m33","","",179,null],[12,"m43","","",179,null],[12,"m53","","",179,null],[12,"m14","","",179,null],[12,"m24","","",179,null],[12,"m34","","",179,null],[12,"m44","","",179,null],[12,"m54","","",179,null],[12,"m15","","",179,null],[12,"m25","","",179,null],[12,"m35","","",179,null],[12,"m45","","",179,null],[12,"m55","","",179,null],[3,"M5x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",180,null],[12,"m21","","",180,null],[12,"m31","","",180,null],[12,"m41","","",180,null],[12,"m51","","",180,null],[12,"m12","","",180,null],[12,"m22","","",180,null],[12,"m32","","",180,null],[12,"m42","","",180,null],[12,"m52","","",180,null],[12,"m13","","",180,null],[12,"m23","","",180,null],[12,"m33","","",180,null],[12,"m43","","",180,null],[12,"m53","","",180,null],[12,"m14","","",180,null],[12,"m24","","",180,null],[12,"m34","","",180,null],[12,"m44","","",180,null],[12,"m54","","",180,null],[12,"m15","","",180,null],[12,"m25","","",180,null],[12,"m35","","",180,null],[12,"m45","","",180,null],[12,"m55","","",180,null],[12,"m16","","",180,null],[12,"m26","","",180,null],[12,"m36","","",180,null],[12,"m46","","",180,null],[12,"m56","","",180,null],[3,"M6x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",181,null],[12,"m21","","",181,null],[12,"m31","","",181,null],[12,"m41","","",181,null],[12,"m51","","",181,null],[12,"m61","","",181,null],[12,"m12","","",181,null],[12,"m22","","",181,null],[12,"m32","","",181,null],[12,"m42","","",181,null],[12,"m52","","",181,null],[12,"m62","","",181,null],[3,"M6x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",182,null],[12,"m21","","",182,null],[12,"m31","","",182,null],[12,"m41","","",182,null],[12,"m51","","",182,null],[12,"m61","","",182,null],[12,"m12","","",182,null],[12,"m22","","",182,null],[12,"m32","","",182,null],[12,"m42","","",182,null],[12,"m52","","",182,null],[12,"m62","","",182,null],[12,"m13","","",182,null],[12,"m23","","",182,null],[12,"m33","","",182,null],[12,"m43","","",182,null],[12,"m53","","",182,null],[12,"m63","","",182,null],[3,"M6x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",183,null],[12,"m21","","",183,null],[12,"m31","","",183,null],[12,"m41","","",183,null],[12,"m51","","",183,null],[12,"m61","","",183,null],[12,"m12","","",183,null],[12,"m22","","",183,null],[12,"m32","","",183,null],[12,"m42","","",183,null],[12,"m52","","",183,null],[12,"m62","","",183,null],[12,"m13","","",183,null],[12,"m23","","",183,null],[12,"m33","","",183,null],[12,"m43","","",183,null],[12,"m53","","",183,null],[12,"m63","","",183,null],[12,"m14","","",183,null],[12,"m24","","",183,null],[12,"m34","","",183,null],[12,"m44","","",183,null],[12,"m54","","",183,null],[12,"m64","","",183,null],[3,"M6x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",184,null],[12,"m21","","",184,null],[12,"m31","","",184,null],[12,"m41","","",184,null],[12,"m51","","",184,null],[12,"m61","","",184,null],[12,"m12","","",184,null],[12,"m22","","",184,null],[12,"m32","","",184,null],[12,"m42","","",184,null],[12,"m52","","",184,null],[12,"m62","","",184,null],[12,"m13","","",184,null],[12,"m23","","",184,null],[12,"m33","","",184,null],[12,"m43","","",184,null],[12,"m53","","",184,null],[12,"m63","","",184,null],[12,"m14","","",184,null],[12,"m24","","",184,null],[12,"m34","","",184,null],[12,"m44","","",184,null],[12,"m54","","",184,null],[12,"m64","","",184,null],[12,"m15","","",184,null],[12,"m25","","",184,null],[12,"m35","","",184,null],[12,"m45","","",184,null],[12,"m55","","",184,null],[12,"m65","","",184,null],[3,"M6x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",185,null],[12,"m21","","",185,null],[12,"m31","","",185,null],[12,"m41","","",185,null],[12,"m51","","",185,null],[12,"m61","","",185,null],[12,"m12","","",185,null],[12,"m22","","",185,null],[12,"m32","","",185,null],[12,"m42","","",185,null],[12,"m52","","",185,null],[12,"m62","","",185,null],[12,"m13","","",185,null],[12,"m23","","",185,null],[12,"m33","","",185,null],[12,"m43","","",185,null],[12,"m53","","",185,null],[12,"m63","","",185,null],[12,"m14","","",185,null],[12,"m24","","",185,null],[12,"m34","","",185,null],[12,"m44","","",185,null],[12,"m54","","",185,null],[12,"m64","","",185,null],[12,"m15","","",185,null],[12,"m25","","",185,null],[12,"m35","","",185,null],[12,"m45","","",185,null],[12,"m55","","",185,null],[12,"m65","","",185,null],[12,"m16","","",185,null],[12,"m26","","",185,null],[12,"m36","","",185,null],[12,"m46","","",185,null],[12,"m56","","",185,null],[12,"m66","","",185,null],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"x"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"self"},{"name":"x"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"x"}}],[11,"hash","","",154,null],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"xy"}}],[11,"hash","","",155,null],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"xyz"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"self"},{"name":"xyz"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"xyz"}}],[11,"hash","","",156,null],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"xyzw"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"self"},{"name":"xyzw"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"xyzw"}}],[11,"hash","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"xyzwa"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"self"},{"name":"xyzwa"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"xyzwa"}}],[11,"hash","","",158,null],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"xyzwab"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"self"},{"name":"xyzwab"}],"output":{"name":"bool"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"xyzwab"}}],[11,"hash","","",159,null],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"ijkw"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"self"},{"name":"ijkw"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"ijkw"}}],[11,"hash","","",160,null],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"m2x2"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"self"},{"name":"m2x2"}],"output":{"name":"bool"}}],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"m2x2"}}],[11,"hash","","",161,null],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"m2x3"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"self"},{"name":"m2x3"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"m2x3"}}],[11,"hash","","",162,null],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"m2x4"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"self"},{"name":"m2x4"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"m2x4"}}],[11,"hash","","",163,null],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"m2x5"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"self"},{"name":"m2x5"}],"output":{"name":"bool"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"m2x5"}}],[11,"hash","","",164,null],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"m2x6"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"self"},{"name":"m2x6"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"m2x6"}}],[11,"hash","","",165,null],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",166,{"inputs":[{"name":"self"},{"name":"m3x2"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"self"},{"name":"m3x2"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"self"}],"output":{"name":"m3x2"}}],[11,"hash","","",166,null],[11,"fmt","","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"m3x3"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"self"},{"name":"m3x3"}],"output":{"name":"bool"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"m3x3"}}],[11,"hash","","",167,null],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",168,{"inputs":[{"name":"self"},{"name":"m3x4"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"self"},{"name":"m3x4"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"self"}],"output":{"name":"m3x4"}}],[11,"hash","","",168,null],[11,"fmt","","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"m3x5"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"self"},{"name":"m3x5"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"self"}],"output":{"name":"m3x5"}}],[11,"hash","","",169,null],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"m3x6"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"self"},{"name":"m3x6"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"m3x6"}}],[11,"hash","","",170,null],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"m4x2"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"self"},{"name":"m4x2"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"self"}],"output":{"name":"m4x2"}}],[11,"hash","","",171,null],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",172,{"inputs":[{"name":"self"},{"name":"m4x3"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"self"},{"name":"m4x3"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"self"}],"output":{"name":"m4x3"}}],[11,"hash","","",172,null],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",173,{"inputs":[{"name":"self"},{"name":"m4x4"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"self"},{"name":"m4x4"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"self"}],"output":{"name":"m4x4"}}],[11,"hash","","",173,null],[11,"fmt","","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",174,{"inputs":[{"name":"self"},{"name":"m4x5"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"self"},{"name":"m4x5"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"self"}],"output":{"name":"m4x5"}}],[11,"hash","","",174,null],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"m4x6"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"self"},{"name":"m4x6"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"m4x6"}}],[11,"hash","","",175,null],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"m5x2"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"m5x2"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"m5x2"}}],[11,"hash","","",176,null],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"m5x3"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"self"},{"name":"m5x3"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"m5x3"}}],[11,"hash","","",177,null],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"m5x4"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"self"},{"name":"m5x4"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"m5x4"}}],[11,"hash","","",178,null],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",179,{"inputs":[{"name":"self"},{"name":"m5x5"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"self"},{"name":"m5x5"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"self"}],"output":{"name":"m5x5"}}],[11,"hash","","",179,null],[11,"fmt","","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",180,{"inputs":[{"name":"self"},{"name":"m5x6"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"self"},{"name":"m5x6"}],"output":{"name":"bool"}}],[11,"clone","","",180,{"inputs":[{"name":"self"}],"output":{"name":"m5x6"}}],[11,"hash","","",180,null],[11,"fmt","","",180,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",181,{"inputs":[{"name":"self"},{"name":"m6x2"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"self"},{"name":"m6x2"}],"output":{"name":"bool"}}],[11,"clone","","",181,{"inputs":[{"name":"self"}],"output":{"name":"m6x2"}}],[11,"hash","","",181,null],[11,"fmt","","",181,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"self"},{"name":"m6x3"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"self"},{"name":"m6x3"}],"output":{"name":"bool"}}],[11,"clone","","",182,{"inputs":[{"name":"self"}],"output":{"name":"m6x3"}}],[11,"hash","","",182,null],[11,"fmt","","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"m6x4"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"self"},{"name":"m6x4"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"self"}],"output":{"name":"m6x4"}}],[11,"hash","","",183,null],[11,"fmt","","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",184,{"inputs":[{"name":"self"},{"name":"m6x5"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"self"},{"name":"m6x5"}],"output":{"name":"bool"}}],[11,"clone","","",184,{"inputs":[{"name":"self"}],"output":{"name":"m6x5"}}],[11,"hash","","",184,null],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",185,{"inputs":[{"name":"self"},{"name":"m6x6"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"self"},{"name":"m6x6"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"self"}],"output":{"name":"m6x6"}}],[11,"hash","","",185,null],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","nalgebra::core","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"index","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"index","","",1,null],[11,"index_mut","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"index_mut","","",1,null],[11,"neg","","",1,null],[11,"neg_mut","","Negates `self` in-place.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"add_to","","Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.",1,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"matrix"}],"output":null}],[11,"add","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"sub_to","","Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.",1,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"matrix"}],"output":null}],[11,"sub","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"mul","","",1,null],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"div","","",1,null],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"mul","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"tr_mul","","Equivalent to `self.transpose() * rhs`.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"matrixmn"}}],[11,"tr_mul_to","","Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid allocations.",1,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"matrix"}],"output":null}],[11,"mul_to","","Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.",1,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"matrix"}],"output":null}],[11,"kronecker","","The kronecker product of two matrices (aka. tensor product of the corresponding linear maps).",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["dimprod","dimprod"],"name":"matrixmn"}}],[11,"add_scalar","","Adds a scalar to `self`.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"matrixmn"}}],[11,"add_scalar_mut","","Adds a scalar to `self` in-place.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"amax","","Returns the absolute value of the coefficient with the largest absolute value.",1,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"amin","","Returns the absolute value of the coefficient with the smallest absolute value.",1,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"iamax_full","","Computes the index of the matrix component with the largest absolute value.",1,null],[11,"dot","","The dot product between two matrices (seen as vectors).",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"n"}}],[11,"tr_dot","","The dot product between the transpose of `self` and `rhs`.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"n"}}],[11,"ger","","Computes `self = alpha * x * y.transpose() + beta * self`.",1,{"inputs":[{"name":"self"},{"name":"n"},{"name":"vector"},{"name":"vector"},{"name":"n"}],"output":null}],[11,"gemm","","Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices. `alpha` and `beta` are scalar.",1,{"inputs":[{"name":"self"},{"name":"n"},{"name":"matrix"},{"name":"matrix"},{"name":"n"}],"output":null}],[11,"ger_symm","","Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a symmetric matrix.",1,{"inputs":[{"name":"self"},{"name":"n"},{"name":"vector"},{"name":"vector"},{"name":"n"}],"output":null}],[0,"iter","","Matrix iterators.",null,null],[3,"MatrixIter","nalgebra::core::iter","An iterator through a dense matrix with arbitrary strides matrix.",null,null],[3,"MatrixIterMut","","An iterator through a dense matrix with arbitrary strides matrix.",null,null],[11,"new","","Creates a new iterator for the given matrix storage.",186,{"inputs":[{"name":"s"}],"output":{"name":"matrixiter"}}],[11,"next","","",186,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",186,null],[11,"count","","",186,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","",186,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Creates a new iterator for the given matrix storage.",187,{"inputs":[{"name":"s"}],"output":{"name":"matrixitermut"}}],[11,"next","","",187,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",187,null],[11,"count","","",187,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","",187,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[0,"default_allocator","nalgebra::core","The default matrix data storage allocator.",null,null],[3,"DefaultAllocator","nalgebra::core::default_allocator","An allocator based on `GenericArray` and `MatrixVec` for statically-sized and dynamically-sized matrices respectively.",null,null],[11,"allocate_uninitialized","","",188,null],[11,"allocate_from_iterator","","",188,null],[11,"allocate_uninitialized","","",188,null],[11,"allocate_from_iterator","","",188,null],[11,"allocate_uninitialized","","",188,null],[11,"allocate_from_iterator","","",188,null],[11,"reallocate_copy","","",188,null],[11,"reallocate_copy","","",188,{"inputs":[{"name":"dynamic"},{"name":"cto"},{"name":"matrixarray"}],"output":{"generics":["dynamic"],"name":"matrixvec"}}],[11,"reallocate_copy","","",188,{"inputs":[{"name":"rto"},{"name":"dynamic"},{"name":"matrixarray"}],"output":{"generics":["dynamic"],"name":"matrixvec"}}],[11,"reallocate_copy","","",188,{"inputs":[{"name":"dynamic"},{"name":"cto"},{"generics":["dynamic"],"name":"matrixvec"}],"output":{"generics":["dynamic"],"name":"matrixvec"}}],[11,"reallocate_copy","","",188,{"inputs":[{"name":"rto"},{"name":"dynamic"},{"generics":["dynamic"],"name":"matrixvec"}],"output":{"generics":["dynamic"],"name":"matrixvec"}}],[11,"reallocate_copy","","",188,{"inputs":[{"name":"dynamic"},{"name":"cto"},{"generics":["dynamic"],"name":"matrixvec"}],"output":{"generics":["dynamic"],"name":"matrixvec"}}],[11,"reallocate_copy","","",188,{"inputs":[{"name":"rto"},{"name":"dynamic"},{"generics":["dynamic"],"name":"matrixvec"}],"output":{"generics":["dynamic"],"name":"matrixvec"}}],[11,"hash","nalgebra::core","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"from_data_statically_unchecked","","Creates a new matrix with the given data without statically checking that the matrix dimension matches the storage dimension.",1,{"inputs":[{"name":"s"}],"output":{"name":"matrix"}}],[11,"from_data","","Creates a new matrix with the given data.",1,{"inputs":[{"name":"s"}],"output":{"name":"matrix"}}],[11,"len","","The total number of elements of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"shape","","The shape of this matrix returned as the tuple (number of rows, number of columns).",1,null],[11,"nrows","","The number of rows of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"strides","","The strides (row stride, column stride) of this matrix.",1,null],[11,"iter","","Iterates through this matrix coordinates.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixiter"}}],[11,"vector_to_matrix_index","","Computes the row and column coordinates of the i-th element of this matrix seen as a vector.",1,null],[11,"get_unchecked","","Gets a reference to the element of this matrix at row `irow` and column `icol` without bound-checking.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"n"}}],[11,"relative_eq","","Tests whether `self` and `rhs` are equal up to a given epsilon.",1,null],[11,"eq","","Tests whether `self` and `rhs` are exactly equal.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"into_owned","","Moves this matrix into one that owns its data.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"into_owned_sum","","Moves this matrix into one that owns its data. The actual type of the result depends on matrix storage combination rules for addition.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixsum"}}],[11,"clone_owned","","Clones this matrix to one that owns its data.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"clone_owned_sum","","Clones this matrix into one that owns its data. The actual type of the result depends on matrix storage combination rules for addition.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixsum"}}],[11,"map","","Returns a matrix containing the result of `f` applied to each of its entries.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"matrixmn"}}],[11,"zip_map","","Returns a matrix containing the result of `f` applied to each entries of `self` and `rhs`.",1,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"f"}],"output":{"name":"matrixmn"}}],[11,"transpose_to","","Transposes `self` and store the result into `out`.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"transpose","","Transposes `self`.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"iter_mut","","Mutably iterates through this matrix coordinates.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixitermut"}}],[11,"get_unchecked_mut","","Gets a mutable reference to the i-th element of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"n"}}],[11,"swap_unchecked","","Swaps two entries without bound-checking.",1,null],[11,"swap","","Swaps two entries.",1,null],[11,"copy_from","","Fills this matrix with the content of another one. Both must have the same shape.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"tr_copy_from","","Fills this matrix with the content of the transpose another one.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"apply","","Replaces each component of `self` by the result of a closure `f` applied on it.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"as_slice","","Extracts a slice containing the entire matrix entries ordered column-by-columns.",1,null],[11,"as_mut_slice","","Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.",1,null],[11,"transpose_mut","","Transposes the square matrix `self` in-place.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"conjugate_transpose_to","","Takes the conjugate and transposes `self` and store the result into `out`.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"conjugate_transpose","","The conjugate transposition of `self`.",1,{"inputs":[{"name":"self"}],"output":{"generics":["complex"],"name":"matrixmn"}}],[11,"conjugate_transpose_mut","","Sets `self` to its conjugate transpose.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"default_epsilon","","",1,null],[11,"default_max_relative","","",1,null],[11,"default_max_ulps","","",1,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",1,null],[11,"ulps_eq","","",1,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"perp","","The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"n"}}],[11,"cross","","The 3D cross product between two vectors.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"matrixcross"}}],[11,"angle","","The smallest angle between two vectors.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"n"}}],[11,"norm_squared","","The squared L2 norm of this vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"norm","","The L2 norm of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"normalize","","Returns a normalized version of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"try_normalize","","Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"normalize_mut","","Normalizes this matrix in-place and returns its norm.",1,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"try_normalize_mut","","Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"default_epsilon","","",189,null],[11,"default_max_relative","","",189,null],[11,"default_max_ulps","","",189,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",189,null],[11,"ulps_eq","","",189,null],[11,"is_empty","","Indicates if this is a square matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_square","","Indicates if this is a square matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_identity","","Indicated if this is the identity matrix within a relative error of `eps`.",1,null],[11,"is_orthogonal","","Checks that `Máµ€ Ã— M = Id`.",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unchecked","","Create a new matrix slice without bound checking.",190,null],[11,"new_with_strides_unchecked","","Create a new matrix slice without bound checking.",190,null],[11,"from_raw_parts","","Create a new matrix slice without bound checking and from a raw pointer.",190,null],[11,"fmt","","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unchecked","","Create a new matrix slice without bound checking.",191,null],[11,"new_with_strides_unchecked","","Create a new matrix slice without bound checking.",191,null],[11,"from_raw_parts","","Create a new matrix slice without bound checking and from a raw pointer.",191,null],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"ptr","","",190,null],[11,"shape","","",190,null],[11,"strides","","",190,null],[11,"is_contiguous","","",190,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_owned","","",190,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone_owned","","",190,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"as_slice","","",190,null],[11,"ptr","","",191,null],[11,"shape","","",191,null],[11,"strides","","",191,null],[11,"is_contiguous","","",191,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_owned","","",191,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone_owned","","",191,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"as_slice","","",191,null],[11,"ptr_mut","","",191,null],[11,"as_mut_slice","","",191,null],[11,"row","","Returns a slice containing the i-th row of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u1"],"name":"matrixslice"}}],[11,"row_part","","Returns a slice containing the `n` first elements of the i-th row of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["u1","dynamic"],"name":"matrixslice"}}],[11,"rows","","Extracts from this matrix a set of consecutive rows.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslice"}}],[11,"rows_with_step","","Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic","dynamic"],"name":"matrixslice"}}],[11,"fixed_rows","","Extracts a compile-time number of consecutive rows from this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"matrixslice"}}],[11,"fixed_rows_with_step","","Extracts from this matrix a compile-time number of rows regularly skipping `step` rows.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslice"}}],[11,"rows_generic","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"rslice"}],"output":{"name":"matrixslice"}}],[11,"rows_generic_with_step","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"rslice"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslice"}}],[11,"column","","Returns a slice containing the i-th column of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u1"],"name":"matrixslice"}}],[11,"column_part","","Returns a slice containing the `n` first elements of the i-th column of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic","u1"],"name":"matrixslice"}}],[11,"columns","","Extracts from this matrix a set of consecutive columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslice"}}],[11,"columns_with_step","","Extracts from this matrix a set of consecutive columns regularly skipping `step` columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic","dynamic"],"name":"matrixslice"}}],[11,"fixed_columns","","Extracts a compile-time number of consecutive columns from this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"matrixslice"}}],[11,"fixed_columns_with_step","","Extracts from this matrix a compile-time number of columns regularly skipping `step` columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslice"}}],[11,"columns_generic","","Extracts from this matrix `ncols` columns. The number of columns may or may not be known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"cslice"}],"output":{"name":"matrixslice"}}],[11,"columns_generic_with_step","","Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may or may not be values known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"cslice"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslice"}}],[11,"slice","","Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)` consecutive elements.",1,null],[11,"slice_with_steps","","Slices this matrix starting at its component `(start.0, start.1)` and with `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"fixed_slice","","Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(), CSlice::dim())` consecutive components.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"matrixslice"}}],[11,"fixed_slice_with_steps","","Slices this matrix starting at its component `(start.0, start.1)` and with `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"generic_slice","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"generic_slice_with_steps","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"rows_range_pair","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"columns_range_pair","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"row_mut","","Returns a slice containing the i-th row of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u1"],"name":"matrixslicemut"}}],[11,"row_part_mut","","Returns a slice containing the `n` first elements of the i-th row of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["u1","dynamic"],"name":"matrixslicemut"}}],[11,"rows_mut","","Extracts from this matrix a set of consecutive rows.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslicemut"}}],[11,"rows_with_step_mut","","Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic","dynamic"],"name":"matrixslicemut"}}],[11,"fixed_rows_mut","","Extracts a compile-time number of consecutive rows from this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"matrixslicemut"}}],[11,"fixed_rows_with_step_mut","","Extracts from this matrix a compile-time number of rows regularly skipping `step` rows.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslicemut"}}],[11,"rows_generic_mut","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"rslice"}],"output":{"name":"matrixslicemut"}}],[11,"rows_generic_with_step_mut","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"rslice"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslicemut"}}],[11,"column_mut","","Returns a slice containing the i-th column of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["u1"],"name":"matrixslicemut"}}],[11,"column_part_mut","","Returns a slice containing the `n` first elements of the i-th column of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic","u1"],"name":"matrixslicemut"}}],[11,"columns_mut","","Extracts from this matrix a set of consecutive columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslicemut"}}],[11,"columns_with_step_mut","","Extracts from this matrix a set of consecutive columns regularly skipping `step` columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic","dynamic"],"name":"matrixslicemut"}}],[11,"fixed_columns_mut","","Extracts a compile-time number of consecutive columns from this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"matrixslicemut"}}],[11,"fixed_columns_with_step_mut","","Extracts from this matrix a compile-time number of columns regularly skipping `step` columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslicemut"}}],[11,"columns_generic_mut","","Extracts from this matrix `ncols` columns. The number of columns may or may not be known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"cslice"}],"output":{"name":"matrixslicemut"}}],[11,"columns_generic_with_step_mut","","Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may or may not be values known at compile-time.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"cslice"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixslicemut"}}],[11,"slice_mut","","Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)` consecutive elements.",1,null],[11,"slice_with_steps_mut","","Slices this matrix starting at its component `(start.0, start.1)` and with `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"fixed_slice_mut","","Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(), CSlice::dim())` consecutive components.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"matrixslicemut"}}],[11,"fixed_slice_with_steps_mut","","Slices this matrix starting at its component `(start.0, start.1)` and with `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"generic_slice_mut","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"generic_slice_with_steps_mut","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"rows_range_pair_mut","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"columns_range_pair_mut","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"slice_range","","Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed by the range `cols`.",1,{"inputs":[{"name":"self"},{"name":"rowrange"},{"name":"colrange"}],"output":{"name":"matrixslice"}}],[11,"rows_range","","Slice containing all the rows indexed by the range `rows`.",1,{"inputs":[{"name":"self"},{"name":"rowrange"}],"output":{"name":"matrixslice"}}],[11,"columns_range","","Slice containing all the columns indexed by the range `rows`.",1,{"inputs":[{"name":"self"},{"name":"colrange"}],"output":{"name":"matrixslice"}}],[11,"slice_range_mut","","Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns indexed by the range `cols`.",1,{"inputs":[{"name":"self"},{"name":"rowrange"},{"name":"colrange"}],"output":{"name":"matrixslicemut"}}],[11,"rows_range_mut","","Slice containing all the rows indexed by the range `rows`.",1,{"inputs":[{"name":"self"},{"name":"rowrange"}],"output":{"name":"matrixslicemut"}}],[11,"columns_range_mut","","Slice containing all the columns indexed by the range `cols`.",1,{"inputs":[{"name":"self"},{"name":"colrange"}],"output":{"name":"matrixslicemut"}}],[11,"hash","","",192,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"deref","","",192,null],[11,"deref_mut","","",192,null],[11,"fmt","","",192,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"eq","","",192,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ptr","","",192,null],[11,"shape","","",192,null],[11,"strides","","",192,null],[11,"is_contiguous","","",192,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_owned","","",192,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"clone_owned","","",192,{"inputs":[{"name":"self"}],"output":{"name":"owned"}}],[11,"as_slice","","",192,null],[11,"ptr_mut","","",192,null],[11,"as_mut_slice","","",192,null],[11,"fmt","","",193,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",193,{"inputs":[{"name":"self"}],"output":{"name":"matrixvec"}}],[11,"eq","","",193,{"inputs":[{"name":"self"},{"name":"matrixvec"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"self"},{"name":"matrixvec"}],"output":{"name":"bool"}}],[11,"new","","Creates a new dynamic matrix data storage from the given vector and shape.",193,{"inputs":[{"name":"r"},{"name":"c"},{"name":"vec"}],"output":{"name":"matrixvec"}}],[11,"data","","The underlying data storage.",193,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"data_mut","","The underlying mutable data storage.",193,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the undelying mutable data storage and unrwaps it.",193,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"deref","","",193,null],[11,"ptr","","",193,null],[11,"shape","","",193,null],[11,"strides","","",193,null],[11,"is_contiguous","","",193,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_owned","","",193,{"inputs":[{"name":"self"}],"output":{"generics":["dynamic"],"name":"owned"}}],[11,"clone_owned","","",193,{"inputs":[{"name":"self"}],"output":{"generics":["dynamic"],"name":"owned"}}],[11,"as_slice","","",193,null],[11,"ptr","","",193,null],[11,"shape","","",193,null],[11,"strides","","",193,null],[11,"is_contiguous","","",193,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_owned","","",193,{"inputs":[{"name":"self"}],"output":{"generics":["dynamic"],"name":"owned"}}],[11,"clone_owned","","",193,{"inputs":[{"name":"self"}],"output":{"generics":["dynamic"],"name":"owned"}}],[11,"as_slice","","",193,null],[11,"ptr_mut","","",193,null],[11,"as_mut_slice","","",193,null],[11,"ptr_mut","","",193,null],[11,"as_mut_slice","","",193,null],[11,"eq","","",189,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"self"}],"output":{"name":"unit"}}],[11,"hash","","",189,null],[11,"fmt","","",189,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_normalize","","Normalize the given value and return it wrapped on a `Unit` structure.",189,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"try_new","","Attempts to normalize the given value and return it wrapped on a `Unit` structure.",189,null],[11,"new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",189,null],[11,"try_new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",189,null],[11,"renormalize","","Normalizes this value again. This is useful when repeated computations might cause a drift in the norm because of float inaccuracies.",189,null],[11,"new_unchecked","","Wraps the given value, assuming it is already normalized.",189,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"unwrap","","Retrieves the underlying value.",189,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_mut_unchecked","","Returns a mutable reference to the underlying value. This is `_unchecked` because modifying the underlying value in such a way that it no longer has unit length may lead to unexpected results.",189,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_ref","","",189,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"to_superset","","",189,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"is_in_subset","","",189,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",189,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"neg","","",189,null],[11,"deref","","",189,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"abs","","Computes the componentwise absolute value.",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"component_mul","","Componentwise matrix multiplication.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"matrixsum"}}],[11,"component_mul_assign","","Mutable, componentwise matrix multiplication.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"component_mul_mut","","Mutable, componentwise matrix multiplication.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"component_div","","Componentwise matrix division.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"matrixsum"}}],[11,"component_div_assign","","Mutable, componentwise matrix division.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"component_div_mut","","Mutable, componentwise matrix division.",1,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"upper_triangle","","Extracts the upper triangular part of this matrix (including the diagonal).",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"lower_triangle","","Extracts the upper triangular part of this matrix (including the diagonal).",1,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"fill","","Sets all the elements of this matrix to `val`.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"fill_with_identity","","Fills `self` with the identity matrix.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fill_diagonal","","Sets all the diagonal elements of this matrix to `val`.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"fill_row","","Sets all the elements of the selected row to `val`.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"fill_column","","Sets all the elements of the selected column to `val`.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"set_diagonal","","Fills the diagonal of this matrix with the content of the given vector.",1,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"set_row","","Fills the selected row of this matrix with the content of the given vector.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"rowvector"}],"output":null}],[11,"set_column","","Fills the selected column of this matrix with the content of the given vector.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"vector"}],"output":null}],[11,"fill_lower_triangle","","Sets all the elements of the lower-triangular part of this matrix to `val`.",1,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":null}],[11,"fill_upper_triangle","","Sets all the elements of the lower-triangular part of this matrix to `val`.",1,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":null}],[11,"swap_rows","","Swaps two rows in-place.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_columns","","Swaps two columns in-place.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"fill_lower_triangle_with_upper_triangle","","Copies the upper-triangle of this matrix to its lower-triangular part.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fill_upper_triangle_with_lower_triangle","","Copies the upper-triangle of this matrix to its upper-triangular part.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"remove_column","","Removes the `i`-th column from this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["dimdiff"],"name":"matrixmn"}}],[11,"remove_fixed_columns","","Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th (included).",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["dimdiff"],"name":"matrixmn"}}],[11,"remove_columns","","Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixmn"}}],[11,"remove_columns_generic","","Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"d"}],"output":{"generics":["dimdiff"],"name":"matrixmn"}}],[11,"remove_row","","Removes the `i`-th row from this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["dimdiff"],"name":"matrixmn"}}],[11,"remove_fixed_rows","","Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["dimdiff"],"name":"matrixmn"}}],[11,"remove_rows","","Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["dynamic"],"name":"matrixmn"}}],[11,"remove_rows_generic","","Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"d"}],"output":{"generics":["dimdiff"],"name":"matrixmn"}}],[11,"insert_column","","Inserts a column filled with `val` at the `i-th` position.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"n"}],"output":{"generics":["dimsum"],"name":"matrixmn"}}],[11,"insert_fixed_columns","","Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"n"}],"output":{"generics":["dimsum"],"name":"matrixmn"}}],[11,"insert_columns","","Inserts `n` columns filled with `val` starting at the `i-th` position.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"generics":["dynamic"],"name":"matrixmn"}}],[11,"insert_columns_generic_uninitialized","","Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"d"}],"output":{"generics":["dimsum"],"name":"matrixmn"}}],[11,"insert_row","","Inserts a row filled with `val` at the `i-th` position.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"n"}],"output":{"generics":["dimsum"],"name":"matrixmn"}}],[11,"insert_fixed_rows","","Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"n"}],"output":{"generics":["dimsum"],"name":"matrixmn"}}],[11,"insert_rows","","Inserts `n` rows filled with `val` starting at the `i-th` position.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"generics":["dynamic"],"name":"matrixmn"}}],[11,"insert_rows_generic_uninitialized","","Inserts `ninsert.value()` rows at the `i-th` place of this matrix.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"d"}],"output":{"generics":["dimsum"],"name":"matrixmn"}}],[11,"resize","","Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix"}}],[11,"fixed_resize","","Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"matrixmn"}}],[11,"resize_generic","","Resizes `self` such that it has dimensions `new_nrows Ã— now_ncols`.",1,{"inputs":[{"name":"self"},{"name":"r2"},{"name":"c2"},{"name":"n"}],"output":{"name":"matrixmn"}}],[6,"SquareMatrix","","A square matrix.",null,null],[6,"Vector","","A matrix with one column and `D` rows.",null,null],[6,"RowVector","","A matrix with one row and `D` columns .",null,null],[6,"MatrixSum","","The type of the result of a matrix sum.",null,null],[6,"VectorSum","","The type of the result of a matrix sum.",null,null],[6,"MatrixCross","","The type of the result of a matrix cross product.",null,null],[6,"MatrixNM","","A staticaly sized column-major matrix with `R` rows and `C` columns.",null,null],[6,"MatrixMN","","A staticaly sized column-major matrix with `R` rows and `C` columns.",null,null],[6,"MatrixN","","A staticaly sized column-major square matrix with `D` rows and columns.",null,null],[6,"DMatrix","","A dynamically sized column-major matrix.",null,null],[6,"Matrix1","","A stack-allocated, column-major, 1x1 square matrix.",null,null],[6,"Matrix2","","A stack-allocated, column-major, 2x2 square matrix.",null,null],[6,"Matrix3","","A stack-allocated, column-major, 3x3 square matrix.",null,null],[6,"Matrix4","","A stack-allocated, column-major, 4x4 square matrix.",null,null],[6,"Matrix5","","A stack-allocated, column-major, 5x5 square matrix.",null,null],[6,"Matrix6","","A stack-allocated, column-major, 6x6 square matrix.",null,null],[6,"Matrix1x2","","A stack-allocated, column-major, 1x2 square matrix.",null,null],[6,"Matrix1x3","","A stack-allocated, column-major, 1x3 square matrix.",null,null],[6,"Matrix1x4","","A stack-allocated, column-major, 1x4 square matrix.",null,null],[6,"Matrix1x5","","A stack-allocated, column-major, 1x5 square matrix.",null,null],[6,"Matrix1x6","","A stack-allocated, column-major, 1x6 square matrix.",null,null],[6,"Matrix2x3","","A stack-allocated, column-major, 2x3 square matrix.",null,null],[6,"Matrix2x4","","A stack-allocated, column-major, 2x4 square matrix.",null,null],[6,"Matrix2x5","","A stack-allocated, column-major, 2x5 square matrix.",null,null],[6,"Matrix2x6","","A stack-allocated, column-major, 2x6 square matrix.",null,null],[6,"Matrix3x4","","A stack-allocated, column-major, 3x4 square matrix.",null,null],[6,"Matrix3x5","","A stack-allocated, column-major, 3x5 square matrix.",null,null],[6,"Matrix3x6","","A stack-allocated, column-major, 3x6 square matrix.",null,null],[6,"Matrix4x5","","A stack-allocated, column-major, 4x5 square matrix.",null,null],[6,"Matrix4x6","","A stack-allocated, column-major, 4x6 square matrix.",null,null],[6,"Matrix5x6","","A stack-allocated, column-major, 5x6 square matrix.",null,null],[6,"Matrix2x1","","A stack-allocated, column-major, 2x1 square matrix.",null,null],[6,"Matrix3x1","","A stack-allocated, column-major, 3x1 square matrix.",null,null],[6,"Matrix4x1","","A stack-allocated, column-major, 4x1 square matrix.",null,null],[6,"Matrix5x1","","A stack-allocated, column-major, 5x1 square matrix.",null,null],[6,"Matrix6x1","","A stack-allocated, column-major, 6x1 square matrix.",null,null],[6,"Matrix3x2","","A stack-allocated, column-major, 3x2 square matrix.",null,null],[6,"Matrix4x2","","A stack-allocated, column-major, 4x2 square matrix.",null,null],[6,"Matrix5x2","","A stack-allocated, column-major, 5x2 square matrix.",null,null],[6,"Matrix6x2","","A stack-allocated, column-major, 6x2 square matrix.",null,null],[6,"Matrix4x3","","A stack-allocated, column-major, 4x3 square matrix.",null,null],[6,"Matrix5x3","","A stack-allocated, column-major, 5x3 square matrix.",null,null],[6,"Matrix6x3","","A stack-allocated, column-major, 6x3 square matrix.",null,null],[6,"Matrix5x4","","A stack-allocated, column-major, 5x4 square matrix.",null,null],[6,"Matrix6x4","","A stack-allocated, column-major, 6x4 square matrix.",null,null],[6,"Matrix6x5","","A stack-allocated, column-major, 6x5 square matrix.",null,null],[6,"DVector","","A dynamically sized column vector.",null,null],[6,"VectorN","","A statically sized D-dimensional column vector.",null,null],[6,"Vector1","","A stack-allocated, 1-dimensional column vector.",null,null],[6,"Vector2","","A stack-allocated, 2-dimensional column vector.",null,null],[6,"Vector3","","A stack-allocated, 3-dimensional column vector.",null,null],[6,"Vector4","","A stack-allocated, 4-dimensional column vector.",null,null],[6,"Vector5","","A stack-allocated, 5-dimensional column vector.",null,null],[6,"Vector6","","A stack-allocated, 6-dimensional column vector.",null,null],[6,"RowDVector","","A dynamically sized row vector.",null,null],[6,"RowVectorN","","A statically sized D-dimensional row vector.",null,null],[6,"RowVector1","","A stack-allocated, 1-dimensional row vector.",null,null],[6,"RowVector2","","A stack-allocated, 2-dimensional row vector.",null,null],[6,"RowVector3","","A stack-allocated, 3-dimensional row vector.",null,null],[6,"RowVector4","","A stack-allocated, 4-dimensional row vector.",null,null],[6,"RowVector5","","A stack-allocated, 5-dimensional row vector.",null,null],[6,"RowVector6","","A stack-allocated, 6-dimensional row vector.",null,null],[6,"MatrixSlice","","A matrix slice.",null,null],[6,"MatrixSliceMut","","A matrix slice.",null,null],[8,"Scalar","","The basic scalar type for all structures of `nalgebra`.",null,null],[11,"is","","Tests if `Self` the the same as the type `T`",194,{"inputs":[],"output":{"name":"bool"}}],[8,"SliceRange","","A range with a size that may be known at compile-time.",null,null],[16,"Size","","Type of the range size. May be a type-level integer.",195,null],[10,"begin","","The start index of the range.",195,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"usize"}}],[10,"end","","The index immediatly after the last index inside of the range.",195,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"usize"}}],[10,"size","","The number of elements of the range, i.e., `self.end - self.begin`.",195,null],[0,"linalg","nalgebra","[Reexported at the root of this crate.] Factorization of real matrices.",null,null],[3,"PermutationSequence","nalgebra::linalg","A sequence of row or column permutations.",null,null],[3,"QR","","The QR decomposition of a general matrix.",null,null],[3,"Hessenberg","","Hessenberg decomposition of a general matrix.",null,null],[3,"Bidiagonal","","The bidiagonalization of a general matrix.",null,null],[12,"diagonal","","The diagonal elements of the decomposed matrix.",196,null],[12,"off_diagonal","","The off-diagonal elements of the decomposed matrix.",196,null],[3,"Cholesky","","The Cholesky decomposion of a symmetric-definite-positive matrix.",null,null],[3,"LU","","LU decomposition with partial (row) pivoting.",null,null],[3,"FullPivLU","","LU decomposition with full row and column pivoting.",null,null],[3,"RealSchur","","Real Schur decomposition of a square matrix.",null,null],[3,"SVD","","Singular Value Decomposition of a general matrix.",null,null],[12,"u","","The left-singular vectors `U` of this SVD.",197,null],[12,"v_t","","The right-singular vectors `V^t` of this SVD.",197,null],[12,"singular_values","","The singular values of this SVD.",197,null],[3,"SymmetricTridiagonal","","Tridiagonalization of a symmetric matrix.",null,null],[3,"SymmetricEigen","","Eigendecomposition of a symmetric matrix.",null,null],[12,"eigenvectors","","The eigenvectors of the decomposed matrix.",198,null],[12,"eigenvalues","","The unsorted eigenvalues of the decomposed matrix.",198,null],[5,"try_invert_to","","Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.",null,{"inputs":[{"name":"matrixn"},{"name":"matrix"}],"output":{"name":"bool"}}],[5,"wilkinson_shift","","Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing component `tnn`.",null,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"n"}}],[11,"solve_lower_triangular","nalgebra::linalg::solve","Computes the solution of the linear system `self . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"solve_upper_triangular","","Computes the solution of the linear system `self . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"solve_lower_triangular_mut","","Solves the linear system `self . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"solve_lower_triangular_with_diag_mut","","Solves the linear system `self . x = b` where `x` is the unknown and only the lower-triangular part of `self` is concidered not-zero. The diagonal is never read as it is assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"n"}],"output":{"name":"bool"}}],[11,"solve_upper_triangular_mut","","Solves the linear system `self . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"tr_solve_lower_triangular","","Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"tr_solve_upper_triangular","","Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"tr_solve_lower_triangular_mut","","Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"tr_solve_upper_triangular_mut","","Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",199,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"determinant","nalgebra::linalg::determinant","Computes the matrix determinant.",199,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"try_inverse","nalgebra::linalg::inverse","Attempts to invert this matrix.",199,{"inputs":[{"name":"self"}],"output":{"generics":["matrixn"],"name":"option"}}],[11,"try_inverse_mut","","Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if inversion fails.",199,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"householder","nalgebra::linalg","Construction of householder elementary reflections.",null,null],[0,"givens","","Construction of givens rotations.",null,null],[5,"cancel_y","nalgebra::linalg::givens","Computes the rotation `R` required such that the `y` component of `R * v` is zero.",null,{"inputs":[{"name":"vector"}],"output":{"name":"option"}}],[5,"cancel_x","","Computes the rotation `R` required such that the `x` component of `R * v` is zero.",null,{"inputs":[{"name":"vector"}],"output":{"name":"option"}}],[0,"balancing","nalgebra::linalg","Functions for balancing a matrix.",null,null],[5,"balance_parlett_reinsch","nalgebra::linalg::balancing","Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns the corresponding diagonal transformation.",null,{"inputs":[{"name":"matrixn"}],"output":{"name":"vectorn"}}],[5,"unbalance","","Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.",null,{"inputs":[{"name":"matrixn"},{"name":"vectorn"}],"output":null}],[11,"clone","nalgebra::linalg","",200,{"inputs":[{"name":"self"}],"output":{"name":"permutationsequence"}}],[11,"fmt","","",200,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"identity","","Creates a new statically-allocated sequence of `D` identity permutations.",200,{"inputs":[],"output":{"name":"self"}}],[11,"identity","","Creates a new dynamically-allocated sequence of `n` identity permutations.",200,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"identity_generic","","Creates a new sequence of D identity permutations.",200,{"inputs":[{"name":"d"}],"output":{"name":"self"}}],[11,"append_permutation","","Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this sequence of permutations.",200,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"permute_rows","","Applies this sequence of permutations to the rows of `rhs`.",200,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"inv_permute_rows","","Applies this sequence of permutations in reverse to the rows of `rhs`.",200,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"permute_columns","","Applies this sequence of permutations to the columns of `rhs`.",200,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"inv_permute_columns","","Applies this sequence of permutations in reverse to the columns of `rhs`.",200,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"len","","The number of non-identity permutations applied by this sequence.",200,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"determinant","","The determinant of the matrix corresponding to this permutation.",200,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"clone","","",201,{"inputs":[{"name":"self"}],"output":{"name":"qr"}}],[11,"fmt","","",201,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the QR decomposition using householder reflections.",201,{"inputs":[{"name":"matrixmn"}],"output":{"name":"self"}}],[11,"r","","Retrieves the upper trapezoidal submatrix `R` of this decomposition.",201,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"unpack_r","","Retrieves the upper trapezoidal submatrix `R` of this decomposition.",201,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",201,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"unpack","","Unpacks this decomposition into its two matrix factors.",201,null],[11,"q_tr_mul","","Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.",201,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",201,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",201,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",201,{"inputs":[{"name":"self"}],"output":{"generics":["matrixn"],"name":"option"}}],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",201,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"qr","nalgebra::core","Computes the QR decomposition of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"name":"qr"}}],[11,"clone","nalgebra::linalg","",202,{"inputs":[{"name":"self"}],"output":{"name":"hessenberg"}}],[11,"fmt","","",202,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the Hessenberg decomposition using householder reflections.",202,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"new_with_workspace","","Computes the Hessenberg decomposition using householder reflections.",202,{"inputs":[{"name":"matrixn"},{"name":"vectorn"}],"output":{"name":"self"}}],[11,"unpack","","Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the hessenberg matrix.",202,null],[11,"unpack_h","","Retrieves the upper trapezoidal submatrix `H` of this decomposition.",202,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"h","","Retrieves the upper trapezoidal submatrix `H` of this decomposition.",202,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",202,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"hessenberg","nalgebra::linalg::hessenberg","Computes the Hessenberg decomposition of this matrix using householder reflections.",199,{"inputs":[{"name":"self"}],"output":{"name":"hessenberg"}}],[11,"clone","nalgebra::linalg","",196,{"inputs":[{"name":"self"}],"output":{"name":"bidiagonal"}}],[11,"fmt","","",196,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the Bidiagonal decomposition using householder reflections.",196,{"inputs":[{"name":"matrixmn"}],"output":{"name":"self"}}],[11,"is_upper_diagonal","","Indicates whether this decomposition contains an upper-diagonal matrix.",196,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"unpack","","Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.",196,null],[11,"d","","Retrieves the upper trapezoidal submatrix `R` of this decomposition.",196,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixn"}}],[11,"u","","Computes the orthogonal matrix `U` of this `U * D * V` decomposition.",196,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"v_t","","Computes the orthogonal matrix `V` of this `U * D * V` decomposition.",196,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"diagonal","","The diagonal part of this decomposed matrix.",196,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[11,"off_diagonal","","The off-diagonal part of this decomposed matrix.",196,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[11,"bidiagonalize","nalgebra::core","Computes the bidiagonalization using householder reflections.",1,{"inputs":[{"name":"self"}],"output":{"name":"bidiagonal"}}],[11,"clone","nalgebra::linalg","",203,{"inputs":[{"name":"self"}],"output":{"name":"symmetrictridiagonal"}}],[11,"fmt","","",203,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the tridiagonalization of the symmetric matrix `m`.",203,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"unpack","","Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this decomposition.",203,null],[11,"unpack_tridiagonal","","Retrieve the diagonal, and off diagonal elements of this decomposition.",203,null],[11,"diagonal","","The diagonal components of this decomposition.",203,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[11,"off_diagonal","","The off-diagonal components of this decomposition.",203,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",203,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"recompose","","Recomputes the original symmetric matrix.",203,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"symmetric_tridiagonalize","nalgebra::linalg::symmetric_tridiagonal","Computes the tridiagonalization of this symmetric matrix.",199,{"inputs":[{"name":"self"}],"output":{"name":"symmetrictridiagonal"}}],[11,"clone","nalgebra::linalg","",204,{"inputs":[{"name":"self"}],"output":{"name":"cholesky"}}],[11,"fmt","","",204,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Attempts to compute the Cholesky decomposition of `matrix`.",204,{"inputs":[{"name":"matrixn"}],"output":{"name":"option"}}],[11,"unpack","","Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly upper-triangular part filled with zeros.",204,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"unpack_dirty","","Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out its strict upper-triangular part.",204,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"l","","Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly uppen-triangular part filled with zeros.",204,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"l_dirty","","Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out its strict upper-triangular part.",204,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"solve_mut","","Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.",204,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"solve","","Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.",204,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"matrixmn"}}],[11,"inverse","","Computes the inverse of the decomposed matrix.",204,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"cholesky","nalgebra::linalg::cholesky","Attempts to compute the Cholesky decomposition of this matrix.",199,{"inputs":[{"name":"self"}],"output":{"generics":["cholesky"],"name":"option"}}],[11,"clone","nalgebra::linalg","",205,{"inputs":[{"name":"self"}],"output":{"name":"lu"}}],[11,"fmt","","",205,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the LU decomposition with partial (row) pivoting of `matrix`.",205,{"inputs":[{"name":"matrixmn"}],"output":{"name":"self"}}],[11,"l","","The lower triangular matrix of this decomposition.",205,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"l_unpack","","The lower triangular matrix of this decomposition.",205,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"u","","The upper triangular matrix of this decomposition.",205,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"p","","The row permutations of this decomposition.",205,{"inputs":[{"name":"self"}],"output":{"name":"permutationsequence"}}],[11,"unpack","","The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.",205,null],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",205,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",205,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",205,{"inputs":[{"name":"self"}],"output":{"generics":["matrixn"],"name":"option"}}],[11,"try_inverse_to","","Computes the inverse of the decomposed matrix and outputs the result to `out`.",205,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"determinant","","Computes the determinant of the decomposed matrix.",205,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",205,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"lu","nalgebra::core","Computes the LU decomposition with partial (row) pivoting of `matrix`.",1,{"inputs":[{"name":"self"}],"output":{"name":"lu"}}],[11,"clone","nalgebra::linalg","",206,{"inputs":[{"name":"self"}],"output":{"name":"fullpivlu"}}],[11,"fmt","","",206,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the LU decomposition with full pivoting of `matrix`.",206,{"inputs":[{"name":"matrixmn"}],"output":{"name":"self"}}],[11,"l","","The lower triangular matrix of this decomposition.",206,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"u","","The upper triangular matrix of this decomposition.",206,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"matrixmn"}}],[11,"p","","The row permutations of this decomposition.",206,{"inputs":[{"name":"self"}],"output":{"name":"permutationsequence"}}],[11,"q","","The column permutations of this decomposition.",206,{"inputs":[{"name":"self"}],"output":{"name":"permutationsequence"}}],[11,"unpack","","The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.",206,null],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",206,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"generics":["matrixmn"],"name":"option"}}],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",206,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",206,{"inputs":[{"name":"self"}],"output":{"generics":["matrixn"],"name":"option"}}],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",206,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"determinant","","Computes the determinant of the decomposed matrix.",206,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"full_piv_lu","nalgebra::core","Computes the LU decomposition with full pivoting of `matrix`.",1,{"inputs":[{"name":"self"}],"output":{"name":"fullpivlu"}}],[11,"clone","nalgebra::linalg","",207,{"inputs":[{"name":"self"}],"output":{"name":"realschur"}}],[11,"fmt","","",207,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the Schur decomposition of a square matrix.",207,{"inputs":[{"name":"matrixn"}],"output":{"name":"realschur"}}],[11,"try_new","","Attempts to compute the Schur decomposition of a square matrix.",207,{"inputs":[{"name":"matrixn"},{"name":"n"},{"name":"usize"}],"output":{"generics":["realschur"],"name":"option"}}],[11,"unpack","","Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the decomposed matrix equals `Q * T * Q.transpose()`.",207,null],[11,"eigenvalues","","Computes the real eigenvalues of the decomposed matrix.",207,{"inputs":[{"name":"self"}],"output":{"generics":["vectorn"],"name":"option"}}],[11,"complex_eigenvalues","","Computes the complex eigenvalues of the decomposed matrix.",207,{"inputs":[{"name":"self"}],"output":{"generics":["complex"],"name":"vectorn"}}],[11,"real_schur","nalgebra::linalg::schur","Computes the Schur decomposition of a square matrix.",199,{"inputs":[{"name":"self"}],"output":{"name":"realschur"}}],[11,"try_real_schur","","Attempts to compute the Schur decomposition of a square matrix.",199,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"generics":["realschur"],"name":"option"}}],[11,"eigenvalues","","Computes the eigenvalues of this matrix.",199,{"inputs":[{"name":"self"}],"output":{"generics":["vectorn"],"name":"option"}}],[11,"complex_eigenvalues","","Computes the eigenvalues of this matrix.",199,{"inputs":[{"name":"self"}],"output":{"generics":["complex"],"name":"vectorn"}}],[11,"clone","nalgebra::linalg","",197,{"inputs":[{"name":"self"}],"output":{"name":"svd"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the Singular Value Decomposition of `matrix` using implicit shift.",197,{"inputs":[{"name":"matrixmn"},{"name":"bool"},{"name":"bool"}],"output":{"name":"self"}}],[11,"try_new","","Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.",197,{"inputs":[{"name":"matrixmn"},{"name":"bool"},{"name":"bool"},{"name":"n"},{"name":"usize"}],"output":{"name":"option"}}],[11,"rank","","Computes the rank of the decomposed matrix, i.e., the number of singular values greater than `eps`.",197,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"usize"}}],[11,"recompose","","Rebuild the original matrix.",197,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"pseudo_inverse","","Computes the pseudo-inverse of the decomposed matrix.",197,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"matrixmn"}}],[11,"solve","","Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.",197,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"n"}],"output":{"name":"matrixmn"}}],[11,"svd","nalgebra::core","Computes the Singular Value Decomposition using implicit shift.",1,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"}],"output":{"name":"svd"}}],[11,"try_svd","","Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.",1,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"},{"name":"n"},{"name":"usize"}],"output":{"generics":["svd"],"name":"option"}}],[11,"singular_values","","Computes the singular values of this matrix.",1,{"inputs":[{"name":"self"}],"output":{"generics":["dimminimum"],"name":"vectorn"}}],[11,"rank","","Computes the rank of this matrix.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"usize"}}],[11,"pseudo_inverse","","Computes the pseudo-inverse of this matrix.",1,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"matrixmn"}}],[11,"clone","nalgebra::linalg","",198,{"inputs":[{"name":"self"}],"output":{"name":"symmetriceigen"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Computes the eigendecomposition of the given symmetric matrix.",198,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"try_new","","Computes the eigendecomposition of the given symmetric matrix with user-specified convergence parameters.",198,{"inputs":[{"name":"matrixn"},{"name":"n"},{"name":"usize"}],"output":{"name":"option"}}],[11,"recompose","","Rebuild the original matrix.",198,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"symmetric_eigen","nalgebra::linalg::symmetric_eigen","Computes the eigendecomposition of this symmetric matrix.",199,{"inputs":[{"name":"self"}],"output":{"name":"symmetriceigen"}}],[11,"try_symmetric_eigen","","Computes the eigendecomposition of the given symmetric matrix with user-specified convergence parameters.",199,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"generics":["symmetriceigen"],"name":"option"}}],[11,"symmetric_eigenvalues","","Computes the eigenvalues of this symmetric matrix.",199,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[0,"geometry","nalgebra","[Reexported at the root of this crate.] Data structures for points and usual transformations (rotations, isometries, etc.)",null,null],[3,"Point","nalgebra::geometry","A point in a n-dimensional euclidean space.",null,null],[12,"coords","","The coordinates of this point, i.e., the shift from the origin.",208,null],[3,"Rotation","","A rotation matrix.",null,null],[3,"Quaternion","","A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion that may be used as a rotation.",null,null],[12,"coords","","This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.",209,null],[3,"Translation","","A translation.",null,null],[12,"vector","","The translation coordinates, i.e., how much is added to a point's coordinates when it is translated.",210,null],[3,"Isometry","","A direct isometry, i.e., a rotation followed by a translation.",null,null],[12,"rotation","","The pure rotational part of this isometry.",211,null],[12,"translation","","The pure translational part of this isometry.",211,null],[3,"Similarity","","A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.",null,null],[12,"isometry","","The part of this similarity that does not include the scaling factor.",212,null],[3,"Transform","","A transformation matrix in homogeneous coordinates.",null,null],[3,"Reflection","","A reflection wrt. a plane.",null,null],[3,"Orthographic3","","A 3D orthographic projection stored as an homogeneous 4x4 matrix.",null,null],[3,"Perspective3","","A 3D perspective projection stored as an homogeneous 4x4 matrix.",null,null],[4,"TGeneral","","Tag representing the most general (not necessarily inversible) `Transform` type.",null,null],[4,"TProjective","","Tag representing the most general inversible `Transform` type.",null,null],[4,"TAffine","","Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.",null,null],[11,"fmt","","",208,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",208,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",208,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","Clones this point into one that owns its data.",208,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"to_homogeneous","","Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the end of it.",208,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"vectorn"}}],[11,"from_coordinates","","Creates a new point with the given coordinates.",208,{"inputs":[{"name":"vectorn"}],"output":{"name":"point"}}],[11,"len","","The dimension of this point.",208,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"stride","","The stride of this point. This is the number of buffer element separating each component of this point.",208,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Iterates through this point coordinates.",208,{"inputs":[{"name":"self"}],"output":{"generics":["u1"],"name":"matrixiter"}}],[11,"get_unchecked","","Gets a reference to i-th element of this point without bound-checking.",208,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"iter_mut","","Mutably iterates through this point coordinates.",208,{"inputs":[{"name":"self"}],"output":{"generics":["u1"],"name":"matrixitermut"}}],[11,"get_unchecked_mut","","Gets a mutable reference to i-th element of this point without bound-checking.",208,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"swap_unchecked","","Swaps two entries without bound-checking.",208,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"default_epsilon","","",208,null],[11,"default_max_relative","","",208,null],[11,"default_max_ulps","","",208,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",208,null],[11,"ulps_eq","","",208,null],[11,"eq","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"le","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"gt","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ge","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",208,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_uninitialized","","Creates a new point with uninitialized coordinates.",208,{"inputs":[],"output":{"name":"self"}}],[11,"origin","","Creates a new point with all coordinates equal to zero.",208,{"inputs":[],"output":{"name":"self"}}],[11,"from_homogeneous","","Creates a new point from its homogeneous vector representation.",208,{"inputs":[{"generics":["dimnamesum"],"name":"vectorn"}],"output":{"name":"option"}}],[11,"max_value","","",208,{"inputs":[],"output":{"name":"self"}}],[11,"min_value","","",208,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",208,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",208,{"inputs":[{"name":"n"}],"output":{"generics":["u1"],"name":"point"}}],[11,"new","","Initializes this matrix from its components.",208,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"generics":["u2"],"name":"point"}}],[11,"new","","Initializes this matrix from its components.",208,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"generics":["u3"],"name":"point"}}],[11,"new","","Initializes this matrix from its components.",208,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"generics":["u4"],"name":"point"}}],[11,"new","","Initializes this matrix from its components.",208,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"generics":["u5"],"name":"point"}}],[11,"new","","Initializes this matrix from its components.",208,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"generics":["u6"],"name":"point"}}],[11,"index","","",208,null],[11,"index_mut","","",208,null],[11,"neg","","",208,null],[11,"sub","","",208,null],[11,"sub","","",208,null],[11,"sub","","",208,null],[11,"sub","","",208,null],[11,"add","","",208,null],[11,"add","","",208,null],[11,"add_assign","","",208,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"add_assign","","",208,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"sub_assign","","",208,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"sub_assign","","",208,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"mul","nalgebra::core","",1,null],[11,"mul","","",1,null],[11,"mul","nalgebra::geometry","",208,null],[11,"mul_assign","","",208,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"div","","",208,null],[11,"div_assign","","",208,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"origin","","",208,{"inputs":[],"output":{"name":"self"}}],[11,"coordinates","","",208,null],[11,"from_coordinates","","",208,null],[11,"scale_by","","",208,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"meet","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"join","","",208,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"meet_join","","",208,null],[11,"to_superset","","",208,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"is_in_subset","","",208,{"inputs":[{"name":"point"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",208,{"inputs":[{"name":"point"}],"output":{"name":"self"}}],[11,"to_superset","","",208,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"vectorn"}}],[11,"is_in_subset","","",208,{"inputs":[{"name":"vectorn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",208,{"inputs":[{"name":"vectorn"}],"output":{"name":"self"}}],[11,"deref","","",208,null],[11,"deref_mut","","",208,null],[11,"deref","","",208,null],[11,"deref_mut","","",208,null],[11,"deref","","",208,null],[11,"deref_mut","","",208,null],[11,"deref","","",208,null],[11,"deref_mut","","",208,null],[11,"deref","","",208,null],[11,"deref_mut","","",208,null],[11,"deref","","",208,null],[11,"deref_mut","","",208,null],[11,"fmt","","",213,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",213,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",213,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"matrix","","A reference to the underlying matrix representation of this rotation.",213,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"matrix_mut","","A mutable reference to the underlying matrix representation of this rotation.",213,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"unwrap","","Unwraps the underlying matrix.",213,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"to_homogeneous","","Converts this rotation into its equivalent homogeneous transformation matrix.",213,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"from_matrix_unchecked","","Creates a new rotation from the given square matrix.",213,{"inputs":[{"name":"matrixn"}],"output":{"name":"rotation"}}],[11,"transpose","","Transposes `self`.",213,{"inputs":[{"name":"self"}],"output":{"name":"rotation"}}],[11,"inverse","","Inverts `self`.",213,{"inputs":[{"name":"self"}],"output":{"name":"rotation"}}],[11,"transpose_mut","","Transposes `self` in-place.",213,{"inputs":[{"name":"self"}],"output":null}],[11,"inverse_mut","","Inverts `self` in-place.",213,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",213,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":{"name":"bool"}}],[11,"default_epsilon","","",213,null],[11,"default_max_relative","","",213,null],[11,"default_max_ulps","","",213,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",213,null],[11,"ulps_eq","","",213,null],[11,"fmt","","",213,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"identity","","Creates a new square identity rotation of the given `dimension`.",213,{"inputs":[],"output":{"name":"rotation"}}],[11,"one","","",213,{"inputs":[],"output":{"name":"self"}}],[11,"index","","",213,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"div","","",213,null],[11,"div","","",213,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"mul","nalgebra::core","",1,null],[11,"mul","","",1,null],[11,"div","","",1,null],[11,"div","","",1,null],[11,"mul","nalgebra::geometry","",213,null],[11,"mul","","",213,null],[11,"mul_assign","","",213,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"mul_assign","","",213,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",213,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",213,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"mul_assign","nalgebra::geometry::rotation_ops","",214,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"mul_assign","","",214,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",214,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",214,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"identity","nalgebra::geometry","",213,{"inputs":[],"output":{"name":"self"}}],[11,"inverse","","",213,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",213,{"inputs":[{"name":"self"}],"output":null}],[11,"operate","","",213,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"transform_point","","",213,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"transform_vector","","",213,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"inverse_transform_point","","",213,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"inverse_transform_vector","","",213,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"decompose","","",213,null],[11,"append_translation","","",213,null],[11,"prepend_translation","","",213,null],[11,"append_rotation","","",213,null],[11,"prepend_rotation","","",213,null],[11,"append_scaling","","",213,null],[11,"prepend_scaling","","",213,null],[11,"translation","","",213,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"rotation","","",213,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"scaling","","",213,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"powf","","",213,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"rotation_between","","",213,{"inputs":[{"name":"vectorn"},{"name":"vectorn"}],"output":{"name":"option"}}],[11,"scaled_rotation_between","","",213,{"inputs":[{"name":"vectorn"},{"name":"vectorn"},{"name":"n"}],"output":{"name":"option"}}],[11,"to_superset","","",213,{"inputs":[{"name":"self"}],"output":{"name":"rotation"}}],[11,"is_in_subset","","",213,{"inputs":[{"name":"rotation"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",213,{"inputs":[{"name":"rotation"}],"output":{"name":"self"}}],[11,"to_superset","","",213,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"is_in_subset","","",213,{"inputs":[{"name":"isometry"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",213,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"to_superset","","",213,{"inputs":[{"name":"self"}],"output":{"name":"similarity"}}],[11,"is_in_subset","","",213,{"inputs":[{"name":"similarity"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",213,{"inputs":[{"name":"similarity"}],"output":{"name":"self"}}],[11,"to_superset","","",213,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"is_in_subset","","",213,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",213,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",213,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"is_in_subset","","",213,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",213,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"fmt","","",209,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",209,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",209,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",209,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"into_owned","","Moves this unit quaternion into one that owns its data.",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"clone_owned","","Clones this unit quaternion into one that owns its data.",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"normalize","","Normalizes this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"conjugate","","Compute the conjugate of this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"try_inverse","","Inverts this quaternion if it is not zero.",209,{"inputs":[{"name":"self"}],"output":{"generics":["quaternion"],"name":"option"}}],[11,"lerp","","Linear interpolation between two quaternion.",209,{"inputs":[{"name":"self"},{"name":"quaternion"},{"name":"n"}],"output":{"name":"quaternion"}}],[11,"vector","","The vector part `(i, j, k)` of this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"generics":["u3","u1","rstride","cstride"],"name":"matrixslice"}}],[11,"scalar","","The scalar part `w` of this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"as_vector","","Reinterprets this quaternion as a 4D vector.",209,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"norm","","The norm of this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"norm_squared","","The squared norm of this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"polar_decomposition","","The polar decomposition of this quaternion.",209,null],[11,"exp","","Compute the exponential of a quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"ln","","Compute the natural logarithm of a quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"powf","","Raise the quaternion to a given floating power.",209,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"quaternion"}}],[11,"as_vector_mut","","Transforms this quaternion into its 4D vector form (Vector part, Scalar part).",209,{"inputs":[{"name":"self"}],"output":{"name":"vector4"}}],[11,"vector_mut","","The mutable vector part `(i, j, k)` of this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"generics":["u3","u1","rstride","cstride"],"name":"matrixslicemut"}}],[11,"conjugate_mut","","Replaces this quaternion by its conjugate.",209,{"inputs":[{"name":"self"}],"output":null}],[11,"try_inverse_mut","","Inverts this quaternion in-place if it is not zero.",209,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"normalize_mut","","Normalizes this quaternion.",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"default_epsilon","","",209,null],[11,"default_max_relative","","",209,null],[11,"default_max_ulps","","",209,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",209,null],[11,"ulps_eq","","",209,null],[11,"fmt","","",209,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_vector","","Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w` vector component.",209,{"inputs":[{"name":"vector4"}],"output":{"name":"self"}}],[11,"new","","Creates a new quaternion from its individual components. Note that the arguments order does not follow the storage order.",209,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_parts","","Creates a new quaternion from its scalar and vector parts. Note that the arguments order does not follow the storage order.",209,{"inputs":[{"name":"n"},{"generics":["u3"],"name":"vector"}],"output":{"name":"self"}}],[11,"from_polar_decomposition","","Creates a new quaternion from its polar decomposition.",209,{"inputs":[{"name":"n"},{"name":"n"},{"generics":["vector"],"name":"unit"}],"output":{"name":"self"}}],[11,"identity","","The quaternion multiplicative identity.",209,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",209,{"inputs":[],"output":{"name":"self"}}],[11,"zero","","",209,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",209,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"rand","","",209,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"index","","",209,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"index_mut","","",209,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"add","","",209,null],[11,"add","","",209,null],[11,"sub","","",209,null],[11,"sub","","",209,null],[11,"mul","","",209,null],[11,"mul","","",209,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"div","","",213,null],[11,"div","","",213,null],[11,"mul","","",209,null],[11,"mul_assign","","",209,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"div","","",209,null],[11,"div_assign","","",209,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"neg","","",209,null],[11,"add_assign","","",209,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"add_assign","","",209,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"sub_assign","","",209,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"sub_assign","","",209,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"mul_assign","","",209,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"mul_assign","","",209,{"inputs":[{"name":"self"},{"name":"quaternion"}],"output":null}],[11,"identity","","",209,{"inputs":[],"output":{"name":"self"}}],[11,"identity","","",209,{"inputs":[],"output":{"name":"self"}}],[11,"operate","","",209,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"operate","","",209,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"inverse","","",209,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"multiply_by","","",209,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"dimension","","",209,{"inputs":[],"output":{"name":"usize"}}],[11,"canonical_basis_element","","",209,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"dot","","",209,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"n"}}],[11,"component_unchecked","","",209,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"component_unchecked_mut","","",209,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"norm_squared","","",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"norm","","",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"normalize","","",209,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"normalize_mut","","",209,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"try_normalize","","",209,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"try_normalize_mut","","",209,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"to_superset","","",209,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"is_in_subset","","",209,{"inputs":[{"name":"quaternion"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",209,{"inputs":[{"name":"quaternion"}],"output":{"name":"self"}}],[11,"deref","","",209,null],[11,"deref_mut","","",209,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"div","","",213,null],[11,"div","","",213,null],[11,"mul_assign","","",213,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"mul_assign","","",213,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"div_assign","","",213,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"div_assign","","",213,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"fmt","","",210,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",210,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",210,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"from_vector","","Creates a new translation from the given vector.",210,{"inputs":[{"name":"vectorn"}],"output":{"name":"translation"}}],[11,"inverse","","Inverts `self`.",210,{"inputs":[{"name":"self"}],"output":{"name":"translation"}}],[11,"to_homogeneous","","Converts this translation into its equivalent homogeneous transformation matrix.",210,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"inverse_mut","","Inverts `self` in-place.",210,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",210,{"inputs":[{"name":"self"},{"name":"translation"}],"output":{"name":"bool"}}],[11,"default_epsilon","","",210,null],[11,"default_max_relative","","",210,null],[11,"default_max_ulps","","",210,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",210,null],[11,"ulps_eq","","",210,null],[11,"fmt","","",210,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"identity","","Creates a new square identity rotation of the given `dimension`.",210,{"inputs":[],"output":{"name":"translation"}}],[11,"one","","",210,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",210,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",210,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",210,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",210,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",210,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",210,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",210,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"div","","",210,null],[11,"div","","",210,null],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"mul_assign","","",210,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",210,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"div_assign","","",210,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"div_assign","","",210,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"identity","","",210,{"inputs":[],"output":{"name":"self"}}],[11,"inverse","","",210,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",210,{"inputs":[{"name":"self"}],"output":null}],[11,"operate","","",210,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"transform_point","","",210,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"transform_vector","","",210,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"inverse_transform_point","","",210,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"inverse_transform_vector","","",210,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"decompose","","",210,null],[11,"append_translation","","",210,null],[11,"prepend_translation","","",210,null],[11,"append_rotation","","",210,null],[11,"prepend_rotation","","",210,null],[11,"append_scaling","","",210,null],[11,"prepend_scaling","","",210,null],[11,"translation","","",210,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"rotation","","",210,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"scaling","","",210,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"to_vector","","",210,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[11,"from_vector","","",210,{"inputs":[{"name":"vectorn"}],"output":{"name":"option"}}],[11,"powf","","",210,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"translation_between","","",210,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"option"}}],[11,"to_superset","","",210,{"inputs":[{"name":"self"}],"output":{"name":"translation"}}],[11,"is_in_subset","","",210,{"inputs":[{"name":"translation"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",210,{"inputs":[{"name":"translation"}],"output":{"name":"self"}}],[11,"to_superset","","",210,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"is_in_subset","","",210,{"inputs":[{"name":"isometry"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",210,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"to_superset","","",210,{"inputs":[{"name":"self"}],"output":{"name":"similarity"}}],[11,"is_in_subset","","",210,{"inputs":[{"name":"similarity"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",210,{"inputs":[{"name":"similarity"}],"output":{"name":"self"}}],[11,"to_superset","","",210,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"is_in_subset","","",210,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",210,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",210,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"is_in_subset","","",210,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",210,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"fmt","","",211,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",211,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",211,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"from_parts","","Creates a new isometry from its rotational and translational parts.",211,{"inputs":[{"name":"translation"},{"name":"r"}],"output":{"name":"isometry"}}],[11,"inverse","","Inverts `self`.",211,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"inverse_mut","","Inverts `self`.",211,{"inputs":[{"name":"self"}],"output":null}],[11,"append_translation_mut","","Appends to `self` the given translation in-place.",211,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"append_rotation_mut","","Appends to `self` the given rotation in-place.",211,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"append_rotation_wrt_point_mut","","Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that lets `p` invariant.",211,{"inputs":[{"name":"self"},{"name":"r"},{"name":"point"}],"output":null}],[11,"append_rotation_wrt_center_mut","","Appends in-place to `self` a rotation centered at the point with coordinates `self.translation`.",211,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"to_homogeneous","","Converts this isometry into its equivalent homogeneous transformation matrix.",211,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"eq","","",211,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":{"name":"bool"}}],[11,"default_epsilon","","",211,null],[11,"default_max_relative","","",211,null],[11,"default_max_ulps","","",211,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",211,null],[11,"ulps_eq","","",211,null],[11,"fmt","","",211,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"identity","","Creates a new identity isometry.",211,{"inputs":[],"output":{"name":"self"}}],[11,"rotation_wrt_point","","The isometry that applies the rotation `r` with its axis passing through the point `p`. This effectively lets `p` invariant.",211,{"inputs":[{"name":"r"},{"name":"point"}],"output":{"name":"self"}}],[11,"one","","Creates a new identity isometry.",211,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",211,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation angle.",211,{"inputs":[{"name":"vector2"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation angle.",211,{"inputs":[{"name":"vector2"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation axis-angle.",211,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the point `eye` and looking toward `target`.",211,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",211,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",211,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation axis-angle.",211,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the point `eye` and looking toward `target`.",211,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",211,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",211,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"div","","",211,null],[11,"div","","",211,null],[11,"mul_assign","","",211,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",211,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",211,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"mul_assign","","",211,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"div_assign","","",211,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"div_assign","","",211,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"mul_assign","","",211,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"mul_assign","","",211,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"div_assign","","",211,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"div_assign","","",211,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"div","","",211,null],[11,"div","","",211,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"div","","",213,null],[11,"div","","",213,null],[11,"identity","","",211,{"inputs":[],"output":{"name":"self"}}],[11,"inverse","","",211,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",211,{"inputs":[{"name":"self"}],"output":null}],[11,"operate","","",211,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"transform_point","","",211,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"transform_vector","","",211,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"inverse_transform_point","","",211,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"inverse_transform_vector","","",211,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"decompose","","",211,null],[11,"append_translation","","",211,null],[11,"prepend_translation","","",211,null],[11,"append_rotation","","",211,null],[11,"prepend_rotation","","",211,null],[11,"append_scaling","","",211,null],[11,"prepend_scaling","","",211,null],[11,"append_rotation_wrt_point","","",211,null],[11,"translation","","",211,{"inputs":[{"name":"self"}],"output":{"name":"translation"}}],[11,"rotation","","",211,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"scaling","","",211,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"to_superset","","",211,{"inputs":[{"name":"self"}],"output":{"name":"isometry"}}],[11,"is_in_subset","","",211,{"inputs":[{"name":"isometry"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",211,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"to_superset","","",211,{"inputs":[{"name":"self"}],"output":{"name":"similarity"}}],[11,"is_in_subset","","",211,{"inputs":[{"name":"similarity"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",211,{"inputs":[{"name":"similarity"}],"output":{"name":"self"}}],[11,"to_superset","","",211,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"is_in_subset","","",211,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",211,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",211,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"is_in_subset","","",211,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",211,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"fmt","","",212,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",212,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",212,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"from_parts","","Creates a new similarity from its rotational and translational parts.",212,{"inputs":[{"name":"translation"},{"name":"r"},{"name":"n"}],"output":{"name":"similarity"}}],[11,"from_isometry","","Creates a new similarity from its rotational and translational parts.",212,{"inputs":[{"name":"isometry"},{"name":"n"}],"output":{"name":"similarity"}}],[11,"from_scaling","","Creates a new similarity that applies only a scaling factor.",212,{"inputs":[{"name":"n"}],"output":{"name":"similarity"}}],[11,"inverse","","Inverts `self`.",212,{"inputs":[{"name":"self"}],"output":{"name":"similarity"}}],[11,"inverse_mut","","Inverts `self` in-place.",212,{"inputs":[{"name":"self"}],"output":null}],[11,"set_scaling","","The scaling factor of this similarity transformation.",212,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"scaling","","The scaling factor of this similarity transformation.",212,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"prepend_scaling","","The similarity transformation that applies a scaling factor `scaling` before `self`.",212,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"append_scaling","","The similarity transformation that applies a scaling factor `scaling` after `self`.",212,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"prepend_scaling_mut","","Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.",212,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"append_scaling_mut","","Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.",212,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"append_translation_mut","","Appends to `self` the given translation in-place.",212,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"append_rotation_mut","","Appends to `self` the given rotation in-place.",212,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"append_rotation_wrt_point_mut","","Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that lets `p` invariant.",212,{"inputs":[{"name":"self"},{"name":"r"},{"name":"point"}],"output":null}],[11,"append_rotation_wrt_center_mut","","Appends in-place to `self` a rotation centered at the point with coordinates `self.translation`.",212,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"to_homogeneous","","Converts this similarity into its equivalent homogeneous transformation matrix.",212,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"eq","","",212,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":{"name":"bool"}}],[11,"default_epsilon","","",212,null],[11,"default_max_relative","","",212,null],[11,"default_max_ulps","","",212,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",212,null],[11,"ulps_eq","","",212,null],[11,"fmt","","",212,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"identity","","Creates a new identity similarity.",212,{"inputs":[],"output":{"name":"self"}}],[11,"one","","Creates a new identity similarity.",212,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",212,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"rotation_wrt_point","","The similarity that applies tha scaling factor `scaling`, followed by the rotation `r` with its axis passing through the point `p`.",212,{"inputs":[{"name":"r"},{"name":"point"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Creates a new similarity from a translation and a rotation angle.",212,{"inputs":[{"name":"vector2"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Creates a new similarity from a translation and a rotation angle.",212,{"inputs":[{"name":"vector2"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Creates a new similarity from a translation, rotation axis-angle, and scaling factor.",212,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_observer_frame","","Creates an similarity that corresponds to the a scaling factor and a local frame of an observer standing at the point `eye` and looking toward `target`.",212,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix including scaling factor.",212,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix including a scaling factor.",212,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Creates a new similarity from a translation, rotation axis-angle, and scaling factor.",212,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_observer_frame","","Creates an similarity that corresponds to the a scaling factor and a local frame of an observer standing at the point `eye` and looking toward `target`.",212,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix including scaling factor.",212,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix including a scaling factor.",212,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"self"}}],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"div","","",212,null],[11,"div","","",212,null],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":null}],[11,"div_assign","","",212,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":null}],[11,"div_assign","","",212,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"div_assign","","",212,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"div_assign","","",212,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"mul_assign","","",212,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"div_assign","","",212,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"div_assign","","",212,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"div","","",212,null],[11,"div","","",212,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"div","","",212,null],[11,"div","","",212,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"div","","",211,null],[11,"div","","",211,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"div","","",213,null],[11,"div","","",213,null],[11,"identity","","",212,{"inputs":[],"output":{"name":"self"}}],[11,"inverse","","",212,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",212,{"inputs":[{"name":"self"}],"output":null}],[11,"operate","","",212,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"transform_point","","",212,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"transform_vector","","",212,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"inverse_transform_point","","",212,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"inverse_transform_vector","","",212,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"decompose","","",212,null],[11,"append_translation","","",212,null],[11,"prepend_translation","","",212,null],[11,"append_rotation","","",212,null],[11,"prepend_rotation","","",212,null],[11,"append_scaling","","",212,null],[11,"prepend_scaling","","",212,null],[11,"append_rotation_wrt_point","","",212,null],[11,"translation","","",212,{"inputs":[{"name":"self"}],"output":{"name":"translation"}}],[11,"rotation","","",212,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"scaling","","",212,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"to_superset","","",212,{"inputs":[{"name":"self"}],"output":{"name":"similarity"}}],[11,"is_in_subset","","",212,{"inputs":[{"name":"similarity"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",212,{"inputs":[{"name":"similarity"}],"output":{"name":"self"}}],[11,"to_superset","","",212,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"is_in_subset","","",212,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",212,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",212,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"is_in_subset","","",212,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",212,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"fmt","","",215,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",215,{"inputs":[{"name":"self"}],"output":{"name":"tgeneral"}}],[11,"hash","","",215,null],[11,"eq","","",215,{"inputs":[{"name":"self"},{"name":"tgeneral"}],"output":{"name":"bool"}}],[11,"fmt","","",216,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",216,{"inputs":[{"name":"self"}],"output":{"name":"tprojective"}}],[11,"hash","","",216,null],[11,"eq","","",216,{"inputs":[{"name":"self"},{"name":"tprojective"}],"output":{"name":"bool"}}],[11,"fmt","","",217,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",217,{"inputs":[{"name":"self"}],"output":{"name":"taffine"}}],[11,"hash","","",217,null],[11,"eq","","",217,{"inputs":[{"name":"self"},{"name":"taffine"}],"output":{"name":"bool"}}],[11,"check_homogeneous_invariants","","",215,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"check_homogeneous_invariants","","",216,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"has_normalizer","","",217,{"inputs":[],"output":{"name":"bool"}}],[11,"check_homogeneous_invariants","","",217,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"fmt","","",218,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",218,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"eq","","",218,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"from_matrix_unchecked","","Creates a new transformation from the given homogeneous matrix. The transformation category of `Self` is not checked to be verified by the given matrix.",218,{"inputs":[{"generics":["dimnamesum"],"name":"matrixn"}],"output":{"name":"self"}}],[11,"unwrap","","The underlying matrix.",218,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"matrix","","A reference to the underlynig matrix.",218,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"matrix_mut_unchecked","","A mutable reference to the underlying matrix.",218,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"set_category","","Sets the category of this transform.",218,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"clone_owned","","Clones this transform into one that owns its data.",218,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"to_homogeneous","","Converts this transform into its equivalent homogeneous transformation matrix.",218,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"try_inverse","","Attempts to invert this transformation. You may use `.inverse` instead of this transformation has a subcategory of `TProjective`.",218,{"inputs":[{"name":"self"}],"output":{"generics":["transform"],"name":"option"}}],[11,"inverse","","Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral` category (it may not be invertible).",218,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"try_inverse_mut","","Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this transformation has a subcategory of `TProjective`.",218,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"inverse_mut","","Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the `TGeneral` category (it may not be invertible).",218,{"inputs":[{"name":"self"}],"output":null}],[11,"matrix_mut","","A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this transformation category is not `TGeneral`.",218,{"inputs":[{"name":"self"}],"output":{"name":"matrixn"}}],[11,"identity","","Creates a new identity transform.",218,{"inputs":[],"output":{"name":"self"}}],[11,"one","","Creates a new identity transform.",218,{"inputs":[],"output":{"name":"self"}}],[11,"index","","",218,null],[11,"index_mut","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",213,null],[11,"mul","","",213,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",211,null],[11,"mul","","",211,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",212,null],[11,"mul","","",212,null],[11,"mul","","",218,null],[11,"mul","","",218,null],[11,"mul","","",210,null],[11,"mul","","",210,null],[11,"div","","",218,null],[11,"div","","",218,null],[11,"div","","",218,null],[11,"div","","",218,null],[11,"div","","",213,null],[11,"div","","",213,null],[11,"div","","",218,null],[11,"div","","",218,null],[11,"div","","",218,null],[11,"div","","",218,null],[11,"div","","",210,null],[11,"div","","",210,null],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"transform"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"transform"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"similarity"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"isometry"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"mul_assign","","",218,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"transform"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"transform"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"translation"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"div_assign","","",218,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"identity","","",218,{"inputs":[],"output":{"name":"self"}}],[11,"inverse","","",218,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",218,{"inputs":[{"name":"self"}],"output":null}],[11,"operate","","",218,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"transform_point","","",218,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"transform_vector","","",218,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"inverse_transform_point","","",218,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"inverse_transform_vector","","",218,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"name":"vectorn"}}],[11,"to_superset","","",218,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"is_in_subset","","",218,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",218,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",218,{"inputs":[{"name":"self"}],"output":{"generics":["dimnamesum"],"name":"matrixn"}}],[11,"is_in_subset","","",218,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",218,{"inputs":[{"name":"matrixn"}],"output":{"name":"self"}}],[11,"new","","Creates a new reflection wrt the plane orthogonal to the given axis and bias.",219,{"inputs":[{"generics":["vector"],"name":"unit"},{"name":"n"}],"output":{"name":"reflection"}}],[11,"new_containing_point","","Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the point `pt`.",219,{"inputs":[{"generics":["vector"],"name":"unit"},{"name":"point"}],"output":{"name":"reflection"}}],[11,"axis","","The reflexion axis.",219,{"inputs":[{"name":"self"}],"output":{"name":"vector"}}],[11,"reflect","","Applies the reflection to the columns of `rhs`.",219,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"reflect_rows","","Applies the reflection to the rows of `rhs`.",219,{"inputs":[{"name":"self"},{"name":"matrix"},{"name":"vector"}],"output":null}],[11,"clone","","",220,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",220,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",220,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new orthographic projection matrix.",220,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_matrix_unchecked","","Wraps the given matrix to interpret it as a 3D orthographic matrix.",220,{"inputs":[{"name":"matrix4"}],"output":{"name":"self"}}],[11,"from_fov","","Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.",220,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"inverse","","Retrieves the inverse of the underlying homogeneous matrix.",220,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"to_homogeneous","","Computes the corresponding homogeneous matrix.",220,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"as_matrix","","A reference to the underlying homogeneous transformation matrix.",220,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"unwrap","","Retrieves the underlying homogeneous matrix.",220,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"left","","The smallest x-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"right","","The largest x-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"bottom","","The smallest y-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"top","","The largest y-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"znear","","The near plane offset of the view cuboid.",220,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"zfar","","The far plane offset of the view cuboid.",220,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"project_point","","Projects a point. Faster than matrix multiplication.",220,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"unproject_point","","Un-projects a point. Faster than multiplication by the underlying matrix inverse.",220,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"project_vector","","Projects a vector. Faster than matrix multiplication.",220,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"vector3"}}],[11,"set_left","","Sets the smallest x-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_right","","Sets the largest x-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_bottom","","Sets the smallest y-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_top","","Sets the largest y-coordinate of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_znear","","Sets the near plane offset of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_left_and_right","","Sets the view cuboid coordinates along the `x` axis.",220,{"inputs":[{"name":"self"},{"name":"n"},{"name":"n"}],"output":null}],[11,"set_bottom_and_top","","Sets the view cuboid coordinates along the `y` axis.",220,{"inputs":[{"name":"self"},{"name":"n"},{"name":"n"}],"output":null}],[11,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",220,{"inputs":[{"name":"self"},{"name":"n"},{"name":"n"}],"output":null}],[11,"rand","","",220,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",221,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",221,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",221,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.",221,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_matrix_unchecked","","Wraps the given matrix to interpret it as a 3D perspective matrix.",221,{"inputs":[{"name":"matrix4"}],"output":{"name":"self"}}],[11,"inverse","","Retrieves the inverse of the underlying homogeneous matrix.",221,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"to_homogeneous","","Computes the corresponding homogeneous matrix.",221,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"as_matrix","","A reference to the underlying homogeneous transformation matrix.",221,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"unwrap","","Retrieves the underlying homogeneous matrix.",221,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"aspect","","Gets the `width / height` aspect ratio of the view frustrum.",221,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"fovy","","Gets the y field of view of the view frustrum.",221,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"znear","","Gets the near plane offset of the view frustrum.",221,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"zfar","","Gets the far plane offset of the view frustrum.",221,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"project_point","","Projects a point. Faster than matrix multiplication.",221,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"unproject_point","","Un-projects a point. Faster than multiplication by the matrix inverse.",221,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"project_vector","","Projects a vector. Faster than matrix multiplication.",221,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"vector3"}}],[11,"set_aspect","","Updates this perspective matrix with a new `width / height` aspect ratio of the view frustrum.",221,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_fovy","","Updates this perspective with a new y field of view of the view frustrum.",221,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_znear","","Updates this perspective matrix with a new near plane offset of the view frustrum.",221,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_zfar","","Updates this perspective matrix with a new far plane offset of the view frustrum.",221,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"set_znear_and_zfar","","Updates this perspective matrix with new near and far plane offsets of the view frustrum.",221,{"inputs":[{"name":"self"},{"name":"n"},{"name":"n"}],"output":null}],[11,"rand","","",221,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[6,"Point1","","A statically sized 1-dimensional column point.",null,null],[6,"Point2","","A statically sized 2-dimensional column point.",null,null],[6,"Point3","","A statically sized 3-dimensional column point.",null,null],[6,"Point4","","A statically sized 4-dimensional column point.",null,null],[6,"Point5","","A statically sized 5-dimensional column point.",null,null],[6,"Point6","","A statically sized 6-dimensional column point.",null,null],[6,"Rotation2","","A 2-dimensional rotation matrix.",null,null],[6,"Rotation3","","A 3-dimensional rotation matrix.",null,null],[6,"UnitQuaternion","","A unit quaternions. May be used to represent a rotation.",null,null],[6,"UnitComplex","","A complex number with a norm equal to 1.",null,null],[6,"Translation2","","A 2-dimensional translation.",null,null],[6,"Translation3","","A 3-dimensional translation.",null,null],[6,"Isometry2","","A 2-dimensional isometry using a unit complex number for its rotational part.",null,null],[6,"Isometry3","","A 3-dimensional isometry using a unit quaternion for its rotational part.",null,null],[6,"IsometryMatrix2","","A 2-dimensional isometry using a rotation matrix for its rotational part.",null,null],[6,"IsometryMatrix3","","A 3-dimensional isometry using a rotation matrix for its rotational part.",null,null],[6,"Similarity2","","A 2-dimensional similarity.",null,null],[6,"Similarity3","","A 3-dimensional similarity.",null,null],[6,"SimilarityMatrix2","","A 2-dimensional similarity using a rotation matrix for its rotation part.",null,null],[6,"SimilarityMatrix3","","A 3-dimensional similarity using a rotation matrix for its rotation part.",null,null],[6,"Transform2","","A 2D general transformation that may not be inversible. Stored as an homogeneous 3x3 matrix.",null,null],[6,"Projective2","","An inversible 2D general transformation. Stored as an homogeneous 3x3 matrix.",null,null],[6,"Affine2","","A 2D affine transformation. Stored as an homogeneous 3x3 matrix.",null,null],[6,"Transform3","","A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix.",null,null],[6,"Projective3","","An inversible 3D general transformation. Stored as an homogeneous 4x4 matrix.",null,null],[6,"Affine3","","A 3D affine transformation. Stored as an homogeneous 4x4 matrix.",null,null],[8,"TCategory","","Trait implemented by phantom types identifying the projective transformation type.",null,null],[11,"has_normalizer","","Indicates whether a `Transform` with the category `Self` has a bottom-row different from `0 0 .. 1`.",222,{"inputs":[],"output":{"name":"bool"}}],[10,"check_homogeneous_invariants","","Checks that the given matrix is a valid homogeneous representation of an element of the category `Self`.",222,{"inputs":[{"name":"matrixn"}],"output":{"name":"bool"}}],[8,"TCategoryMul","","Traits that gives the `Transform` category that is compatible with the result of the multiplication of transformations with categories `Self` and `Other`.",null,null],[16,"Representative","","The transform category that results from the multiplication of a `Transform<Self>` to a `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most general category.",223,null],[8,"SuperTCategoryOf","","Indicates that `Self` is a more general `Transform` category than `Other`.",null,null],[8,"SubTCategoryOf","","Indicates that `Self` is a more specific `Transform` category than `Other`.",null,null],[11,"powf","nalgebra","",224,null],[11,"rotation_between","","",224,null],[11,"scaled_rotation_between","","",224,null],[11,"fmt","","",224,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"zero","","",224,{"inputs":[],"output":{"generics":["multiplicative"],"name":"id"}}],[11,"is_zero","","",224,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"div_assign","","",224,null],[11,"to_vector","","",224,null],[11,"from_vector","","",224,null],[11,"clone","","",224,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"div","","",224,{"inputs":[{"name":"self"},{"generics":["multiplicative"],"name":"id"}],"output":{"generics":["multiplicative"],"name":"id"}}],[11,"meet","","",224,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"id"}}],[11,"mul","","",224,{"inputs":[{"name":"self"},{"generics":["multiplicative"],"name":"id"}],"output":{"generics":["multiplicative"],"name":"id"}}],[11,"translation","","",224,null],[11,"rotation","","",224,null],[11,"scaling","","",224,null],[11,"decompose","","",224,null],[11,"append_translation","","",224,null],[11,"prepend_translation","","",224,null],[11,"append_rotation","","",224,null],[11,"prepend_rotation","","",224,null],[11,"append_scaling","","",224,null],[11,"prepend_scaling","","",224,null],[11,"transform_point","","",224,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"transform_vector","","",224,null],[11,"partial_cmp","","",224,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"to_superset","","",224,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"is_in_subset","","",224,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",224,{"inputs":[{"name":"t"}],"output":{"name":"id"}}],[11,"inverse","","",224,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"inverse_mut","","",224,null],[11,"join","","",224,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"id"}}],[11,"add_assign","","",224,null],[11,"fmt","","",224,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"operate","","",224,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"id"}}],[11,"add","","",224,{"inputs":[{"name":"self"},{"generics":["multiplicative"],"name":"id"}],"output":{"generics":["multiplicative"],"name":"id"}}],[11,"eq","","",224,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"bool"}}],[11,"default_epsilon","","",224,null],[11,"default_max_relative","","",224,null],[11,"default_max_ulps","","",224,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",224,null],[11,"ulps_eq","","",224,null],[11,"identity","","",224,{"inputs":[],"output":{"name":"id"}}],[11,"mul_assign","","",224,null],[11,"inverse_transform_point","","",224,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"e"}}],[11,"inverse_transform_vector","","",224,null],[11,"one","","",224,{"inputs":[],"output":{"generics":["multiplicative"],"name":"id"}}],[11,"new","","Creates a new identity element.",224,{"inputs":[],"output":{"name":"id"}}],[11,"sum","nalgebra::core","",214,{"inputs":[{"name":"i"}],"output":{"name":"matrixmn"}}],[11,"sum","","",214,{"inputs":[{"name":"i"}],"output":{"name":"matrixmn"}}],[11,"product","","",225,{"inputs":[{"name":"i"}],"output":{"name":"matrixn"}}],[11,"product","","",225,{"inputs":[{"name":"i"}],"output":{"name":"matrixn"}}],[11,"iamax","","Computes the index of the vector component with the largest absolute value.",226,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"axpy","","Computes `self = a * x + b * self`.",226,{"inputs":[{"name":"self"},{"name":"n"},{"name":"vector"},{"name":"n"}],"output":null}],[11,"gemv","","Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and `alpha, beta` two scalars.",226,{"inputs":[{"name":"self"},{"name":"n"},{"name":"matrix"},{"name":"vector"},{"name":"n"}],"output":null}],[11,"gemv_symm","","Computes `self = alpha * a * x + beta * self`, where `a` is a symmetric matrix, `x` a vector, and `alpha, beta` two scalars.",226,{"inputs":[{"name":"self"},{"name":"n"},{"name":"matrix"},{"name":"vector"},{"name":"n"}],"output":null}],[11,"is","","Tests if `Self` the the same as the type `T`",194,{"inputs":[],"output":{"name":"bool"}}],[11,"vget_unchecked","","Gets a reference to the i-th element of this column vector without bound checking.",226,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"vget_unchecked_mut","","Gets a mutable reference to the i-th element of this column vector without bound checking.",226,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"diagonal","","Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.",199,{"inputs":[{"name":"self"}],"output":{"name":"vectorn"}}],[11,"trace","","Computes a trace of a square matrix, i.e., the sum of its diagonal elements.",199,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"to_homogeneous","","Computes the coordinates in projective space of this vector, i.e., appends a `0` to its coordinates.",226,{"inputs":[{"name":"self"}],"output":{"generics":["dimsum"],"name":"vectorn"}}],[11,"from_homogeneous","","Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of `self`. Returns `None` if this last component is not zero.",226,{"inputs":[{"generics":["dimsum"],"name":"vector"}],"output":{"generics":["vectorn"],"name":"option"}}],[11,"new_uninitialized_generic","","Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics if `nrows != R::to_usize()` or `ncols != C::to_usize()`.",214,{"inputs":[{"name":"r"},{"name":"c"}],"output":{"name":"self"}}],[11,"from_element_generic","","Creates a matrix with all its elements set to `elem`.",214,{"inputs":[{"name":"r"},{"name":"c"},{"name":"n"}],"output":{"name":"self"}}],[11,"zeros_generic","","Creates a matrix with all its elements set to 0.",214,{"inputs":[{"name":"r"},{"name":"c"}],"output":{"name":"self"}}],[11,"from_iterator_generic","","Creates a matrix with all its elements filled by an iterator.",214,{"inputs":[{"name":"r"},{"name":"c"},{"name":"i"}],"output":{"name":"self"}}],[11,"from_row_slice_generic","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",214,null],[11,"from_column_slice_generic","","Creates a matrix with its elements filled with the components provided by a slice. The components must have the same layout as the matrix data storage (i.e. row-major or column-major).",214,null],[11,"from_fn_generic","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",214,{"inputs":[{"name":"r"},{"name":"c"},{"name":"f"}],"output":{"name":"self"}}],[11,"identity_generic","","Creates a new indentity matrix.",214,{"inputs":[{"name":"r"},{"name":"c"}],"output":{"name":"self"}}],[11,"from_diagonal_element_generic","","Creates a new matrix with its diagonal filled with copies of `elt`.",214,{"inputs":[{"name":"r"},{"name":"c"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_partial_diagonal_generic","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",214,null],[11,"from_rows","","Builds a new matrix from its rows.",214,null],[11,"from_columns","","Builds a new matrix from its columns.",214,null],[11,"new_random_generic","","Creates a matrix filled with random values.",214,{"inputs":[{"name":"r"},{"name":"c"}],"output":{"name":"self"}}],[11,"from_diagonal","","Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.",225,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",214,{"inputs":[],"output":{"name":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",214,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",214,{"inputs":[],"output":{"name":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",214,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",214,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",214,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",214,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",214,{"inputs":[],"output":{"name":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",214,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",214,null],[11,"new_random","","Creates a matrix filled with random values.",214,{"inputs":[],"output":{"name":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",214,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",214,{"inputs":[{"name":"usize"},{"name":"i"}],"output":{"name":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",214,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",214,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",214,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",214,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",214,null],[11,"new_random","","Creates a matrix filled with random values.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",214,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",214,{"inputs":[{"name":"usize"},{"name":"i"}],"output":{"name":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",214,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",214,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",214,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",214,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",214,null],[11,"new_random","","Creates a matrix filled with random values.",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",214,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",214,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",214,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",214,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",214,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",214,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",214,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",214,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",214,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",214,null],[11,"new_random","","Creates a matrix filled with random values.",214,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",214,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",214,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",225,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",214,{"inputs":[],"output":{"name":"self"}}],[11,"min_value","","",214,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",214,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new","","Initializes this matrix from its components.",214,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"x","","The column vector with a 1 as its first component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"self"}}],[11,"y","","The column vector with a 1 as its second component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"self"}}],[11,"z","","The column vector with a 1 as its third component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"self"}}],[11,"w","","The column vector with a 1 as its fourth component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"self"}}],[11,"a","","The column vector with a 1 as its fifth component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"self"}}],[11,"b","","The column vector with a 1 as its sixth component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"self"}}],[11,"x_axis","","The unit column vector with a 1 as its first component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"unit"}}],[11,"y_axis","","The unit column vector with a 1 as its second component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"unit"}}],[11,"z_axis","","The unit column vector with a 1 as its third component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"unit"}}],[11,"w_axis","","The unit column vector with a 1 as its fourth component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"unit"}}],[11,"a_axis","","The unit column vector with a 1 as its fifth component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"unit"}}],[11,"b_axis","","The unit column vector with a 1 as its sixth component, and zero elsewhere.",227,{"inputs":[],"output":{"name":"unit"}}],[11,"is_special_orthogonal","","Checks that this matrix is orthogonal and has a determinant equal to 1.",199,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"bool"}}],[11,"is_invertible","","Returns `true` if this matrix is invertible.",199,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"identity","","",214,{"inputs":[],"output":{"name":"self"}}],[11,"operate","","",214,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"inverse","","",214,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"inverse_mut","","",214,{"inputs":[{"name":"self"}],"output":null}],[11,"multiply_by","","",214,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"dimension","","",214,{"inputs":[],"output":{"name":"usize"}}],[11,"canonical_basis_element","","",214,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"dot","","",214,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"n"}}],[11,"component_unchecked","","",214,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"component_unchecked_mut","","",214,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"n"}}],[11,"norm_squared","","",214,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"norm","","",214,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"normalize","","",214,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"normalize_mut","","",214,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"try_normalize","","",214,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"try_normalize_mut","","",214,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"angle","","",214,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"n"}}],[11,"inner_product","","",214,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"n"}}],[11,"orthonormalize","","",214,null],[11,"orthonormal_subspace_basis","","",214,null],[11,"identity","","",225,{"inputs":[],"output":{"name":"self"}}],[11,"operate","","",225,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"meet","","",214,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"join","","",214,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"meet_join","","",214,null],[11,"to_superset","","",214,{"inputs":[{"name":"self"}],"output":{"name":"matrixmn"}}],[11,"is_in_subset","","",214,{"inputs":[{"name":"matrixmn"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",214,{"inputs":[{"name":"matrixmn"}],"output":{"name":"self"}}],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"from","","",214,null],[11,"new_scaling","","Creates a new homogeneous matrix that applies the same scaling factor on each dimension.",225,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"new_nonuniform_scaling","","Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.",225,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"new_translation","","Creates a new homogeneous matrix that applies a pure translation.",225,{"inputs":[{"name":"vector"}],"output":{"name":"self"}}],[11,"new_rotation","","Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.",228,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"new_rotation","","Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).",229,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"new_rotation_wrt_point","","Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).",229,{"inputs":[{"name":"vector3"},{"name":"point3"}],"output":{"name":"self"}}],[11,"from_scaled_axis","","Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).",229,{"inputs":[{"name":"vector3"}],"output":{"name":"self"}}],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",229,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_axis_angle","","Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.",229,{"inputs":[{"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_orthographic","","Creates a new homogeneous matrix for an orthographic projection.",229,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_perspective","","Creates a new homogeneous matrix for a perspective projection.",229,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the point `eye` and looking toward `target`.",229,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",229,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",229,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"self"}}],[11,"append_scaling","","Computes the transformation equal to `self` followed by an uniform scaling factor.",199,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"matrixn"}}],[11,"prepend_scaling","","Computes the transformation equal to an uniform scaling factor followed by `self`.",199,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"matrixn"}}],[11,"append_nonuniform_scaling","","Computes the transformation equal to `self` followed by a non-uniform scaling factor.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"matrixn"}}],[11,"prepend_nonuniform_scaling","","Computes the transformation equal to a non-uniform scaling factor followed by `self`.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"matrixn"}}],[11,"append_translation","","Computes the transformation equal to `self` followed by a translation.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"matrixn"}}],[11,"prepend_translation","","Computes the transformation equal to a translation followed by `self`.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":{"name":"matrixn"}}],[11,"append_scaling_mut","","Computes in-place the transformation equal to `self` followed by an uniform scaling factor.",199,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"prepend_scaling_mut","","Computes in-place the transformation equal to an uniform scaling factor followed by `self`.",199,{"inputs":[{"name":"self"},{"name":"n"}],"output":null}],[11,"append_nonuniform_scaling_mut","","Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"prepend_nonuniform_scaling_mut","","Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"append_translation_mut","","Computes the transformation equal to `self` followed by a translation.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"prepend_translation_mut","","Computes the transformation equal to a translation followed by `self`.",199,{"inputs":[{"name":"self"},{"name":"vector"}],"output":null}],[11,"transform_vector","","",225,{"inputs":[{"name":"self"},{"name":"vectorn"}],"output":{"generics":["dimnamediff"],"name":"vectorn"}}],[11,"transform_point","","",225,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"generics":["dimnamediff"],"name":"point"}}],[11,"to_superset","nalgebra::geometry","",230,{"inputs":[{"name":"self"}],"output":{"name":"unitquaternion"}}],[11,"is_in_subset","","",230,{"inputs":[{"name":"unitquaternion"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",230,{"inputs":[{"name":"unitquaternion"}],"output":{"name":"self"}}],[11,"to_superset","","",231,{"inputs":[{"name":"self"}],"output":{"name":"unitcomplex"}}],[11,"is_in_subset","","",231,{"inputs":[{"name":"unitcomplex"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",231,{"inputs":[{"name":"unitcomplex"}],"output":{"name":"self"}}],[11,"new","","Builds a 2 dimensional rotation matrix from an angle in radian.",231,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"from_scaled_axis","","Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.",231,{"inputs":[{"generics":["u1"],"name":"vector"}],"output":{"name":"self"}}],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with its angl.",231,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",231,{"inputs":[{"name":"vector"},{"name":"vector"},{"name":"n"}],"output":{"name":"self"}}],[11,"angle","","The rotation angle.",231,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",231,{"inputs":[{"name":"self"},{"name":"rotation2"}],"output":{"name":"n"}}],[11,"rotation_to","","The rotation matrix needed to make `self` and `other` coincide.",231,{"inputs":[{"name":"self"},{"name":"rotation2"}],"output":{"name":"rotation2"}}],[11,"powf","","Raise the quaternion to a given floating power, i.e., returns the rotation with the angle of `self` multiplied by `n`.",231,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"rotation2"}}],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",231,{"inputs":[{"name":"self"}],"output":{"generics":["u1"],"name":"vectorn"}}],[11,"rand","","",231,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an angle.",230,{"inputs":[{"generics":["u3"],"name":"vector"}],"output":{"name":"self"}}],[11,"from_scaled_axis","","Builds a 3D rotation matrix from an axis scaled by the rotation angle.",230,{"inputs":[{"generics":["u3"],"name":"vector"}],"output":{"name":"self"}}],[11,"from_axis_angle","","Builds a 3D rotation matrix from an axis and a rotation angle.",230,{"inputs":[{"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",230,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_observer_frame","","Creates a rotation that corresponds to the local frame of an observer standing at the origin and looking toward `dir`.",230,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix without translation.",230,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix without translation.",230,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with its angl.",230,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"option"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",230,{"inputs":[{"name":"vector"},{"name":"vector"},{"name":"n"}],"output":{"name":"option"}}],[11,"angle","","The rotation angle.",230,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"axis","","The rotation axis. Returns `None` if the rotation angle is zero or PI.",230,{"inputs":[{"name":"self"}],"output":{"generics":["unit"],"name":"option"}}],[11,"scaled_axis","","The rotation axis multiplied by the rotation angle.",230,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",230,{"inputs":[{"name":"self"},{"name":"rotation3"}],"output":{"name":"n"}}],[11,"rotation_to","","The rotation matrix needed to make `self` and `other` coincide.",230,{"inputs":[{"name":"self"},{"name":"rotation3"}],"output":{"name":"rotation3"}}],[11,"powf","","Raise the quaternion to a given floating power, i.e., returns the rotation with the same axis as `self` and an angle equal to `self.angle()` multiplied by `n`.",230,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"rotation3"}}],[11,"rand","","",230,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"into_owned","","Moves this unit quaternion into one that owns its data.",232,{"inputs":[{"name":"self"}],"output":{"name":"unitquaternion"}}],[11,"clone_owned","","Clones this unit quaternion into one that owns its data.",232,{"inputs":[{"name":"self"}],"output":{"name":"unitquaternion"}}],[11,"angle","","The rotation angle in [0; pi] of this unit quaternion.",232,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"quaternion","","The underlying quaternion.",232,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"conjugate","","Compute the conjugate of this unit quaternion.",232,{"inputs":[{"name":"self"}],"output":{"name":"unitquaternion"}}],[11,"inverse","","Inverts this quaternion if it is not zero.",232,{"inputs":[{"name":"self"}],"output":{"name":"unitquaternion"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":{"name":"n"}}],[11,"rotation_to","","The unit quaternion needed to make `self` and `other` coincide.",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":{"name":"unitquaternion"}}],[11,"lerp","","Linear interpolation between two unit quaternions.",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"},{"name":"n"}],"output":{"name":"quaternion"}}],[11,"nlerp","","Normalized linear interpolation between two unit quaternions.",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"slerp","","Spherical linear interpolation between two unit quaternions.",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"try_slerp","","Computes the spherical linear interpolation between two unit quaternions or returns `None` if both quaternions are approximately 180 degrees apart (in which case the interpolation is not well-defined).",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"},{"name":"n"},{"name":"n"}],"output":{"generics":["unitquaternion"],"name":"option"}}],[11,"conjugate_mut","","Compute the conjugate of this unit quaternion in-place.",232,{"inputs":[{"name":"self"}],"output":null}],[11,"inverse_mut","","Inverts this quaternion if it is not zero.",232,{"inputs":[{"name":"self"}],"output":null}],[11,"axis","","The rotation axis of this unit quaternion or `None` if the rotation is zero.",232,{"inputs":[{"name":"self"}],"output":{"generics":["unit"],"name":"option"}}],[11,"scaled_axis","","The rotation axis of this unit quaternion multiplied by the rotation agle.",232,{"inputs":[{"name":"self"}],"output":{"name":"vector3"}}],[11,"exp","","Compute the exponential of a quaternion.",232,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"ln","","Compute the natural logarithm of a quaternion.",232,{"inputs":[{"name":"self"}],"output":{"name":"quaternion"}}],[11,"powf","","Raise the quaternion to a given floating power.",232,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"to_rotation_matrix","","Builds a rotation matrix from this unit quaternion.",232,{"inputs":[{"name":"self"}],"output":{"generics":["u3"],"name":"rotation"}}],[11,"to_homogeneous","","Converts this unit quaternion into its equivalent homogeneous transformation matrix.",232,{"inputs":[{"name":"self"}],"output":{"generics":["u4"],"name":"matrixn"}}],[11,"fmt","","",232,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_epsilon","","",232,null],[11,"default_max_relative","","",232,null],[11,"default_max_ulps","","",232,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",232,null],[11,"ulps_eq","","",232,null],[11,"identity","","The quaternion multiplicative identity.",232,{"inputs":[],"output":{"name":"self"}}],[11,"from_axis_angle","","Creates a new quaternion from a unit vector (the rotation axis) and an angle (the rotation angle).",232,{"inputs":[{"name":"unit"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_quaternion","","Creates a new unit quaternion from a quaternion.",232,{"inputs":[{"name":"quaternion"}],"output":{"name":"self"}}],[11,"from_euler_angles","","Creates a new unit quaternion from Euler angles.",232,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_rotation_matrix","","Builds an unit quaternion from a rotation matrix.",232,{"inputs":[{"name":"rotation"}],"output":{"name":"self"}}],[11,"rotation_between","","The unit quaternion needed to make `a` and `b` be collinear and point toward the same direction.",232,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"option"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",232,{"inputs":[{"name":"vector"},{"name":"vector"},{"name":"n"}],"output":{"name":"option"}}],[11,"new_observer_frame","","Creates an unit quaternion that corresponds to the local frame of an observer standing at the origin and looking toward `dir`.",232,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix without translation.",232,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix without translation.",232,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"new","","Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.",232,{"inputs":[{"generics":["u3"],"name":"vector"}],"output":{"name":"self"}}],[11,"from_scaled_axis","","Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.",232,{"inputs":[{"generics":["u3"],"name":"vector"}],"output":{"name":"self"}}],[11,"one","","",232,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",232,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"div","","",232,null],[11,"div","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"div","","",232,null],[11,"div","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul_assign","","",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"mul_assign","","",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"div_assign","","",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"div_assign","","",232,{"inputs":[{"name":"self"},{"name":"unitquaternion"}],"output":null}],[11,"mul_assign","","",232,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"mul_assign","","",232,{"inputs":[{"name":"self"},{"generics":["u3"],"name":"rotation"}],"output":null}],[11,"div_assign","","",232,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",232,{"inputs":[{"name":"self"},{"generics":["u3"],"name":"rotation"}],"output":null}],[11,"identity","","",232,{"inputs":[],"output":{"name":"self"}}],[11,"operate","","",232,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"inverse","","",232,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",232,{"inputs":[{"name":"self"}],"output":null}],[11,"transform_point","","",232,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"transform_vector","","",232,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"inverse_transform_point","","",232,{"inputs":[{"name":"self"},{"name":"point3"}],"output":{"name":"point3"}}],[11,"inverse_transform_vector","","",232,{"inputs":[{"name":"self"},{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"decompose","","",232,null],[11,"append_translation","","",232,null],[11,"prepend_translation","","",232,null],[11,"append_rotation","","",232,null],[11,"prepend_rotation","","",232,null],[11,"append_scaling","","",232,null],[11,"prepend_scaling","","",232,null],[11,"translation","","",232,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"rotation","","",232,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"scaling","","",232,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"powf","","",232,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"rotation_between","","",232,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"option"}}],[11,"scaled_rotation_between","","",232,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"option"}}],[11,"to_superset","","",232,{"inputs":[{"name":"self"}],"output":{"name":"unitquaternion"}}],[11,"is_in_subset","","",232,{"inputs":[{"name":"unitquaternion"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",232,{"inputs":[{"name":"unitquaternion"}],"output":{"name":"self"}}],[11,"to_superset","","",232,{"inputs":[{"name":"self"}],"output":{"name":"rotation3"}}],[11,"is_in_subset","","",232,{"inputs":[{"name":"rotation3"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",232,{"inputs":[{"name":"rotation3"}],"output":{"name":"self"}}],[11,"to_superset","","",232,{"inputs":[{"name":"self"}],"output":{"generics":["u3"],"name":"isometry"}}],[11,"is_in_subset","","",232,{"inputs":[{"name":"isometry"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",232,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"to_superset","","",232,{"inputs":[{"name":"self"}],"output":{"generics":["u3"],"name":"similarity"}}],[11,"is_in_subset","","",232,{"inputs":[{"name":"similarity"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",232,{"inputs":[{"name":"similarity"}],"output":{"name":"self"}}],[11,"to_superset","","",232,{"inputs":[{"name":"self"}],"output":{"generics":["u3"],"name":"transform"}}],[11,"is_in_subset","","",232,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",232,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",232,{"inputs":[{"name":"self"}],"output":{"name":"matrix4"}}],[11,"is_in_subset","","",232,{"inputs":[{"name":"matrix4"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",232,{"inputs":[{"name":"matrix4"}],"output":{"name":"self"}}],[11,"angle","","The rotation angle in `]-pi; pi]` of this unit complex number.",233,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"sin_angle","","The sine of the rotation angle.",233,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"cos_angle","","The cosine of the rotation angle.",233,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",233,{"inputs":[{"name":"self"}],"output":{"name":"vector1"}}],[11,"complex","","The underlying complex number.",233,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"conjugate","","Compute the conjugate of this unit complex number.",233,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse","","Inverts this complex number if it is not zero.",233,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",233,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"n"}}],[11,"rotation_to","","The unit complex number needed to make `self` and `other` coincide.",233,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"conjugate_mut","","Compute in-place the conjugate of this unit complex number.",233,{"inputs":[{"name":"self"}],"output":null}],[11,"inverse_mut","","Inverts in-place this unit complex number.",233,{"inputs":[{"name":"self"}],"output":null}],[11,"powf","","Raise this unit complex number to a given floating power.",233,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"self"}}],[11,"to_rotation_matrix","","Builds the rotation matrix corresponding to this unit complex number.",233,{"inputs":[{"name":"self"}],"output":{"name":"rotation2"}}],[11,"to_homogeneous","","Converts this unit complex number into its equivalent homogeneous transformation matrix.",233,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"fmt","","",233,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_epsilon","","",233,null],[11,"default_max_relative","","",233,null],[11,"default_max_ulps","","",233,{"inputs":[],"output":{"name":"u32"}}],[11,"relative_eq","","",233,null],[11,"ulps_eq","","",233,null],[11,"identity","","The unit complex number multiplicative identity.",233,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Builds the unit complex number corresponding to the rotation with the angle.",233,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"from_angle","","Builds the unit complex number corresponding to the rotation with the angle.",233,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[11,"from_cos_sin_unchecked","","Builds the unit complex number frow the sinus and cosinus of the rotation angle.",233,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"self"}}],[11,"from_scaled_axis","","Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.",233,{"inputs":[{"generics":["u1"],"name":"vector"}],"output":{"name":"self"}}],[11,"from_complex","","Creates a new unit complex number from a complex number.",233,{"inputs":[{"name":"complex"}],"output":{"name":"self"}}],[11,"from_complex_and_get","","Creates a new unit complex number from a complex number.",233,null],[11,"from_rotation_matrix","","Builds the unit complex number from the corresponding 2D rotation matrix.",233,{"inputs":[{"name":"rotation"}],"output":{"name":"self"}}],[11,"rotation_between","","The unit complex needed to make `a` and `b` be collinear and point toward the same direction.",233,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"self"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",233,{"inputs":[{"name":"vector"},{"name":"vector"},{"name":"n"}],"output":{"name":"self"}}],[11,"one","","",233,{"inputs":[],"output":{"name":"self"}}],[11,"rand","","",233,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"mul","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":{"name":"unitcomplex"}}],[11,"mul","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":{"name":"unitcomplex"}}],[11,"div","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":{"name":"unitcomplex"}}],[11,"div","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":{"name":"unitcomplex"}}],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"div","","",233,null],[11,"div","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul","","",233,null],[11,"mul_assign","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"mul_assign","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"div_assign","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"div_assign","","",233,{"inputs":[{"name":"self"},{"name":"unitcomplex"}],"output":null}],[11,"mul_assign","","",233,{"inputs":[{"name":"self"},{"generics":["u2"],"name":"rotation"}],"output":null}],[11,"mul_assign","","",233,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"div_assign","","",233,{"inputs":[{"name":"self"},{"generics":["u2"],"name":"rotation"}],"output":null}],[11,"div_assign","","",233,{"inputs":[{"name":"self"},{"name":"rotation"}],"output":null}],[11,"rotate","","Performs the multiplication `rhs = self * rhs` in-place.",233,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"rotate_rows","","Performs the multiplication `lhs = lhs * self` in-place.",233,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"identity","","",233,{"inputs":[],"output":{"name":"self"}}],[11,"operate","","",233,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"inverse","","",233,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inverse_mut","","",233,{"inputs":[{"name":"self"}],"output":null}],[11,"transform_point","","",233,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"point2"}}],[11,"transform_vector","","",233,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"inverse_transform_point","","",233,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"point2"}}],[11,"inverse_transform_vector","","",233,{"inputs":[{"name":"self"},{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"decompose","","",233,null],[11,"append_translation","","",233,null],[11,"prepend_translation","","",233,null],[11,"append_rotation","","",233,null],[11,"prepend_rotation","","",233,null],[11,"append_scaling","","",233,null],[11,"prepend_scaling","","",233,null],[11,"translation","","",233,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"rotation","","",233,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"scaling","","",233,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"powf","","",233,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"rotation_between","","",233,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"option"}}],[11,"scaled_rotation_between","","",233,{"inputs":[{"name":"vector2"},{"name":"vector2"},{"name":"n"}],"output":{"name":"option"}}],[11,"to_superset","","",233,{"inputs":[{"name":"self"}],"output":{"name":"unitcomplex"}}],[11,"is_in_subset","","",233,{"inputs":[{"name":"unitcomplex"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",233,{"inputs":[{"name":"unitcomplex"}],"output":{"name":"self"}}],[11,"to_superset","","",233,{"inputs":[{"name":"self"}],"output":{"name":"rotation2"}}],[11,"is_in_subset","","",233,{"inputs":[{"name":"rotation2"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",233,{"inputs":[{"name":"rotation2"}],"output":{"name":"self"}}],[11,"to_superset","","",233,{"inputs":[{"name":"self"}],"output":{"generics":["u2"],"name":"isometry"}}],[11,"is_in_subset","","",233,{"inputs":[{"name":"isometry"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",233,{"inputs":[{"name":"isometry"}],"output":{"name":"self"}}],[11,"to_superset","","",233,{"inputs":[{"name":"self"}],"output":{"generics":["u2"],"name":"similarity"}}],[11,"is_in_subset","","",233,{"inputs":[{"name":"similarity"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",233,{"inputs":[{"name":"similarity"}],"output":{"name":"self"}}],[11,"to_superset","","",233,{"inputs":[{"name":"self"}],"output":{"generics":["u2"],"name":"transform"}}],[11,"is_in_subset","","",233,{"inputs":[{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",233,{"inputs":[{"name":"transform"}],"output":{"name":"self"}}],[11,"to_superset","","",233,{"inputs":[{"name":"self"}],"output":{"name":"matrix3"}}],[11,"is_in_subset","","",233,{"inputs":[{"name":"matrix3"}],"output":{"name":"bool"}}],[11,"from_superset_unchecked","","",233,{"inputs":[{"name":"matrix3"}],"output":{"name":"self"}}],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"div","","",232,null],[11,"div","","",232,null],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"div","","",232,null],[11,"div","","",232,null],[11,"has_normalizer","","Indicates whether a `Transform` with the category `Self` has a bottom-row different from `0 0 .. 1`.",222,{"inputs":[],"output":{"name":"bool"}}],[11,"mul","","",232,null],[11,"mul","","",232,null],[11,"div","","",232,null],[11,"div","","",232,null]],"paths":[[8,"Real"],[3,"Matrix"],[8,"Dim"],[8,"DimAdd"],[8,"DimNameAdd"],[8,"DimMul"],[8,"DimNameMul"],[8,"DimSub"],[8,"DimNameSub"],[8,"DimDiv"],[8,"DimNameDiv"],[8,"DimMin"],[8,"DimNameMin"],[8,"DimMax"],[8,"DimNameMax"],[8,"DimName"],[8,"NamedDim"],[3,"Dynamic"],[3,"U1"],[3,"U0"],[3,"U2"],[3,"U3"],[3,"U4"],[3,"U5"],[3,"U6"],[3,"U7"],[3,"U8"],[3,"U9"],[3,"U10"],[3,"U11"],[3,"U12"],[3,"U13"],[3,"U14"],[3,"U15"],[3,"U16"],[3,"U17"],[3,"U18"],[3,"U19"],[3,"U20"],[3,"U21"],[3,"U22"],[3,"U23"],[3,"U24"],[3,"U25"],[3,"U26"],[3,"U27"],[3,"U28"],[3,"U29"],[3,"U30"],[3,"U31"],[3,"U32"],[3,"U33"],[3,"U34"],[3,"U35"],[3,"U36"],[3,"U37"],[3,"U38"],[3,"U39"],[3,"U40"],[3,"U41"],[3,"U42"],[3,"U43"],[3,"U44"],[3,"U45"],[3,"U46"],[3,"U47"],[3,"U48"],[3,"U49"],[3,"U50"],[3,"U51"],[3,"U52"],[3,"U53"],[3,"U54"],[3,"U55"],[3,"U56"],[3,"U57"],[3,"U58"],[3,"U59"],[3,"U60"],[3,"U61"],[3,"U62"],[3,"U63"],[3,"U64"],[3,"U65"],[3,"U66"],[3,"U67"],[3,"U68"],[3,"U69"],[3,"U70"],[3,"U71"],[3,"U72"],[3,"U73"],[3,"U74"],[3,"U75"],[3,"U76"],[3,"U77"],[3,"U78"],[3,"U79"],[3,"U80"],[3,"U81"],[3,"U82"],[3,"U83"],[3,"U84"],[3,"U85"],[3,"U86"],[3,"U87"],[3,"U88"],[3,"U89"],[3,"U90"],[3,"U91"],[3,"U92"],[3,"U93"],[3,"U94"],[3,"U95"],[3,"U96"],[3,"U97"],[3,"U98"],[3,"U99"],[3,"U100"],[3,"U101"],[3,"U102"],[3,"U103"],[3,"U104"],[3,"U105"],[3,"U106"],[3,"U107"],[3,"U108"],[3,"U109"],[3,"U110"],[3,"U111"],[3,"U112"],[3,"U113"],[3,"U114"],[3,"U115"],[3,"U116"],[3,"U117"],[3,"U118"],[3,"U119"],[3,"U120"],[3,"U121"],[3,"U122"],[3,"U123"],[3,"U124"],[3,"U125"],[3,"U126"],[3,"U127"],[8,"DimEq"],[8,"SameNumberOfRows"],[8,"SameNumberOfColumns"],[8,"SameDimension"],[8,"Allocator"],[8,"Reallocator"],[8,"Storage"],[8,"StorageMut"],[3,"X"],[3,"XY"],[3,"XYZ"],[3,"XYZW"],[3,"XYZWA"],[3,"XYZWAB"],[3,"IJKW"],[3,"M2x2"],[3,"M2x3"],[3,"M2x4"],[3,"M2x5"],[3,"M2x6"],[3,"M3x2"],[3,"M3x3"],[3,"M3x4"],[3,"M3x5"],[3,"M3x6"],[3,"M4x2"],[3,"M4x3"],[3,"M4x4"],[3,"M4x5"],[3,"M4x6"],[3,"M5x2"],[3,"M5x3"],[3,"M5x4"],[3,"M5x5"],[3,"M5x6"],[3,"M6x2"],[3,"M6x3"],[3,"M6x4"],[3,"M6x5"],[3,"M6x6"],[3,"MatrixIter"],[3,"MatrixIterMut"],[3,"DefaultAllocator"],[3,"Unit"],[3,"SliceStorage"],[3,"SliceStorageMut"],[3,"MatrixArray"],[3,"MatrixVec"],[8,"Scalar"],[8,"SliceRange"],[3,"Bidiagonal"],[3,"SVD"],[3,"SymmetricEigen"],[6,"SquareMatrix"],[3,"PermutationSequence"],[3,"QR"],[3,"Hessenberg"],[3,"SymmetricTridiagonal"],[3,"Cholesky"],[3,"LU"],[3,"FullPivLU"],[3,"RealSchur"],[3,"Point"],[3,"Quaternion"],[3,"Translation"],[3,"Isometry"],[3,"Similarity"],[3,"Rotation"],[6,"MatrixMN"],[4,"TGeneral"],[4,"TProjective"],[4,"TAffine"],[3,"Transform"],[3,"Reflection"],[3,"Orthographic3"],[3,"Perspective3"],[8,"TCategory"],[8,"TCategoryMul"],[3,"Id"],[6,"MatrixN"],[6,"Vector"],[6,"VectorN"],[6,"Matrix3"],[6,"Matrix4"],[6,"Rotation3"],[6,"Rotation2"],[6,"UnitQuaternion"],[6,"UnitComplex"]]};
searchIndex["native_tls"] = {"doc":"An abstraction over platform-specific TLS implementations.","items":[[3,"Error","native_tls","An error returned from the TLS implementation.",null,null],[3,"Pkcs12","","A PKCS #12 archive.",null,null],[3,"Certificate","","An X509 certificate.",null,null],[3,"MidHandshakeTlsStream","","A TLS stream which has been interrupted midway through the handshake process.",null,null],[3,"TlsConnectorBuilder","","A builder for `TlsConnector`s.",null,null],[3,"TlsConnector","","A builder for client-side TLS connections.",null,null],[3,"TlsAcceptorBuilder","","A builder for `TlsAcceptor`s.",null,null],[3,"TlsAcceptor","","A builder for server-side TLS connections.",null,null],[3,"TlsStream","","A stream managing a TLS session.",null,null],[4,"HandshakeError","","An error returned from `ClientBuilder::handshake`.",null,null],[13,"Failure","","A fatal error.",0,null],[13,"Interrupted","","A stream interrupted midway through the handshake process due to a `WouldBlock` error.",0,null],[4,"Protocol","","SSL/TLS protocol versions.",null,null],[13,"Sslv3","","The SSL 3.0 protocol.",1,null],[13,"Tlsv10","","The TLS 1.0 protocol.",1,null],[13,"Tlsv11","","The TLS 1.1 protocol.",1,null],[13,"Tlsv12","","The TLS 1.2 protocol.",1,null],[0,"backend","","TLS backend-specific functionality.",null,null],[0,"openssl","native_tls::backend","OpenSSL-specific functionality.",null,null],[8,"TlsConnectorBuilderExt","native_tls::backend::openssl","OpenSSL-specific extensions to `TlsConnectorBuilder`.",null,null],[10,"from_openssl","","Initialize `TlsAcceptorBuilderExt` from an `SslAcceptorBuilder`.",2,{"inputs":[{"name":"sslconnectorbuilder"}],"output":{"name":"self"}}],[10,"builder","","Returns a shared reference to the inner `SslConnectorBuilder`.",2,{"inputs":[{"name":"self"}],"output":{"name":"sslconnectorbuilder"}}],[10,"builder_mut","","Returns a mutable reference to the inner `SslConnectorBuilder`.",2,{"inputs":[{"name":"self"}],"output":{"name":"sslconnectorbuilder"}}],[8,"TlsAcceptorBuilderExt","","OpenSSL-specific extensions to `TlsAcceptorBuilder`.",null,null],[10,"from_openssl","","Initialize `TlsAcceptorBuilderExt` from an `SslAcceptorBuilder`.",3,{"inputs":[{"name":"sslacceptorbuilder"}],"output":{"name":"self"}}],[10,"builder","","Returns a shared reference to the inner `SslAcceptorBuilder`.",3,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptorbuilder"}}],[10,"builder_mut","","Returns a mutable reference to the inner `SslAcceptorBuilder`.",3,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptorbuilder"}}],[8,"TlsStreamExt","","OpenSSL-specific extensions to `TlsStream`.",null,null],[10,"raw_stream","","Returns a shared reference to the OpenSSL `SslStream`.",4,{"inputs":[{"name":"self"}],"output":{"name":"sslstream"}}],[10,"raw_stream_mut","","Returns a mutable reference to the OpenSSL `SslStream`.",4,{"inputs":[{"name":"self"}],"output":{"name":"sslstream"}}],[8,"ErrorExt","","OpenSSL-specific extensions to `Error`",null,null],[10,"openssl_error","","Extract the underlying OpenSSL error for inspection.",5,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"from_openssl","native_tls","",6,{"inputs":[{"name":"sslconnectorbuilder"}],"output":{"name":"tlsconnectorbuilder"}}],[11,"builder","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sslconnectorbuilder"}}],[11,"builder_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sslconnectorbuilder"}}],[11,"from_openssl","","",7,{"inputs":[{"name":"sslacceptorbuilder"}],"output":{"name":"tlsacceptorbuilder"}}],[11,"builder","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptorbuilder"}}],[11,"builder_mut","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptorbuilder"}}],[11,"raw_stream","","",8,{"inputs":[{"name":"self"}],"output":{"name":"sslstream"}}],[11,"raw_stream_mut","","",8,{"inputs":[{"name":"self"}],"output":{"name":"sslstream"}}],[11,"openssl_error","","",9,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[6,"Result","","A typedef of the result-type returned by many methods.",null,null],[11,"description","","",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",9,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"from_der","","Parses a DER-formatted PKCS #12 archive, using the specified password to decrypt the key.",10,null],[11,"from_der","","Parses a DER-formatted X509 certificate.",11,null],[11,"from_pem","","Parses a PEM-formatted X509 certificate. If the PEM file contains more than one certificate the last one is used and the others are ignored.",11,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a shared reference to the inner stream.",12,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",12,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"handshake","","Restarts the handshake process.",12,{"inputs":[{"name":"self"}],"output":{"generics":["tlsstream","handshakeerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"handshakeerror"}],"output":{"name":"handshakeerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"protocol"}}],[11,"identity","","Sets the identity to be used for client certificate authentication.",6,{"inputs":[{"name":"self"},{"name":"pkcs12"}],"output":{"generics":["tlsconnectorbuilder"],"name":"result"}}],[11,"supported_protocols","","Sets the protocols which the connector will support.",6,null],[11,"add_root_certificate","","Adds a certificate to the set of roots that the connector will trust.",6,{"inputs":[{"name":"self"},{"name":"certificate"}],"output":{"generics":["tlsconnectorbuilder"],"name":"result"}}],[11,"build","","Consumes the builder, returning a `TlsConnector`.",6,{"inputs":[{"name":"self"}],"output":{"generics":["tlsconnector"],"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"tlsconnector"}}],[11,"builder","","Returns a new builder for a `TlsConnector`.",13,{"inputs":[],"output":{"generics":["tlsconnectorbuilder"],"name":"result"}}],[11,"connect","","Initiates a TLS handshake.",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"s"}],"output":{"generics":["tlsstream","handshakeerror"],"name":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Like `connect`, but does not validate the server's domain name against its certificate.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["tlsstream","handshakeerror"],"name":"result"}}],[11,"supported_protocols","","Sets the protocols which the acceptor will support.",7,null],[11,"build","","Consumes the builder, returning a `TlsAcceptor`.",7,{"inputs":[{"name":"self"}],"output":{"generics":["tlsacceptor"],"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"tlsacceptor"}}],[11,"builder","","Returns a new builder for a `TlsAcceptor`.",14,{"inputs":[{"name":"pkcs12"}],"output":{"generics":["tlsacceptorbuilder"],"name":"result"}}],[11,"accept","","Initiates a TLS handshake.",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["tlsstream","handshakeerror"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a shared reference to the inner stream.",8,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",8,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"buffered_read_size","","Returns the number of bytes that can be read without resulting in any network calls.",8,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[11,"shutdown","","Shuts down the TLS session.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",8,null],[11,"write","","",8,null],[11,"flush","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[4,"HandshakeError"],[4,"Protocol"],[8,"TlsConnectorBuilderExt"],[8,"TlsAcceptorBuilderExt"],[8,"TlsStreamExt"],[8,"ErrorExt"],[3,"TlsConnectorBuilder"],[3,"TlsAcceptorBuilder"],[3,"TlsStream"],[3,"Error"],[3,"Pkcs12"],[3,"Certificate"],[3,"MidHandshakeTlsStream"],[3,"TlsConnector"],[3,"TlsAcceptor"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"inputs":[],"output":{"generics":["tcpbuilder"],"name":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"inputs":[],"output":{"generics":["tcpbuilder"],"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["tcpbuilder"],"name":"result"}}],[11,"listen","","Mark a socket as ready to accept incoming connection requests using accept()",0,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"connect","","Initiate a connection on this socket to the specified address.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,{"inputs":[{"name":"self"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,{"inputs":[{"name":"self"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"inputs":[],"output":{"generics":["udpbuilder"],"name":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"inputs":[],"output":{"generics":["udpbuilder"],"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["udpsocket"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"from_raw_fd","","",0,{"inputs":[{"name":"c_int"}],"output":{"name":"tcpbuilder"}}],[11,"as_raw_fd","","",0,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_raw_fd","","",1,{"inputs":[{"name":"c_int"}],"output":{"name":"udpbuilder"}}],[11,"as_raw_fd","","",1,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"reuse_port","net2","",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_port","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"reuse_port","","",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_reuse_port","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"option"}],"output":{"name":"result"}}],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so the amount of milliseconds between them.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"option"}],"output":{"name":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"option"}],"output":{"name":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection to the host specified by `addr`.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"option"}],"output":{"name":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"option"}],"output":{"name":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and `recv` syscalls to be used to send data and also applies filters to only receive data from the specified address.",6,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,null],[10,"recv","","Receives data on the socket from the remote address to which it is connected.",6,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["nix"] = {"doc":"Rust friendly bindings to the various *nix system functions.","items":[[6,"c_int","nix","",null,null],[4,"c_void","","",null,null],[4,"Errno","","",null,null],[13,"UnknownErrno","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ECHRNG","","",0,null],[13,"EL2NSYNC","","",0,null],[13,"EL3HLT","","",0,null],[13,"EL3RST","","",0,null],[13,"ELNRNG","","",0,null],[13,"EUNATCH","","",0,null],[13,"ENOCSI","","",0,null],[13,"EL2HLT","","",0,null],[13,"EBADE","","",0,null],[13,"EBADR","","",0,null],[13,"EXFULL","","",0,null],[13,"ENOANO","","",0,null],[13,"EBADRQC","","",0,null],[13,"EBADSLT","","",0,null],[13,"EBFONT","","",0,null],[13,"ENOSTR","","",0,null],[13,"ENODATA","","",0,null],[13,"ETIME","","",0,null],[13,"ENOSR","","",0,null],[13,"ENONET","","",0,null],[13,"ENOPKG","","",0,null],[13,"EREMOTE","","",0,null],[13,"ENOLINK","","",0,null],[13,"EADV","","",0,null],[13,"ESRMNT","","",0,null],[13,"ECOMM","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EDOTDOT","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"ENOTUNIQ","","",0,null],[13,"EBADFD","","",0,null],[13,"EREMCHG","","",0,null],[13,"ELIBACC","","",0,null],[13,"ELIBBAD","","",0,null],[13,"ELIBSCN","","",0,null],[13,"ELIBMAX","","",0,null],[13,"ELIBEXEC","","",0,null],[13,"EILSEQ","","",0,null],[13,"ERESTART","","",0,null],[13,"ESTRPIPE","","",0,null],[13,"EUSERS","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"ESOCKTNOSUPPORT","","",0,null],[13,"EOPNOTSUPP","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ESHUTDOWN","","",0,null],[13,"ETOOMANYREFS","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTDOWN","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EUCLEAN","","",0,null],[13,"ENOTNAM","","",0,null],[13,"ENAVAIL","","",0,null],[13,"EISNAM","","",0,null],[13,"EREMOTEIO","","",0,null],[13,"EDQUOT","","",0,null],[13,"ENOMEDIUM","","",0,null],[13,"EMEDIUMTYPE","","",0,null],[13,"ECANCELED","","",0,null],[13,"ENOKEY","","",0,null],[13,"EKEYEXPIRED","","",0,null],[13,"EKEYREVOKED","","",0,null],[13,"EKEYREJECTED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[13,"ERFKILL","","",0,null],[13,"EHWPOISON","","",0,null],[4,"Error","","Nix Error Type",null,null],[13,"Sys","","",1,null],[13,"InvalidPath","","",1,null],[0,"libc","","",null,null],[0,"errno","","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ECHRNG","","",0,null],[13,"EL2NSYNC","","",0,null],[13,"EL3HLT","","",0,null],[13,"EL3RST","","",0,null],[13,"ELNRNG","","",0,null],[13,"EUNATCH","","",0,null],[13,"ENOCSI","","",0,null],[13,"EL2HLT","","",0,null],[13,"EBADE","","",0,null],[13,"EBADR","","",0,null],[13,"EXFULL","","",0,null],[13,"ENOANO","","",0,null],[13,"EBADRQC","","",0,null],[13,"EBADSLT","","",0,null],[13,"EBFONT","","",0,null],[13,"ENOSTR","","",0,null],[13,"ENODATA","","",0,null],[13,"ETIME","","",0,null],[13,"ENOSR","","",0,null],[13,"ENONET","","",0,null],[13,"ENOPKG","","",0,null],[13,"EREMOTE","","",0,null],[13,"ENOLINK","","",0,null],[13,"EADV","","",0,null],[13,"ESRMNT","","",0,null],[13,"ECOMM","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EDOTDOT","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"ENOTUNIQ","","",0,null],[13,"EBADFD","","",0,null],[13,"EREMCHG","","",0,null],[13,"ELIBACC","","",0,null],[13,"ELIBBAD","","",0,null],[13,"ELIBSCN","","",0,null],[13,"ELIBMAX","","",0,null],[13,"ELIBEXEC","","",0,null],[13,"EILSEQ","","",0,null],[13,"ERESTART","","",0,null],[13,"ESTRPIPE","","",0,null],[13,"EUSERS","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"ESOCKTNOSUPPORT","","",0,null],[13,"EOPNOTSUPP","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ESHUTDOWN","","",0,null],[13,"ETOOMANYREFS","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTDOWN","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EUCLEAN","","",0,null],[13,"ENOTNAM","","",0,null],[13,"ENAVAIL","","",0,null],[13,"EISNAM","","",0,null],[13,"EREMOTEIO","","",0,null],[13,"EDQUOT","","",0,null],[13,"ENOMEDIUM","","",0,null],[13,"EMEDIUMTYPE","","",0,null],[13,"ECANCELED","","",0,null],[13,"ENOKEY","","",0,null],[13,"EKEYEXPIRED","","",0,null],[13,"EKEYREVOKED","","",0,null],[13,"EKEYREJECTED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[13,"ERFKILL","","",0,null],[13,"EHWPOISON","","",0,null],[5,"from_i32","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"errno"}}],[5,"errno","","Returns the platform-specific value of errno",null,{"inputs":[],"output":{"name":"i32"}}],[11,"fmt","nix","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"errno"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"errno"}],"output":{"name":"bool"}}],[17,"EWOULDBLOCK","nix::errno","",null,null],[17,"EDEADLOCK","","",null,null],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and more detailed information about the error can be found in `errno`",null,null],[10,"sentinel","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"last","nix","",0,{"inputs":[],"output":{"name":"self"}}],[11,"desc","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_i32","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"errno"}}],[11,"clear","","",0,null],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This should not be used when `-1` is not the errno sentinel value.",0,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"features","","",null,null],[5,"socket_atomic_cloexec","nix::features","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"fcntl","nix","",null,null],[3,"SpliceFFlags","nix::fcntl","",null,null],[3,"OFlag","","",null,null],[3,"FdFlag","","",null,null],[3,"SealFlag","","",null,null],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",3,null],[13,"F_DUPFD_CLOEXEC","","",3,null],[13,"F_GETFD","","",3,null],[13,"F_SETFD","","",3,null],[13,"F_GETFL","","",3,null],[13,"F_SETFL","","",3,null],[13,"F_SETLK","","",3,null],[13,"F_SETLKW","","",3,null],[13,"F_GETLK","","",3,null],[13,"F_OFD_SETLK","","",3,null],[13,"F_OFD_SETLKW","","",3,null],[13,"F_OFD_GETLK","","",3,null],[13,"F_ADD_SEALS","","",3,null],[13,"F_GET_SEALS","","",3,null],[13,"F_GETPIPE_SZ","","",3,null],[13,"F_SETPIPE_SZ","","",3,null],[4,"FlockArg","","",null,null],[13,"LockShared","","",4,null],[13,"LockExclusive","","",4,null],[13,"Unlock","","",4,null],[13,"LockSharedNonblock","","",4,null],[13,"LockExclusiveNonblock","","",4,null],[13,"UnlockNonblock","","",4,null],[5,"open","","",null,{"inputs":[{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"fcntl","","",null,{"inputs":[{"name":"rawfd"},{"name":"fcntlarg"}],"output":{"generics":["c_int"],"name":"result"}}],[5,"flock","","",null,{"inputs":[{"name":"rawfd"},{"name":"flockarg"}],"output":{"name":"result"}}],[5,"splice","","",null,{"inputs":[{"name":"rawfd"},{"generics":["loff_t"],"name":"option"},{"name":"rawfd"},{"generics":["loff_t"],"name":"option"},{"name":"usize"},{"name":"splicefflags"}],"output":{"generics":["usize"],"name":"result"}}],[5,"tee","","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"usize"},{"name":"splicefflags"}],"output":{"generics":["usize"],"name":"result"}}],[5,"vmsplice","","",null,null],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"splicefflags"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"ordering"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",5,{"inputs":[],"output":{"name":"splicefflags"}}],[11,"all","","Returns the set containing all flags.",5,{"inputs":[],"output":{"name":"splicefflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",5,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",5,{"inputs":[{"name":"c_uint"}],"output":{"generics":["splicefflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",5,{"inputs":[{"name":"c_uint"}],"output":{"name":"splicefflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"bitor_assign","","Adds the set of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",5,{"inputs":[{"name":"self"}],"output":{"name":"splicefflags"}}],[11,"extend","","",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",5,{"inputs":[{"name":"t"}],"output":{"name":"splicefflags"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"oflag"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"ordering"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"oflag"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"oflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"c_int"}],"output":{"generics":["oflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",6,{"inputs":[{"name":"c_int"}],"output":{"name":"oflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"bitor_assign","","Adds the set of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",6,{"inputs":[{"name":"self"}],"output":{"name":"oflag"}}],[11,"extend","","",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",6,{"inputs":[{"name":"t"}],"output":{"name":"oflag"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"ordering"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",7,{"inputs":[],"output":{"name":"fdflag"}}],[11,"all","","Returns the set containing all flags.",7,{"inputs":[],"output":{"name":"fdflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",7,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",7,{"inputs":[{"name":"c_int"}],"output":{"generics":["fdflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",7,{"inputs":[{"name":"c_int"}],"output":{"name":"fdflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitor_assign","","Adds the set of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",7,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"extend","","",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",7,{"inputs":[{"name":"t"}],"output":{"name":"fdflag"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"sealflag"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",8,{"inputs":[],"output":{"name":"sealflag"}}],[11,"all","","Returns the set containing all flags.",8,{"inputs":[],"output":{"name":"sealflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",8,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",8,{"inputs":[{"name":"c_int"}],"output":{"generics":["sealflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",8,{"inputs":[{"name":"c_int"}],"output":{"name":"sealflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"bitor_assign","","Adds the set of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",8,{"inputs":[{"name":"self"}],"output":{"name":"sealflag"}}],[11,"extend","","",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",8,{"inputs":[{"name":"t"}],"output":{"name":"sealflag"}}],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"O_NDELAY","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[3,"MntFlags","","",null,null],[5,"mount","","",null,{"inputs":[{"name":"option"},{"name":"p2"},{"name":"option"},{"name":"msflags"},{"name":"option"}],"output":{"name":"result"}}],[5,"umount","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"umount2","","",null,{"inputs":[{"name":"p"},{"name":"mntflags"}],"output":{"name":"result"}}],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_VERBOSE","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_NOSEC","","",null,null],[17,"MS_BORN","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"ordering"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",9,{"inputs":[],"output":{"name":"msflags"}}],[11,"all","","Returns the set containing all flags.",9,{"inputs":[],"output":{"name":"msflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",9,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",9,{"inputs":[{"name":"c_ulong"}],"output":{"generics":["msflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",9,{"inputs":[{"name":"c_ulong"}],"output":{"name":"msflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitor_assign","","Adds the set of flags.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",9,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",9,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"extend","","",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",9,{"inputs":[{"name":"t"}],"output":{"name":"msflags"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"mntflags"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"ordering"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",10,{"inputs":[],"output":{"name":"mntflags"}}],[11,"all","","Returns the set containing all flags.",10,{"inputs":[],"output":{"name":"mntflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",10,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",10,{"inputs":[{"name":"c_int"}],"output":{"generics":["mntflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",10,{"inputs":[{"name":"c_int"}],"output":{"name":"mntflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"bitor_assign","","Adds the set of flags.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",10,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",10,{"inputs":[{"name":"self"}],"output":{"name":"mntflags"}}],[11,"extend","","",10,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",10,{"inputs":[{"name":"t"}],"output":{"name":"mntflags"}}],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[3,"FdFlag","","",null,null],[3,"MqAttr","","",null,null],[5,"mq_open","","",null,{"inputs":[{"name":"cstring"},{"name":"mq_oflag"},{"name":"mode"},{"generics":["mqattr"],"name":"option"}],"output":{"generics":["mqd_t"],"name":"result"}}],[5,"mq_unlink","","",null,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[5,"mq_close","","",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,{"inputs":[{"name":"mqd_t"}],"output":{"generics":["mqattr"],"name":"result"}}],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored Returns the old attributes It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use",null,{"inputs":[{"name":"mqd_t"},{"name":"mqattr"}],"output":{"generics":["mqattr"],"name":"result"}}],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",null,{"inputs":[{"name":"mqd_t"}],"output":{"generics":["mqattr"],"name":"result"}}],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",null,{"inputs":[{"name":"mqd_t"}],"output":{"generics":["mqattr"],"name":"result"}}],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"FD_CLOEXEC","","",null,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"mq_oflag"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",11,{"inputs":[],"output":{"name":"mq_oflag"}}],[11,"all","","Returns the set containing all flags.",11,{"inputs":[],"output":{"name":"mq_oflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",11,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",11,{"inputs":[{"name":"c_int"}],"output":{"generics":["mq_oflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",11,{"inputs":[{"name":"c_int"}],"output":{"name":"mq_oflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"bitor_assign","","Adds the set of flags.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",11,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",11,{"inputs":[{"name":"self"}],"output":{"name":"mq_oflag"}}],[11,"extend","","",11,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",11,{"inputs":[{"name":"t"}],"output":{"name":"mq_oflag"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"ordering"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",12,{"inputs":[],"output":{"name":"fdflag"}}],[11,"all","","Returns the set containing all flags.",12,{"inputs":[],"output":{"name":"fdflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",12,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",12,{"inputs":[{"name":"c_int"}],"output":{"generics":["fdflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",12,{"inputs":[{"name":"c_int"}],"output":{"name":"fdflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitor_assign","","Adds the set of flags.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",12,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",12,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"extend","","",12,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",12,{"inputs":[{"name":"t"}],"output":{"name":"fdflag"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"mqattr"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"mqattr"}],"output":{"name":"bool"}}],[11,"new","","",13,{"inputs":[{"name":"c_long"},{"name":"c_long"},{"name":"c_long"},{"name":"c_long"}],"output":{"name":"mqattr"}}],[11,"flags","","",13,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[0,"poll","nix","",null,null],[3,"PollFd","nix::poll","",null,null],[3,"EventFlags","","",null,null],[5,"poll","","",null,null],[5,"ppoll","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"new","","",14,{"inputs":[{"name":"c_int"},{"name":"eventflags"},{"name":"eventflags"}],"output":{"name":"pollfd"}}],[11,"revents","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["eventflags"],"name":"option"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"eventflags"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"ordering"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",15,{"inputs":[],"output":{"name":"eventflags"}}],[11,"all","","Returns the set containing all flags.",15,{"inputs":[],"output":{"name":"eventflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",15,{"inputs":[{"name":"self"}],"output":{"name":"c_short"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",15,{"inputs":[{"name":"c_short"}],"output":{"generics":["eventflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",15,{"inputs":[{"name":"c_short"}],"output":{"name":"eventflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"bitor_assign","","Adds the set of flags.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",15,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",15,{"inputs":[{"name":"self"}],"output":{"name":"eventflags"}}],[11,"extend","","",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",15,{"inputs":[{"name":"t"}],"output":{"name":"eventflags"}}],[0,"net","nix","",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[5,"if_nametoindex","nix::net::if_","Resolve an interface into a interface number.",null,{"inputs":[{"name":"p"}],"output":{"generics":["c_uint"],"name":"result"}}],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[3,"CpuSet","","",null,null],[5,"sched_setaffinity","","",null,{"inputs":[{"name":"isize"},{"name":"cpuset"}],"output":{"name":"result"}}],[5,"clone","","",null,null],[5,"unshare","","",null,{"inputs":[{"name":"cloneflags"}],"output":{"name":"result"}}],[5,"setns","","",null,{"inputs":[{"name":"rawfd"},{"name":"cloneflags"}],"output":{"name":"result"}}],[6,"CloneCb","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"cloneflags"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"cmp","","",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"ordering"}}],[11,"hash","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"cloneflags"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"cloneflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"c_int"}],"output":{"generics":["cloneflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",16,{"inputs":[{"name":"c_int"}],"output":{"name":"cloneflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"bitor_assign","","Adds the set of flags.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",16,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",16,{"inputs":[{"name":"self"}],"output":{"name":"cloneflags"}}],[11,"extend","","",16,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"cloneflags"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cpuset"}}],[11,"new","","",17,{"inputs":[],"output":{"name":"cpuset"}}],[11,"is_set","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"unset","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[0,"sys","nix","",null,null],[0,"aio","nix::sys","",null,null],[3,"AioCb","nix::sys::aio","The basic structure used by all aio functions.  Each `aiocb` represents one I/O request.",null,null],[4,"AioFsyncMode","","Mode for `AioCb::fsync`.  Controls whether only data or both data and metadata are synced.",null,null],[13,"O_SYNC","","do it like `fsync`",18,null],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",18,null],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions.",null,null],[13,"LIO_NOP","","",19,null],[13,"LIO_WRITE","","",19,null],[13,"LIO_READ","","",19,null],[4,"LioMode","","Mode for `lio_listio`.",null,null],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested operations have been completed",20,null],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",20,null],[4,"AioCancelStat","","Return values for `AioCb::cancel and aio_cancel_all`",null,null],[13,"AioCanceled","","All outstanding requests were canceled",21,null],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be checked with `AioCb::error`",21,null],[13,"AioAllDone","","All of the requests have already finished",21,null],[5,"aio_cancel_all","","Cancels outstanding AIO requests.  All requests for `fd` will be cancelled.",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["aiocancelstat"],"name":"result"}}],[5,"aio_suspend","","Suspends the calling process until at least one of the specified `AioCb`s has completed, a signal is delivered, or the timeout has passed.  If `timeout` is `None`, `aio_suspend` will block indefinitely.",null,null],[5,"lio_listio","","Submits multiple asynchronous I/O requests with a single system call.  The order in which the requests are carried out is not specified.",null,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"aiofsyncmode"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"aiofsyncmode"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"lioopcode"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"lioopcode"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"liomode"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"liomode"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"aiocancelstat"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"aiocancelstat"}],"output":{"name":"bool"}}],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",22,{"inputs":[{"name":"rawfd"},{"name":"c_int"},{"name":"sigevnotify"}],"output":{"name":"aiocb"}}],[11,"from_mut_slice","","Constructs a new `AioCb`.",22,null],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather than mutable slices.",22,null],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",22,{"inputs":[{"name":"self"},{"name":"sigevnotify"}],"output":null}],[11,"cancel","","Cancels an outstanding AIO request.",22,{"inputs":[{"name":"self"}],"output":{"generics":["aiocancelstat"],"name":"result"}}],[11,"error","","Retrieve error status of an asynchronous operation.  If the request has not yet completed, returns `EINPROGRESS`.  Otherwise, returns `Ok` or any other error.",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fsync","","An asynchronous version of `fsync`.",22,{"inputs":[{"name":"self"},{"name":"aiofsyncmode"}],"output":{"name":"result"}}],[11,"read","","Asynchronously reads from a file descriptor into a buffer",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"aio_return","","Retrieve return status of an asynchronous operation.  Should only be called once for each `AioCb`, after `AioCb::error` indicates that it has completed.  The result is the same as for `read`, `write`, of `fsync`.",22,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"result"}}],[11,"write","","Asynchronously writes from a buffer to a file descriptor",22,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","If the `AioCb` has no remaining state in the kernel, just drop it. Otherwise, collect its error and return values, so as not to leak resources.",22,{"inputs":[{"name":"self"}],"output":null}],[0,"epoll","nix::sys","",null,null],[3,"EpollFlags","nix::sys::epoll","",null,null],[3,"EpollCreateFlags","","",null,null],[3,"EpollEvent","","",null,null],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",23,null],[13,"EpollCtlDel","","",23,null],[13,"EpollCtlMod","","",23,null],[5,"epoll_create","","",null,{"inputs":[],"output":{"generics":["rawfd"],"name":"result"}}],[5,"epoll_create1","","",null,{"inputs":[{"name":"epollcreateflags"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"epoll_ctl","","",null,{"inputs":[{"name":"rawfd"},{"name":"epollop"},{"name":"rawfd"},{"name":"t"}],"output":{"name":"result"}}],[5,"epoll_wait","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"epollflags"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"cmp","","",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"ordering"}}],[11,"hash","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",24,{"inputs":[],"output":{"name":"epollflags"}}],[11,"all","","Returns the set containing all flags.",24,{"inputs":[],"output":{"name":"epollflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",24,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",24,{"inputs":[{"name":"c_int"}],"output":{"generics":["epollflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",24,{"inputs":[{"name":"c_int"}],"output":{"name":"epollflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"bitor_assign","","Adds the set of flags.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",24,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",24,{"inputs":[{"name":"self"}],"output":{"name":"epollflags"}}],[11,"extend","","",24,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",24,{"inputs":[{"name":"t"}],"output":{"name":"epollflags"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"epollop"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"epollop"}],"output":{"name":"bool"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"epollcreateflags"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"cmp","","",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"ordering"}}],[11,"hash","","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",25,{"inputs":[],"output":{"name":"epollcreateflags"}}],[11,"all","","Returns the set containing all flags.",25,{"inputs":[],"output":{"name":"epollcreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",25,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",25,{"inputs":[{"name":"c_int"}],"output":{"generics":["epollcreateflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",25,{"inputs":[{"name":"c_int"}],"output":{"name":"epollcreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"bitor_assign","","Adds the set of flags.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",25,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",25,{"inputs":[{"name":"self"}],"output":{"name":"epollcreateflags"}}],[11,"extend","","",25,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",25,{"inputs":[{"name":"t"}],"output":{"name":"epollcreateflags"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"epollevent"}}],[11,"new","","",26,{"inputs":[{"name":"epollflags"},{"name":"u64"}],"output":{"name":"self"}}],[11,"empty","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"events","","",26,{"inputs":[{"name":"self"}],"output":{"name":"epollflags"}}],[11,"data","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[0,"memfd","nix::sys","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[5,"memfd_create","","",null,{"inputs":[{"name":"cstr"},{"name":"memfdcreateflag"}],"output":{"generics":["rawfd"],"name":"result"}}],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"memfdcreateflag"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"cmp","","",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"ordering"}}],[11,"hash","","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"memfdcreateflag"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"memfdcreateflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"c_uint"}],"output":{"generics":["memfdcreateflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",27,{"inputs":[{"name":"c_uint"}],"output":{"name":"memfdcreateflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"bitor_assign","","Adds the set of flags.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",27,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"self"}],"output":{"name":"memfdcreateflag"}}],[11,"extend","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"memfdcreateflag"}}],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls",null,null],[5,"ioc_dir","nix::sys::ioctl","Extracts the \"direction\" (read/write/none) from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[5,"ioc_type","","Extracts the type from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"ioc_nr","","Extracts the ioctl number from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"ioc_size","","Extracts the size from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[17,"NRBITS","","",null,null],[17,"TYPEBITS","","",null,null],[17,"NONE","","",null,null],[17,"READ","","",null,null],[17,"WRITE","","",null,null],[17,"SIZEBITS","","",null,null],[17,"DIRBITS","","",null,null],[17,"NRSHIFT","","",null,null],[17,"TYPESHIFT","","",null,null],[17,"SIZESHIFT","","",null,null],[17,"DIRSHIFT","","",null,null],[17,"NRMASK","","",null,null],[17,"TYPEMASK","","",null,null],[17,"SIZEMASK","","",null,null],[17,"DIRMASK","","",null,null],[17,"IN","","",null,null],[17,"OUT","","",null,null],[17,"INOUT","","",null,null],[17,"SIZE_MASK","","",null,null],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"generics":["off_t"],"name":"option"},{"name":"usize"}],"output":{"generics":["usize"],"name":"result"}}],[0,"signal","nix::sys","",null,null],[3,"SignalIterator","nix::sys::signal","",null,null],[3,"SaFlags","","",null,null],[3,"SigSet","","",null,null],[3,"SigAction","","",null,null],[3,"SigEvent","","Used to request asynchronous notification of the completion of certain events, such as POSIX AIO and timers.",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",28,null],[13,"SIGINT","","",28,null],[13,"SIGQUIT","","",28,null],[13,"SIGILL","","",28,null],[13,"SIGTRAP","","",28,null],[13,"SIGABRT","","",28,null],[13,"SIGBUS","","",28,null],[13,"SIGFPE","","",28,null],[13,"SIGKILL","","",28,null],[13,"SIGUSR1","","",28,null],[13,"SIGSEGV","","",28,null],[13,"SIGUSR2","","",28,null],[13,"SIGPIPE","","",28,null],[13,"SIGALRM","","",28,null],[13,"SIGTERM","","",28,null],[13,"SIGSTKFLT","","",28,null],[13,"SIGCHLD","","",28,null],[13,"SIGCONT","","",28,null],[13,"SIGSTOP","","",28,null],[13,"SIGTSTP","","",28,null],[13,"SIGTTIN","","",28,null],[13,"SIGTTOU","","",28,null],[13,"SIGURG","","",28,null],[13,"SIGXCPU","","",28,null],[13,"SIGXFSZ","","",28,null],[13,"SIGVTALRM","","",28,null],[13,"SIGPROF","","",28,null],[13,"SIGWINCH","","",28,null],[13,"SIGIO","","",28,null],[13,"SIGPWR","","",28,null],[13,"SIGSYS","","",28,null],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",29,null],[13,"SIG_UNBLOCK","","",29,null],[13,"SIG_SETMASK","","",29,null],[4,"SigHandler","","",null,null],[13,"SigDfl","","",30,null],[13,"SigIgn","","",30,null],[13,"Handler","","",30,null],[13,"SigAction","","",30,null],[4,"SigevNotify","","Used to request asynchronous notification of certain events, for example, with POSIX AIO, POSIX message queues, and POSIX timers.",null,null],[13,"SigevNone","","No notification will be delivered",31,null],[13,"SigevSignal","","The signal given by `signal` will be delivered to the process.  The value in `si_value` will be present in the `si_value` field of the `siginfo_t` structure of the queued signal.",31,null],[12,"signal","nix::sys::signal::SigevNotify","",31,null],[12,"si_value","","",31,null],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID is given in `thread_id`.  The value stored in `si_value` will be present in the `si_value` of the `siginfo_t` structure of the queued signal.",31,null],[12,"signal","nix::sys::signal::SigevNotify","",31,null],[12,"thread_id","","",31,null],[12,"si_value","","",31,null],[5,"sigaction","nix::sys::signal","",null,{"inputs":[{"name":"signal"},{"name":"sigaction"}],"output":{"generics":["sigaction"],"name":"result"}}],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the calling thread.",null,{"inputs":[{"name":"sigmaskhow"},{"generics":["sigset"],"name":"option"},{"generics":["sigset"],"name":"option"}],"output":{"name":"result"}}],[5,"kill","","",null,{"inputs":[{"name":"pid_t"},{"name":"t"}],"output":{"name":"result"}}],[5,"raise","","",null,{"inputs":[{"name":"signal"}],"output":{"name":"result"}}],[6,"type_of_thread_id","","",null,null],[17,"NSIG","","",null,null],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_SIGINFO","","",null,null],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"name":"bool"}}],[11,"next","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["signal"],"name":"option"}}],[11,"iterator","","",28,{"inputs":[],"output":{"name":"signaliterator"}}],[11,"from_c_int","","",28,{"inputs":[{"name":"c_int"}],"output":{"generics":["signal"],"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"saflags"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"cmp","","",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"ordering"}}],[11,"hash","","",33,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",33,{"inputs":[],"output":{"name":"saflags"}}],[11,"all","","Returns the set containing all flags.",33,{"inputs":[],"output":{"name":"saflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",33,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",33,{"inputs":[{"name":"c_int"}],"output":{"generics":["saflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",33,{"inputs":[{"name":"c_int"}],"output":{"name":"saflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"bitor_assign","","Adds the set of flags.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",33,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",33,{"inputs":[{"name":"self"}],"output":{"name":"saflags"}}],[11,"extend","","",33,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",33,{"inputs":[{"name":"t"}],"output":{"name":"saflags"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"sigmaskhow"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"sigmaskhow"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[11,"all","","",34,{"inputs":[],"output":{"name":"sigset"}}],[11,"empty","","",34,{"inputs":[],"output":{"name":"sigset"}}],[11,"add","","",34,{"inputs":[{"name":"self"},{"name":"signal"}],"output":null}],[11,"clear","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"remove","","",34,{"inputs":[{"name":"self"},{"name":"signal"}],"output":null}],[11,"contains","","",34,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"name":"bool"}}],[11,"extend","","",34,{"inputs":[{"name":"self"},{"name":"sigset"}],"output":null}],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the calling thread.",34,{"inputs":[],"output":{"generics":["sigset"],"name":"result"}}],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling thread.",34,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"thread_block","","Adds the set of signals to the signal mask for the calling thread.",34,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"thread_unblock","","Removes the set of signals from the signal mask for the calling thread.",34,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns the old mask.",34,{"inputs":[{"name":"self"},{"name":"sigmaskhow"}],"output":{"generics":["sigset"],"name":"result"}}],[11,"wait","","Suspends execution of the calling thread until one of the signals in the signal mask becomes pending, and returns the accepted signal.",34,{"inputs":[{"name":"self"}],"output":{"generics":["signal"],"name":"result"}}],[11,"as_ref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"sighandler"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"sighandler"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"sighandler"}],"output":{"name":"bool"}}],[11,"new","","This function will set or unset the flag `SA_SIGINFO` depending on the type of the `handler` argument.",35,{"inputs":[{"name":"sighandler"},{"name":"saflags"},{"name":"sigset"}],"output":{"name":"sigaction"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"sigevnotify"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"sigevnotify"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"sigevnotify"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"sigevnotify"}],"output":{"name":"sigevent"}}],[11,"sigevent","","",36,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",36,{"inputs":[{"name":"sigevent"}],"output":{"name":"self"}}],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"in_addr","nix::sys::socket","",null,null],[12,"s_addr","","",37,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",38,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",39,null],[12,"sa_data","","",39,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",40,null],[12,"sin_port","","",40,null],[12,"sin_addr","","",40,null],[12,"sin_zero","","",40,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",41,null],[12,"sin6_port","","",41,null],[12,"sin6_flowinfo","","",41,null],[12,"sin6_addr","","",41,null],[12,"sin6_scope_id","","",41,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",42,null],[12,"sun_path","","",42,null],[6,"sa_family_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",43,null],[3,"UnixAddr","","A wrapper around `sockaddr_un`. We track the length of `sun_path` (excluding a terminating null), because it may not be null-terminated.  For example, unconnected and Linux abstract sockets are never null-terminated, and POSIX does not require that `sun_len` include the terminating null even for normal sockets.  Note that the actual sockaddr length is greater by `offset_of!(libc::sockaddr_un, sun_path)`",null,null],[12,"0","","",44,null],[12,"1","","",44,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",45,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",46,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",47,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",48,null],[12,"imr_interface","","",48,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",49,null],[12,"ipv6mr_interface","","",49,null],[3,"MsgFlags","","",null,null],[3,"SockFlag","","",null,null],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to recvmsg. The size and alignment match that of a cmsghdr followed by a T, but the fields are not accessible, as the actual types will change on a call to recvmsg.",null,null],[3,"RecvMsg","","",null,null],[12,"bytes","","",50,null],[12,"address","","",50,null],[12,"flags","","",50,null],[3,"CmsgIterator","","",null,null],[3,"linger","","",null,null],[12,"l_onoff","","",51,null],[12,"l_linger","","",51,null],[3,"ucred","","",null,null],[4,"AddressFamily","","",null,null],[13,"Unix","","",52,null],[13,"Inet","","",52,null],[13,"Inet6","","",52,null],[13,"Netlink","","",52,null],[13,"Packet","","",52,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",53,null],[13,"Unix","","",53,null],[13,"Netlink","","",53,null],[4,"InetAddr","","",null,null],[13,"V4","","",54,null],[13,"V6","","",54,null],[4,"IpAddr","","",null,null],[13,"V4","","",55,null],[13,"V6","","",55,null],[4,"SockType","","",null,null],[13,"Stream","","",56,null],[13,"Datagram","","",56,null],[13,"SeqPacket","","",56,null],[13,"Raw","","",56,null],[13,"Rdm","","",56,null],[4,"ControlMessage","","A type-safe wrapper around a single control message. More types may be added to this enum; do not exhaustively pattern-match it. Further reading",null,null],[13,"ScmRights","","A message of type SCM_RIGHTS, containing an array of file descriptors passed between processes. See the description in the \"Ancillary messages\" section of the unix(7) man page.",57,null],[4,"SockLevel","","The protocol level at which to get / set socket options. Used as an argument to `getsockopt` and `setsockopt`.",null,null],[13,"Socket","","",58,null],[13,"Tcp","","",58,null],[13,"Ip","","",58,null],[13,"Ipv6","","",58,null],[13,"Udp","","",58,null],[13,"Netlink","","",58,null],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",59,null],[13,"Write","","Further  transmissions will be disallowed.",59,null],[13,"Both","","Further receptions and transmissions will be disallowed.",59,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly accompanied by ancillary data. Optionally direct the message at the given address, as with sendto.",null,null],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, and optionally receive ancillary data into the provided buffer. If no ancillary data is desired, use () as the type parameter.",null,null],[5,"socket","","Create an endpoint for communication",null,{"inputs":[{"name":"addressfamily"},{"name":"socktype"},{"name":"sockflag"},{"name":"c_int"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"socketpair","","Create a pair of connected sockets",null,{"inputs":[{"name":"addressfamily"},{"name":"socktype"},{"name":"c_int"},{"name":"sockflag"}],"output":{"name":"result"}}],[5,"listen","","Listen for connections on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[5,"bind","","Bind a name to a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockaddr"}],"output":{"name":"result"}}],[5,"accept","","Accept a connection on a socket",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"accept4","","Accept a connection on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockflag"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"connect","","Initiate a connection on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockaddr"}],"output":{"name":"result"}}],[5,"recv","","Receive data from a connection-oriented socket. Returns the number of bytes read",null,null],[5,"recvfrom","","Receive data from a connectionless or connection-oriented socket. Returns the number of bytes read and the socket address of the sender.",null,null],[5,"sendto","","",null,null],[5,"send","","Send data to a connection-oriented socket. Returns the number of bytes read",null,null],[5,"getsockopt","","Get the current value for the requested socket option",null,{"inputs":[{"name":"rawfd"},{"name":"o"}],"output":{"name":"result"}}],[5,"setsockopt","","Sets the value for the requested socket option",null,null],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["sockaddr"],"name":"result"}}],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["sockaddr"],"name":"result"}}],[5,"sockaddr_storage_to_addr","","Return the appropriate SockAddr type from a `sockaddr_storage` of a certain size.  In C this would usually be done by casting.  The `len` argument should be the number of bytes in the sockaddr_storage that are actually allocated and valid.  It must be at least as large as all the useful parts of the structure.  Note that in the case of a `sockaddr_un`, `len` need not include the terminating null.",null,{"inputs":[{"name":"sockaddr_storage"},{"name":"usize"}],"output":{"generics":["sockaddr"],"name":"result"}}],[5,"shutdown","","Shut down part of a full-duplex connection.",null,{"inputs":[{"name":"rawfd"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"netlinkaddr"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",47,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"new","","",47,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"netlinkaddr"}}],[11,"pid","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"groups","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"addressfamily"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"addressfamily"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",52,null],[11,"from_std","","",54,{"inputs":[{"name":"socketaddr"}],"output":{"name":"inetaddr"}}],[11,"new","","",54,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"inetaddr"}}],[11,"ip","","Gets the IP address associated with this socket address.",54,{"inputs":[{"name":"self"}],"output":{"name":"ipaddr"}}],[11,"port","","Gets the port number associated with this socket address",54,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"to_std","","",54,{"inputs":[{"name":"self"}],"output":{"name":"socketaddr"}}],[11,"to_str","","",54,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"inetaddr"}],"output":{"name":"bool"}}],[11,"hash","","",54,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"inetaddr"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",55,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipaddr"}}],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",55,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",45,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"from_std","","",45,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"any","","",45,{"inputs":[],"output":{"name":"ipv4addr"}}],[11,"octets","","",45,null],[11,"to_std","","",45,{"inputs":[{"name":"self"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",45,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"ipv4addr"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ipv6addr"}}],[11,"new","","",46,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"from_std","","",46,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Return the eight 16-bit segments that make up this address",46,null],[11,"to_std","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new sockaddr_un representing a filesystem path.",44,{"inputs":[{"name":"p"}],"output":{"generics":["unixaddr"],"name":"result"}}],[11,"new_abstract","","Create a new sockaddr_un representing an address in the \"abstract namespace\". This is a Linux-specific extension, primarily used to allow chrooted processes to communicate with specific daemons.",44,null],[11,"path","","If this address represents a filesystem path, return that path.",44,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"unixaddr"}],"output":{"name":"bool"}}],[11,"hash","","",44,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"unixaddr"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_inet","","",53,{"inputs":[{"name":"inetaddr"}],"output":{"name":"sockaddr"}}],[11,"new_unix","","",53,{"inputs":[{"name":"p"}],"output":{"generics":["sockaddr"],"name":"result"}}],[11,"new_netlink","","",53,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"sockaddr"}}],[11,"family","","",53,{"inputs":[{"name":"self"}],"output":{"name":"addressfamily"}}],[11,"to_str","","",53,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"as_ffi_pair","","",53,null],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"sockaddr"}],"output":{"name":"bool"}}],[11,"hash","","",53,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"msgflags"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"cmp","","",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"ordering"}}],[11,"hash","","",60,null],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",60,{"inputs":[],"output":{"name":"msgflags"}}],[11,"all","","Returns the set containing all flags.",60,{"inputs":[],"output":{"name":"msgflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",60,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",60,{"inputs":[{"name":"c_int"}],"output":{"generics":["msgflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",60,{"inputs":[{"name":"c_int"}],"output":{"name":"msgflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"bitor_assign","","Adds the set of flags.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",60,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",60,{"inputs":[{"name":"self"}],"output":{"name":"msgflags"}}],[11,"extend","","",60,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",60,{"inputs":[{"name":"t"}],"output":{"name":"msgflags"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",48,{"inputs":[{"name":"ipv4addr"},{"generics":["ipv4addr"],"name":"option"}],"output":{"name":"ip_mreq"}}],[11,"new","","",49,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6_mreq"}}],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"OriginalDst","","",null,null],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"reuseaddr"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",61,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",61,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"reuseport"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",62,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",62,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"tcpnodelay"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",63,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",63,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",64,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"linger"}],"output":{"name":"result"}}],[11,"get","","",64,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["linger"],"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"ipaddmembership"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",65,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ip_mreq"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"ipdropmembership"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",66,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ip_mreq"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"ipv6addmembership"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",67,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ipv6_mreq"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"ipv6dropmembership"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",68,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ipv6_mreq"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"ipmulticastttl"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",69,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u8"}],"output":{"name":"result"}}],[11,"get","","",69,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["u8"],"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"ipmulticastloop"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",70,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",70,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"receivetimeout"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",71,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"timeval"}],"output":{"name":"result"}}],[11,"get","","",71,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["timeval"],"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"sendtimeout"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",72,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"timeval"}],"output":{"name":"result"}}],[11,"get","","",72,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["timeval"],"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"broadcast"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",73,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",73,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"oobinline"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",74,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",74,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"socketerror"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",75,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["i32"],"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"keepalive"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",76,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",76,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"peercredentials"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",77,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["ucred"],"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"tcpkeepidle"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",78,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get","","",78,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["u32"],"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"rcvbuf"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",79,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get","","",79,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["usize"],"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sndbuf"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",80,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get","","",80,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["usize"],"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"rcvbufforce"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",81,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"sndbufforce"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",82,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"socktype"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",83,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["socktype"],"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"acceptconn"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",84,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"originaldst"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",85,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"generics":["sockaddr_in"],"name":"result"}}],[6,"IpMulticastTtl","nix::sys::socket","",null,null],[6,"InAddrT","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_PACKET","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[8,"GetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `getsockopt`",null,null],[16,"Val","","",86,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `setsockopt`",null,null],[16,"Val","","",87,null],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"socktype"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"socktype"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"sockflag"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"ordering"}}],[11,"hash","","",88,null],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",88,{"inputs":[],"output":{"name":"sockflag"}}],[11,"all","","Returns the set containing all flags.",88,{"inputs":[],"output":{"name":"sockflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",88,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",88,{"inputs":[{"name":"c_int"}],"output":{"generics":["sockflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",88,{"inputs":[{"name":"c_int"}],"output":{"name":"sockflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"bitor_assign","","Adds the set of flags.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",88,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",88,{"inputs":[{"name":"self"}],"output":{"name":"sockflag"}}],[11,"extend","","",88,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",88,{"inputs":[{"name":"t"}],"output":{"name":"sockflag"}}],[11,"new","","Create a CmsgSpace. The structure is used only for space, so the fields are uninitialized.",89,{"inputs":[],"output":{"name":"self"}}],[11,"cmsgs","","Iterate over the valid control messages pointed to by this msghdr.",50,{"inputs":[{"name":"self"}],"output":{"name":"cmsgiterator"}}],[11,"next","","",90,{"inputs":[{"name":"self"}],"output":{"generics":["controlmessage"],"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"ucred"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"ucred"}],"output":{"name":"bool"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"shutdown"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",92,null],[12,"st_ino","","",92,null],[12,"st_nlink","","",92,null],[12,"st_mode","","",92,null],[12,"st_uid","","",92,null],[12,"st_gid","","",92,null],[12,"st_rdev","","",92,null],[12,"st_size","","",92,null],[12,"st_blksize","","",92,null],[12,"st_blocks","","",92,null],[12,"st_atime","","",92,null],[12,"st_atime_nsec","","",92,null],[12,"st_mtime","","",92,null],[12,"st_mtime_nsec","","",92,null],[12,"st_ctime","","",92,null],[12,"st_ctime_nsec","","",92,null],[3,"SFlag","","",null,null],[3,"Mode","","",null,null],[5,"mknod","","",null,{"inputs":[{"name":"p"},{"name":"sflag"},{"name":"mode"},{"name":"dev_t"}],"output":{"name":"result"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"u64"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"u64"}}],[5,"makedev","","",null,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"dev_t"}}],[5,"umask","","",null,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[5,"stat","","",null,{"inputs":[{"name":"p"}],"output":{"generics":["filestat"],"name":"result"}}],[5,"lstat","","",null,{"inputs":[{"name":"p"}],"output":{"generics":["filestat"],"name":"result"}}],[5,"fstat","","",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["filestat"],"name":"result"}}],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IROTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"sflag"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"cmp","","",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"ordering"}}],[11,"hash","","",93,null],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[],"output":{"name":"sflag"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[],"output":{"name":"sflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,{"inputs":[{"name":"self"}],"output":{"name":"mode_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"mode_t"}],"output":{"generics":["sflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",93,{"inputs":[{"name":"mode_t"}],"output":{"name":"sflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"bitor_assign","","Adds the set of flags.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",93,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",93,{"inputs":[{"name":"self"}],"output":{"name":"sflag"}}],[11,"extend","","",93,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"sflag"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",94,null],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",94,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",94,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",94,{"inputs":[{"name":"self"}],"output":{"name":"mode_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",94,{"inputs":[{"name":"mode_t"}],"output":{"generics":["mode"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",94,{"inputs":[{"name":"mode_t"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",94,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",94,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",94,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",94,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[0,"syscall","nix::sys","Indirect system call",null,null],[5,"syscall","nix::sys::syscall","",null,null],[6,"Syscall","","",null,null],[7,"SYSPIVOTROOT","","",null,null],[7,"MEMFD_CREATE","","",null,null],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",95,null],[13,"RB_KEXEC","","",95,null],[13,"RB_POWER_OFF","","",95,null],[13,"RB_AUTOBOOT","","",95,null],[13,"RB_SW_SUSPEND","","",95,null],[5,"reboot","","",null,{"inputs":[{"name":"rebootmode"}],"output":{"generics":["void"],"name":"result"}}],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,{"inputs":[{"name":"bool"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"rebootmode"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"rebootmode"}],"output":{"name":"bool"}}],[0,"termios","nix::sys","",null,null],[3,"Termios","nix::sys::termios","",null,null],[12,"c_iflag","","",96,null],[12,"c_oflag","","",96,null],[12,"c_cflag","","",96,null],[12,"c_lflag","","",96,null],[12,"c_line","","",96,null],[12,"c_cc","","",96,null],[12,"c_ispeed","","",96,null],[12,"c_ospeed","","",96,null],[3,"InputFlags","","",null,null],[3,"OutputFlags","","",null,null],[3,"ControlFlags","","",null,null],[3,"LocalFlags","","",null,null],[4,"BaudRate","","",null,null],[13,"B0","","",97,null],[13,"B50","","",97,null],[13,"B75","","",97,null],[13,"B110","","",97,null],[13,"B134","","",97,null],[13,"B150","","",97,null],[13,"B200","","",97,null],[13,"B300","","",97,null],[13,"B600","","",97,null],[13,"B1200","","",97,null],[13,"B1800","","",97,null],[13,"B2400","","",97,null],[13,"B4800","","",97,null],[13,"B9600","","",97,null],[13,"B19200","","",97,null],[13,"B38400","","",97,null],[13,"B57600","","",97,null],[13,"B115200","","",97,null],[13,"B230400","","",97,null],[13,"B460800","","",97,null],[13,"B500000","","",97,null],[13,"B576000","","",97,null],[13,"B921600","","",97,null],[13,"B1000000","","",97,null],[13,"B1152000","","",97,null],[13,"B1500000","","",97,null],[13,"B2000000","","",97,null],[13,"B2500000","","",97,null],[13,"B3000000","","",97,null],[13,"B3500000","","",97,null],[13,"B4000000","","",97,null],[4,"SetArg","","",null,null],[13,"TCSANOW","","",98,null],[13,"TCSADRAIN","","",98,null],[13,"TCSAFLUSH","","",98,null],[4,"FlushArg","","",null,null],[13,"TCIFLUSH","","",99,null],[13,"TCOFLUSH","","",99,null],[13,"TCIOFLUSH","","",99,null],[4,"FlowArg","","",null,null],[13,"TCOOFF","","",100,null],[13,"TCOON","","",100,null],[13,"TCIOFF","","",100,null],[13,"TCION","","",100,null],[5,"cfgetispeed","","",null,{"inputs":[{"name":"termios"}],"output":{"name":"baudrate"}}],[5,"cfgetospeed","","",null,{"inputs":[{"name":"termios"}],"output":{"name":"baudrate"}}],[5,"cfsetispeed","","",null,{"inputs":[{"name":"termios"},{"name":"baudrate"}],"output":{"name":"result"}}],[5,"cfsetospeed","","",null,{"inputs":[{"name":"termios"},{"name":"baudrate"}],"output":{"name":"result"}}],[5,"tcgetattr","","",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["termios"],"name":"result"}}],[5,"tcsetattr","","",null,{"inputs":[{"name":"rawfd"},{"name":"setarg"},{"name":"termios"}],"output":{"name":"result"}}],[5,"tcdrain","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"tcflow","","",null,{"inputs":[{"name":"rawfd"},{"name":"flowarg"}],"output":{"name":"result"}}],[5,"tcflush","","",null,{"inputs":[{"name":"rawfd"},{"name":"flusharg"}],"output":{"name":"result"}}],[5,"tcsendbreak","","",null,{"inputs":[{"name":"rawfd"},{"name":"c_int"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"baudrate"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"baudrate"}],"output":{"name":"bool"}}],[11,"from","","",97,{"inputs":[{"name":"speed_t"}],"output":{"name":"baudrate"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"inputflags"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"cmp","","",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"ordering"}}],[11,"hash","","",101,null],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"inputflags"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"inputflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"tcflag_t"}],"output":{"generics":["inputflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",101,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"inputflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"bitor_assign","","Adds the set of flags.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",101,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"self"}],"output":{"name":"inputflags"}}],[11,"extend","","",101,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"inputflags"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"outputflags"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"cmp","","",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"ordering"}}],[11,"hash","","",102,null],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",102,{"inputs":[],"output":{"name":"outputflags"}}],[11,"all","","Returns the set containing all flags.",102,{"inputs":[],"output":{"name":"outputflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",102,{"inputs":[{"name":"tcflag_t"}],"output":{"generics":["outputflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",102,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"outputflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"bitor_assign","","Adds the set of flags.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",102,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",102,{"inputs":[{"name":"self"}],"output":{"name":"outputflags"}}],[11,"extend","","",102,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",102,{"inputs":[{"name":"t"}],"output":{"name":"outputflags"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"controlflags"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"le","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"gt","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"ge","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"cmp","","",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"ordering"}}],[11,"hash","","",103,null],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",103,{"inputs":[],"output":{"name":"controlflags"}}],[11,"all","","Returns the set containing all flags.",103,{"inputs":[],"output":{"name":"controlflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",103,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",103,{"inputs":[{"name":"tcflag_t"}],"output":{"generics":["controlflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",103,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"controlflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"bitor_assign","","Adds the set of flags.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",103,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",103,{"inputs":[{"name":"self"}],"output":{"name":"controlflags"}}],[11,"extend","","",103,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",103,{"inputs":[{"name":"t"}],"output":{"name":"controlflags"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"localflags"}}],[11,"partial_cmp","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"le","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"gt","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"ge","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"cmp","","",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"ordering"}}],[11,"hash","","",104,null],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",104,{"inputs":[],"output":{"name":"localflags"}}],[11,"all","","Returns the set containing all flags.",104,{"inputs":[],"output":{"name":"localflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",104,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",104,{"inputs":[{"name":"tcflag_t"}],"output":{"generics":["localflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",104,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"localflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"bitor_assign","","Adds the set of flags.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",104,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",104,{"inputs":[{"name":"self"}],"output":{"name":"localflags"}}],[11,"extend","","",104,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",104,{"inputs":[{"name":"t"}],"output":{"name":"localflags"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"setarg"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"flusharg"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"flowarg"}}],[6,"tcflag_t","","",null,null],[6,"cc_t","","",null,null],[6,"speed_t","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"NCCS","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[5,"uname","","",null,{"inputs":[],"output":{"name":"utsname"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"sysname","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"nodename","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"release","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"machine","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[4,"WaitStatus","","",null,null],[13,"Exited","","",106,null],[13,"Signaled","","",106,null],[13,"Stopped","","",106,null],[13,"PtraceEvent","","",106,null],[13,"Continued","","",106,null],[13,"StillAlive","","",106,null],[5,"waitpid","","",null,{"inputs":[{"name":"pid_t"},{"generics":["waitpidflag"],"name":"option"}],"output":{"generics":["waitstatus"],"name":"result"}}],[5,"wait","","",null,{"inputs":[],"output":{"generics":["waitstatus"],"name":"result"}}],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"waitpidflag"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"cmp","","",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"ordering"}}],[11,"hash","","",107,null],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",107,{"inputs":[],"output":{"name":"waitpidflag"}}],[11,"all","","Returns the set containing all flags.",107,{"inputs":[],"output":{"name":"waitpidflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",107,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",107,{"inputs":[{"name":"c_int"}],"output":{"generics":["waitpidflag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",107,{"inputs":[{"name":"c_int"}],"output":{"name":"waitpidflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"bitor_assign","","Adds the set of flags.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",107,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",107,{"inputs":[{"name":"self"}],"output":{"name":"waitpidflag"}}],[11,"extend","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",107,{"inputs":[{"name":"t"}],"output":{"name":"waitpidflag"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"waitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"self"},{"name":"waitstatus"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"waitstatus"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"mman","nix::sys","",null,null],[3,"MapFlags","nix::sys::mman","",null,null],[3,"MsFlags","","",null,null],[3,"ProtFlags","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically a higher-level abstraction will hide the unsafe interactions with the mmap'd region.",null,null],[5,"munmap","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,{"inputs":[{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"shm_unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"cmp","","",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"ordering"}}],[11,"hash","","",108,null],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",108,{"inputs":[],"output":{"name":"mapflags"}}],[11,"all","","Returns the set containing all flags.",108,{"inputs":[],"output":{"name":"mapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",108,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",108,{"inputs":[{"name":"c_int"}],"output":{"generics":["mapflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",108,{"inputs":[{"name":"c_int"}],"output":{"name":"mapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitor_assign","","Adds the set of flags.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",108,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",108,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"extend","","",108,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",108,{"inputs":[{"name":"t"}],"output":{"name":"mapflags"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"le","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"gt","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ge","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"cmp","","",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"ordering"}}],[11,"hash","","",109,null],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",109,{"inputs":[],"output":{"name":"msflags"}}],[11,"all","","Returns the set containing all flags.",109,{"inputs":[],"output":{"name":"msflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",109,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",109,{"inputs":[{"name":"c_int"}],"output":{"generics":["msflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",109,{"inputs":[{"name":"c_int"}],"output":{"name":"msflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitor_assign","","Adds the set of flags.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",109,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",109,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"extend","","",109,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",109,{"inputs":[{"name":"t"}],"output":{"name":"msflags"}}],[6,"MmapAdvise","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"protflags"}}],[11,"partial_cmp","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"le","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"gt","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"ge","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"cmp","","",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"ordering"}}],[11,"hash","","",110,null],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",110,{"inputs":[],"output":{"name":"protflags"}}],[11,"all","","Returns the set containing all flags.",110,{"inputs":[],"output":{"name":"protflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",110,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",110,{"inputs":[{"name":"c_int"}],"output":{"generics":["protflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",110,{"inputs":[{"name":"c_int"}],"output":{"name":"protflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"bitor_assign","","Adds the set of flags.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",110,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",110,{"inputs":[{"name":"self"}],"output":{"name":"protflags"}}],[11,"extend","","",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",110,{"inputs":[{"name":"t"}],"output":{"name":"protflags"}}],[0,"uio","nix::sys","",null,null],[3,"IoVec","nix::sys::uio","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"pwrite","","",null,null],[5,"pread","","",null,null],[11,"as_slice","","",111,null],[11,"from_slice","","",111,null],[11,"from_mut_slice","","",111,null],[0,"time","nix::sys","",null,null],[3,"TimeSpec","nix::sys::time","",null,null],[3,"TimeVal","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",112,{"inputs":[],"output":{"name":"self"}}],[11,"hours","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"minutes","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"seconds","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"milliseconds","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"microseconds","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"nanoseconds","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"num_hours","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_minutes","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_seconds","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_milliseconds","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_microseconds","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_nanoseconds","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"as_ref","","",113,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"cmp","","",113,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"seconds","","",113,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"milliseconds","","",113,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",113,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",113,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"num_seconds","","",113,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","",113,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","",113,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_nanoseconds","","",113,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"tv_sec","","",113,{"inputs":[{"name":"self"}],"output":{"name":"time_t"}}],[11,"tv_nsec","","",113,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"neg","","",113,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"add","","",113,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"sub","","",113,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"mul","","",113,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"div","","",113,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"as_ref","","",114,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"bool"}}],[11,"cmp","","",114,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",114,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"seconds","","",114,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"milliseconds","","",114,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",114,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.  Some precision will be lost",114,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"num_seconds","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_nanoseconds","","",114,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"tv_sec","","",114,{"inputs":[{"name":"self"}],"output":{"name":"time_t"}}],[11,"tv_usec","","",114,{"inputs":[{"name":"self"}],"output":{"name":"suseconds_t"}}],[11,"neg","","",114,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"add","","",114,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"sub","","",114,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"mul","","",114,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timeval"}}],[11,"div","","",114,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timeval"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"ptrace","nix::sys","",null,null],[5,"ptrace","nix::sys::ptrace","",null,null],[5,"ptrace_setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",null,{"inputs":[{"name":"pid_t"},{"name":"ptraceoptions"}],"output":{"name":"result"}}],[0,"ptrace","","",null,null],[6,"PtraceRequest","nix::sys::ptrace::ptrace","",null,null],[6,"PtraceEvent","","",null,null],[6,"PtraceOptions","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[0,"select","nix::sys","",null,null],[3,"FdSet","nix::sys::select","",null,null],[5,"select","","",null,{"inputs":[{"name":"c_int"},{"generics":["fdset"],"name":"option"},{"generics":["fdset"],"name":"option"},{"generics":["fdset"],"name":"option"},{"generics":["timeval"],"name":"option"}],"output":{"generics":["c_int"],"name":"result"}}],[17,"FD_SETSIZE","","",null,null],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"fdset"}}],[11,"new","","",115,{"inputs":[],"output":{"name":"fdset"}}],[11,"insert","","",115,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":null}],[11,"remove","","",115,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":null}],[11,"contains","","",115,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"bool"}}],[11,"clear","","",115,{"inputs":[{"name":"self"}],"output":null}],[0,"quota","nix::sys","",null,null],[5,"quotactl_on","nix::sys::quota","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"quotafmt"},{"name":"p"}],"output":{"name":"result"}}],[5,"quotactl_off","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"}],"output":{"name":"result"}}],[5,"quotactl_sync","","",null,{"inputs":[{"name":"quotatype"},{"name":"option"}],"output":{"name":"result"}}],[5,"quotactl_get","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"c_int"},{"name":"dqblk"}],"output":{"name":"result"}}],[5,"quotactl_set","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"c_int"},{"name":"dqblk"}],"output":{"name":"result"}}],[0,"quota","","",null,null],[3,"QuotaCmd","nix::sys::quota::quota","",null,null],[12,"0","","",116,null],[12,"1","","",116,null],[3,"QuotaValidFlags","","",null,null],[3,"Dqblk","","",null,null],[12,"bhardlimit","","",117,null],[12,"bsoftlimit","","",117,null],[12,"curspace","","",117,null],[12,"ihardlimit","","",117,null],[12,"isoftlimit","","",117,null],[12,"curinodes","","",117,null],[12,"btime","","",117,null],[12,"itime","","",117,null],[12,"valid","","",117,null],[6,"QuotaSubCmd","","",null,null],[6,"QuotaType","","",null,null],[6,"QuotaFmt","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[11,"as_int","","",116,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"quotavalidflags"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"le","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"gt","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"ge","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"cmp","","",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"ordering"}}],[11,"hash","","",118,null],[11,"default","","",118,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",118,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"all","","Returns the set containing all flags.",118,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",118,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",118,{"inputs":[{"name":"u32"}],"output":{"generics":["quotavalidflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",118,{"inputs":[{"name":"u32"}],"output":{"name":"quotavalidflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"bitor_assign","","Adds the set of flags.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",118,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",118,{"inputs":[{"name":"self"}],"output":{"name":"quotavalidflags"}}],[11,"extend","","",118,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",118,{"inputs":[{"name":"t"}],"output":{"name":"quotavalidflags"}}],[11,"default","","",117,{"inputs":[],"output":{"name":"dqblk"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[0,"statfs","nix::sys","",null,null],[5,"statfs","nix::sys::statfs","",null,{"inputs":[{"name":"p"},{"name":"statfs"}],"output":{"name":"result"}}],[5,"fstatfs","","",null,{"inputs":[{"name":"t"},{"name":"statfs"}],"output":{"name":"result"}}],[0,"vfs","","",null,null],[3,"Statfs","nix::sys::statfs::vfs","",null,null],[12,"f_type","","",119,null],[12,"f_bsize","","",119,null],[12,"f_blocks","","",119,null],[12,"f_bfree","","",119,null],[12,"f_bavail","","",119,null],[12,"f_files","","",119,null],[12,"f_ffree","","",119,null],[12,"f_fsid","","",119,null],[12,"f_namelen","","",119,null],[12,"f_frsize","","",119,null],[12,"f_spare","","",119,null],[0,"hwdep","","",null,null],[6,"FsType","nix::sys::statfs::vfs::hwdep","",null,null],[6,"BlockSize","","",null,null],[6,"NameLen","","",null,null],[6,"FragmentSize","","",null,null],[6,"SwordType","","",null,null],[17,"ADFS_SUPER_MAGIC","nix::sys::statfs::vfs","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"BEFS_SUPER_MAGIC","","",null,null],[17,"BFS_MAGIC","","",null,null],[17,"CIFS_MAGIC_NUMBER","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"COH_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEVFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT_SUPER_MAGIC","","",null,null],[17,"EXT2_OLD_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"JFS_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NTFS_SB_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"ROMFS_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSV2_SUPER_MAGIC","","",null,null],[17,"SYSV4_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"UFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VXFS_SUPER_MAGIC","","",null,null],[17,"XENIX_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"_XIAFS_SUPER_MAGIC","","",null,null],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[0,"statvfs","nix::sys","FFI for statvfs functions",null,null],[5,"statvfs","nix::sys::statvfs","Fill an existing `Statvfs` object with information about the `path`",null,{"inputs":[{"name":"p"},{"name":"statvfs"}],"output":{"name":"result"}}],[5,"fstatvfs","","Fill an existing `Statvfs` object with information about `fd`",null,{"inputs":[{"name":"t"},{"name":"statvfs"}],"output":{"name":"result"}}],[0,"vfs","","Structs related to the `statvfs` and `fstatvfs` functions",null,null],[3,"FsFlags","nix::sys::statvfs::vfs","Mount Flags",null,null],[3,"Statvfs","","The posix statvfs struct",null,null],[12,"f_bsize","","Filesystem block size. This is the value that will lead to most efficient use of the filesystem",120,null],[12,"f_frsize","","Fragment Size -- actual minimum unit of allocation on this filesystem",120,null],[12,"f_blocks","","Total number of blocks on the filesystem",120,null],[12,"f_bfree","","Number of unused blocks on the filesystem, including those reserved for root",120,null],[12,"f_bavail","","Number of blocks available to non-root users",120,null],[12,"f_files","","Total number of inodes available on the filesystem",120,null],[12,"f_ffree","","Number of inodes available on the filesystem",120,null],[12,"f_favail","","Number of inodes available to non-root users",120,null],[12,"f_fsid","","File System ID",120,null],[12,"f_flag","","Mount Flags",120,null],[12,"f_namemax","","Maximum filename length",120,null],[17,"RDONLY","","Read Only",null,null],[17,"NOSUID","","Do not allow the set-uid bits to have an effect",null,null],[17,"NODEV","","Do not interpret character or block-special devices",null,null],[17,"NOEXEC","","Do not allow execution of binaries on the filesystem",null,null],[17,"SYNCHRONOUS","","All IO should be done synchronously",null,null],[17,"MANDLOCK","","Allow mandatory locks on the filesystem",null,null],[17,"WRITE","","",null,null],[17,"APPEND","","",null,null],[17,"IMMUTABLE","","",null,null],[17,"NOATIME","","Do not update access times on files",null,null],[17,"NODIRATIME","","Do not update access times on files",null,null],[17,"RELATIME","","Update access time relative to modify/change time",null,null],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"fsflags"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"le","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"gt","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"ge","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"cmp","","",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"ordering"}}],[11,"hash","","",121,null],[11,"default","","",121,{"inputs":[],"output":{"name":"fsflags"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",121,{"inputs":[],"output":{"name":"fsflags"}}],[11,"all","","Returns the set containing all flags.",121,{"inputs":[],"output":{"name":"fsflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",121,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",121,{"inputs":[{"name":"c_ulong"}],"output":{"generics":["fsflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",121,{"inputs":[{"name":"c_ulong"}],"output":{"name":"fsflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"bitor_assign","","Adds the set of flags.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",121,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",121,{"inputs":[{"name":"self"}],"output":{"name":"fsflags"}}],[11,"extend","","",121,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",121,{"inputs":[{"name":"t"}],"output":{"name":"fsflags"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"for_path","","Create a new `Statvfs` object and fill it with information about the mount that contains `path`",120,{"inputs":[{"name":"p"}],"output":{"generics":["statvfs"],"name":"result"}}],[11,"update_with_path","","Replace information in this struct with information about `path`",120,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"for_fd","","Create a new `Statvfs` object and fill it with information from fd",120,{"inputs":[{"name":"t"}],"output":{"generics":["statvfs"],"name":"result"}}],[11,"update_with_fd","","Replace information in this struct with information about `fd`",120,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"default","","Create a statvfs object initialized to all zeros",120,{"inputs":[],"output":{"name":"self"}}],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"ucontext"}}],[11,"get","","",122,{"inputs":[],"output":{"generics":["ucontext"],"name":"result"}}],[11,"set","","",122,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"sigmask_mut","","",122,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[11,"sigmask","","",122,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\" header",null,null],[4,"ForkResult","nix::unistd","Represents the successful result of calling `fork`",null,null],[13,"Parent","","",123,null],[12,"child","nix::unistd::ForkResult","",123,null],[13,"Child","nix::unistd","",123,null],[4,"Whence","","",null,null],[13,"SeekSet","","",124,null],[13,"SeekCur","","",124,null],[13,"SeekEnd","","",124,null],[13,"SeekData","","",124,null],[13,"SeekHole","","",124,null],[5,"pivot_root","","",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":{"name":"result"}}],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",null,{"inputs":[{"name":"uid_t"},{"name":"uid_t"},{"name":"uid_t"}],"output":{"name":"result"}}],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",null,{"inputs":[{"name":"gid_t"},{"name":"gid_t"},{"name":"gid_t"}],"output":{"name":"result"}}],[5,"fork","","Create a new child process duplicating the parent process (see fork(2)).",null,{"inputs":[],"output":{"generics":["forkresult"],"name":"result"}}],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,{"inputs":[{"name":"pid_t"},{"name":"pid_t"}],"output":{"name":"result"}}],[5,"getpgid","","",null,{"inputs":[{"generics":["pid_t"],"name":"option"}],"output":{"generics":["pid_t"],"name":"result"}}],[5,"setsid","","Create new session and set process group id (see setsid(2)).",null,{"inputs":[],"output":{"generics":["pid_t"],"name":"result"}}],[5,"tcgetpgrp","","Get the terminal foreground process group (see tcgetpgrp(3)).",null,{"inputs":[{"name":"c_int"}],"output":{"generics":["pid_t"],"name":"result"}}],[5,"tcsetpgrp","","Set the terminal foreground process group (see tcgetpgrp(3)).",null,{"inputs":[{"name":"c_int"},{"name":"pid_t"}],"output":{"name":"result"}}],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"gettid","","Get the caller's thread ID (see gettid(2).",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"dup2","","Create a copy of the specified file descriptor using the specified fd (see dup(2)).",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"dup3","","Create a new copy of the specified file descriptor using the specified fd and flags (see dup(2)).",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"oflag"}],"output":{"generics":["rawfd"],"name":"result"}}],[5,"chdir","","Change the current working directory of the calling process (see chdir(2)).",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fchdir","","Change the current working directory of the process to the one given as an open file descriptor (see fchdir(2)).",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"mkdir","","Creates new directory `path` with access rights `mode`.",null,{"inputs":[{"name":"p"},{"name":"mode"}],"output":{"name":"result"}}],[5,"getcwd","","Returns the current directory as a PathBuf",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"result"}}],[5,"chown","","Change the ownership of the file at `path` to be owned by the specified `owner` (user) and `group` (see chown(2)).",null,{"inputs":[{"name":"p"},{"generics":["uid_t"],"name":"option"},{"generics":["gid_t"],"name":"option"}],"output":{"name":"result"}}],[5,"execv","","Replace the current process image with a new one (see exec(3)).",null,null],[5,"execve","","Replace the current process image with a new one (see execve(2)).",null,null],[5,"execvp","","Replace the current process image with a new one and replicate shell `PATH` searching behavior (see exec(3)).",null,null],[5,"daemon","","Daemonize this process by detaching from the controlling terminal (see daemon(3)).",null,{"inputs":[{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[5,"sethostname","","Set the system host name (see gethostname(2)).",null,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[5,"gethostname","","Get the host name and store it in the provided buffer, returning a pointer the CStr in that buffer on success (see gethostname(2)).",null,null],[5,"close","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"read","","",null,null],[5,"write","","",null,null],[5,"lseek","","",null,{"inputs":[{"name":"rawfd"},{"name":"off_t"},{"name":"whence"}],"output":{"generics":["off_t"],"name":"result"}}],[5,"lseek64","","",null,{"inputs":[{"name":"rawfd"},{"name":"off64_t"},{"name":"whence"}],"output":{"generics":["off64_t"],"name":"result"}}],[5,"pipe","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"pipe2","","",null,{"inputs":[{"name":"oflag"}],"output":{"name":"result"}}],[5,"ftruncate","","",null,{"inputs":[{"name":"rawfd"},{"name":"off_t"}],"output":{"name":"result"}}],[5,"isatty","","",null,{"inputs":[{"name":"rawfd"}],"output":{"generics":["bool"],"name":"result"}}],[5,"unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"chroot","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fsync","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"fdatasync","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"getuid","","",null,{"inputs":[],"output":{"name":"uid_t"}}],[5,"geteuid","","",null,{"inputs":[],"output":{"name":"uid_t"}}],[5,"getgid","","",null,{"inputs":[],"output":{"name":"gid_t"}}],[5,"getegid","","",null,{"inputs":[],"output":{"name":"gid_t"}}],[5,"setuid","","",null,{"inputs":[{"name":"uid_t"}],"output":{"name":"result"}}],[5,"setgid","","",null,{"inputs":[{"name":"gid_t"}],"output":{"name":"result"}}],[5,"pause","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"sleep","","",null,{"inputs":[{"name":"c_uint"}],"output":{"name":"c_uint"}}],[5,"mkstemp","","Creates a regular file which persists even after process termination",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"forkresult"}}],[11,"is_child","","Return `true` if this is the child process of the `fork()`",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[6,"Result","nix","Nix Result Type",null,null],[8,"NixPath","","",null,null],[10,"len","","",125,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"with_nix_path","","",125,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_errno","","Create a nix Error from a given errno",1,{"inputs":[{"name":"errno"}],"output":{"name":"error"}}],[11,"last","","Get the current errno and convert it to a nix Error",1,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",1,{"inputs":[],"output":{"name":"error"}}],[11,"errno","","Get the errno associated with this error",1,{"inputs":[{"name":"self"}],"output":{"name":"errno"}}],[11,"from","","",1,{"inputs":[{"name":"errno"}],"output":{"name":"error"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"ioc","","Encode an ioctl command.",null,null],[14,"io","","Encode an ioctl command that has no associated data.",null,null],[14,"ior","","Encode an ioctl command that reads.",null,null],[14,"iow","","Encode an ioctl command that writes.",null,null],[14,"iorw","","Encode an ioctl command that both reads and writes.",null,null],[14,"convert_ioctl_res","","Convert raw ioctl return value to a Nix result",null,null],[14,"ioctl","","",null,null],[11,"clone","nix::sys::stat","",92,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","nix::sys::socket","",37,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}]],"paths":[[4,"Errno"],[4,"Error"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"OFlag"],[3,"FdFlag"],[3,"SealFlag"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"PollFd"],[3,"EventFlags"],[3,"CloneFlags"],[3,"CpuSet"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"MemFdCreateFlag"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SignalIterator"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"SigEvent"],[3,"in_addr"],[3,"in6_addr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"NetlinkAddr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"RecvMsg"],[3,"linger"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[3,"MsgFlags"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"CmsgSpace"],[3,"CmsgIterator"],[3,"ucred"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"RebootMode"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"MapFlags"],[3,"MsFlags"],[3,"ProtFlags"],[3,"IoVec"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"FdSet"],[3,"QuotaCmd"],[3,"Dqblk"],[3,"QuotaValidFlags"],[3,"Statfs"],[3,"Statvfs"],[3,"FsFlags"],[3,"UContext"],[4,"ForkResult"],[4,"Whence"],[8,"NixPath"]]};
searchIndex["nodrop"] = {"doc":"","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,{"inputs":[{"name":"t"}],"output":{"name":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}]],"paths":[[3,"NoDrop"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"encode","","",0,{"inputs":[{"name":"self"},{"name":"__st"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"generics":["complex"],"name":"result"}}],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily have a sqrt function), i.e. `re^2 + im^2`.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i * theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"powf","","Raises `self` to a floating point power.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"powc","","Raises `self` to a complex power.",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"expf","","Raises a floating point number to the complex power `self`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sin","","Computes the sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"cos","","Computes the cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"tan","","Computes the tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"is_nan","","Checks if the given complex number is NaN",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_infinite","","Checks if the given complex number is infinite",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_finite","","Checks if the given complex number is finite",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_normal","","Checks if the given complex number is normal",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"self"}}],[11,"neg","","",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"parsecomplexerror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"parsecomplexerror"}],"output":{"name":"bool"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current system.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",14,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",14,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",14,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",14,null],[8,"FloatConst","","",null,null],[10,"E","","Return Eulerâ€™s number.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / Ï€`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / Ï€`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(Ï€)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `Ï€ / 2.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `Ï€ / 3.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `Ï€ / 4.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `Ï€ / 6.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `Ï€ / 8.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedesâ€™ constant.",15,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",20,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",20,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["openssl"] = {"doc":"","items":[[5,"init","openssl","",null,null],[0,"aes","","Low level AES IGE functionality",null,null],[3,"KeyError","openssl::aes","Provides Error handling for parsing keys.",null,null],[3,"AesKey","","The key used to encrypt or decrypt cipher blocks.",null,null],[5,"aes_ige","","Performs AES IGE encryption or decryption",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_encrypt","","Prepares a key for encryption.",1,null],[11,"new_decrypt","","Prepares a key for decryption.",1,null],[0,"asn1","openssl","Defines the format of certificiates",null,null],[3,"Asn1GeneralizedTime","openssl::asn1","Non-UTC representation of time",null,null],[3,"Asn1GeneralizedTimeRef","","Reference to a [`Asn1GeneralizedTime`]",null,null],[3,"Asn1Time","","Time storage and comparison",null,null],[3,"Asn1TimeRef","","Reference to an [`Asn1Time`]",null,null],[3,"Asn1String","","Primary ASN.1 type used by OpenSSL",null,null],[3,"Asn1StringRef","","Reference to [`Asn1String`]",null,null],[3,"Asn1Integer","","Numeric representation",null,null],[3,"Asn1IntegerRef","","Reference to [`Asn1Integer`]",null,null],[3,"Asn1BitString","","Sequence of bytes",null,null],[3,"Asn1BitStringRef","","Reference to [`Asn1BitString`]",null,null],[3,"Asn1Object","","Object Identifier",null,null],[3,"Asn1ObjectRef","","Reference to [`Asn1Object`]",null,null],[11,"from_ptr","","",2,null],[11,"as_ptr","","",2,null],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"asn1generalizedtimeref"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"asn1generalizedtimeref"}}],[11,"borrow","","",2,{"inputs":[{"name":"self"}],"output":{"name":"asn1generalizedtimeref"}}],[11,"as_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"asn1generalizedtimeref"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ptr","","",4,null],[11,"as_ptr","","",4,null],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"borrow","","",4,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"as_ref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"days_from_now","","Creates a new time on specified interval in days from now",4,{"inputs":[{"name":"u32"}],"output":{"generics":["asn1time","errorstack"],"name":"result"}}],[11,"from_ptr","","",6,null],[11,"as_ptr","","",6,null],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"borrow","","",6,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"as_ref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"as_utf8","","Converts the ASN.1 underlying format to UTF8",7,{"inputs":[{"name":"self"}],"output":{"generics":["opensslstring","errorstack"],"name":"result"}}],[11,"as_slice","","Return the string as an array of bytes",7,null],[11,"len","","Return the length of the Asn1String (number of bytes)",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_ptr","","",8,null],[11,"as_ptr","","",8,null],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"asn1integerref"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"self"}],"output":{"name":"asn1integerref"}}],[11,"borrow","","",8,{"inputs":[{"name":"self"}],"output":{"name":"asn1integerref"}}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"asn1integerref"}}],[11,"get","","Returns value of ASN.1 integer, or -1 if there is an error, and 0 if the integer is Null.",9,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"set","","Sets the ASN.1 value to the value of a signed 32-bit integer, for larger numbers see [`bn`].",9,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"from_ptr","","",10,null],[11,"as_ptr","","",10,null],[11,"drop","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"deref_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"borrow","","",10,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"as_ref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"as_slice","","Returns the Asn1BitString as a slice",11,null],[11,"len","","Length of Asn1BitString in number of bytes.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_ptr","","",12,null],[11,"as_ptr","","",12,null],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}],[11,"deref_mut","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}],[11,"borrow","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}],[11,"as_ref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}],[11,"nid","","Returns the NID associated with this OID.",13,{"inputs":[{"name":"self"}],"output":{"name":"nid"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"bn","openssl","BigNum implementation",null,null],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly generated `BigNum`.",null,null],[3,"BigNumContext","","Temporary storage for BigNums on the secure heap",null,null],[3,"BigNumContextRef","","Reference to [`BigNumContext`]",null,null],[3,"BigNum","","Dynamically sized large number impelementation",null,null],[3,"BigNumRef","","Reference to a [`BigNum`]",null,null],[17,"MSB_MAYBE_ZERO","","The most significant bit of the number may be 0.",null,null],[17,"MSB_ONE","","The most significant bit of the number must be 1.",null,null],[17,"TWO_MSB_ONE","","The most significant two bits of the number must be 1.",null,null],[11,"from_ptr","","",14,null],[11,"as_ptr","","",14,null],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bignumcontextref"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bignumcontextref"}}],[11,"borrow","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bignumcontextref"}}],[11,"as_ref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bignumcontextref"}}],[11,"new","","Returns a new `BigNumContext`.",14,{"inputs":[],"output":{"generics":["bignumcontext","errorstack"],"name":"result"}}],[11,"from_ptr","","",15,null],[11,"as_ptr","","",15,null],[11,"drop","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"deref_mut","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"borrow","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"as_ref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bignumref"}}],[11,"clear","","Erases the memory used by this `BigNum`, resetting its value to 0.",16,{"inputs":[{"name":"self"}],"output":null}],[11,"add_word","","Adds a `u32` to `self`.",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"sub_word","","Subtracts a `u32` from `self`.",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mul_word","","Multiplies a `u32` by `self`.",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["u64","errorstack"],"name":"result"}}],[11,"mod_word","","Returns the result of `self` modulo `w`.",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["u64","errorstack"],"name":"result"}}],[11,"rand_range","","Places a cryptographically-secure pseudo-random nonnegative number less than `self` in `rnd`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &= ~(1 << n)`.",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",16,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"lshift1","","Places `a << 1` in `self`.  Equivalent to `self * 2`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"rshift1","","Places `a >> 1` in `self`. Equivalent to `self / 2`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"checked_add","","Places `a + b` in `self`.  [`core::ops::Add`] is also implemented for `BigNumRef`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"checked_sub","","Places `a - b` in `self`. [`core::ops::Sub`] is also implemented for `BigNumRef`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"lshift","","Places `a << n` in `self`.  Equivalent to `a * 2 ^ n`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"rshift","","Places `a >> n` in `self`. Equivalent to `a / 2 ^ n`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"to_owned","","Creates a new BigNum with the same value.",16,{"inputs":[{"name":"self"}],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"set_negative","","Sets the sign of `self`.  Pass true to set `self` to a negative.  False sets `self` positive.",16,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"ordering"}}],[11,"is_negative","","Returns `true` if `self` is negative.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"num_bits","","Returns the number of significant bits in `self`.",16,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"num_bytes","","Returns the size of `self` in bytes. Implemented natively.",16,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"rand","","Generates a cryptographically strong pseudo-random `BigNum`, placing it in `self`.",16,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"msboption"},{"name":"bool"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`.  Not suitable for key generation.",16,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"msboption"},{"name":"bool"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"generate_prime","","Generates a prime number, placing it in `self`.",16,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"},{"generics":["bignumref"],"name":"option"},{"generics":["bignumref"],"name":"option"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"checked_mul","","Places the result of `a * b` in `self`. [`core::ops::Mul`] is also implemented for `BigNumRef`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"checked_div","","Places the result of `a / b` in `self`. The remainder is discarded. [`core::ops::Div`] is also implemented for `BigNumRef`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"checked_rem","","Places the result of `a % b` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"sqr","","Places the result of `aÂ²` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"nnmod","","Places the result of `a mod m` in `self`.  As opposed to `div_rem` the result is non-negative.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mod_sqr","","Places the result of `aÂ² mod m` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"exp","","Places the result of `a^p` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"gcd","","Places the greatest common denominator of `a` and `b` in `self`.",16,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"is_prime","","Checks whether `self` is prime.",16,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bignumcontextref"}],"output":{"generics":["bool","errorstack"],"name":"result"}}],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",16,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bignumcontextref"},{"name":"bool"}],"output":{"generics":["bool","errorstack"],"name":"result"}}],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_dec_str","","Returns a decimal string representation of `self`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["opensslstring","errorstack"],"name":"result"}}],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["opensslstring","errorstack"],"name":"result"}}],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",16,{"inputs":[{"name":"self"}],"output":{"generics":["asn1integer","errorstack"],"name":"result"}}],[11,"new","","Creates a new `BigNum` with the value 0.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"from_u32","","Creates a new `BigNum` with the given value.",15,{"inputs":[{"name":"u32"}],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",15,{"inputs":[{"name":"str"}],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",15,{"inputs":[{"name":"str"}],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc2409_prime_768","","Returns a constant used in IKE as defined in [`RFC 2409`].  This prime number is in the order of magnitude of `2 ^ 768`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled Oakley group id 1.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc2409_prime_1024","","Returns a constant used in IKE as defined in [`RFC 2409`].  This prime number is in the order of magnitude of `2 ^ 1024`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled Oakly group 2.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc3526_prime_1536","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 1536`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 5.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc3526_prime_2048","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 2048`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 14.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc3526_prime_3072","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 3072`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 15.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc3526_prime_4096","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 4096`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 16.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc3526_prime_6144","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 6144`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 17.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"get_rfc3526_prime_8192","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 8192`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 18.",15,{"inputs":[],"output":{"generics":["bignum","errorstack"],"name":"result"}}],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",15,null],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",16,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"neg","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bignum"}}],[0,"cms","openssl","SMIME implementation using CMS",null,null],[3,"CmsContentInfo","openssl::cms","High level CMS wrapper",null,null],[3,"CmsContentInfoRef","","Reference to [`CMSContentInfo`]",null,null],[11,"from_ptr","","",17,null],[11,"as_ptr","","",17,null],[11,"drop","","",17,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cmscontentinforef"}}],[11,"deref_mut","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cmscontentinforef"}}],[11,"borrow","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cmscontentinforef"}}],[11,"as_ref","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cmscontentinforef"}}],[11,"decrypt","","Given the sender's private key, `pkey` and the recipient's certificiate, `cert`, decrypt the data in `self`.",18,{"inputs":[{"name":"self"},{"name":"pkeyref"},{"name":"x509"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"smime_read_cms","","Parses a smime formatted `vec` of bytes into a `CmsContentInfo`.",17,null],[0,"conf","openssl","Interface for processing OpenSSL configuration files.",null,null],[3,"ConfMethod","openssl::conf","",null,null],[3,"Conf","","",null,null],[3,"ConfRef","","",null,null],[11,"default","","Retrieve handle to the default OpenSSL configuration file processing function.",19,{"inputs":[],"output":{"name":"confmethod"}}],[11,"from_ptr","","Construct from raw pointer.",19,null],[11,"as_ptr","","Convert to raw pointer.",19,null],[11,"from_ptr","","",20,null],[11,"as_ptr","","",20,null],[11,"drop","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"confref"}}],[11,"deref_mut","","",20,{"inputs":[{"name":"self"}],"output":{"name":"confref"}}],[11,"borrow","","",20,{"inputs":[{"name":"self"}],"output":{"name":"confref"}}],[11,"as_ref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"confref"}}],[11,"new","","Create a configuration parser.",20,{"inputs":[{"name":"confmethod"}],"output":{"generics":["conf","errorstack"],"name":"result"}}],[0,"dh","openssl","",null,null],[3,"Dh","openssl::dh","",null,null],[3,"DhRef","","",null,null],[11,"from_ptr","","",21,null],[11,"as_ptr","","",21,null],[11,"drop","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"dhref"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"self"}],"output":{"name":"dhref"}}],[11,"borrow","","",21,{"inputs":[{"name":"self"}],"output":{"name":"dhref"}}],[11,"as_ref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"dhref"}}],[11,"to_pem","","Serializes this value to PEM.",22,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"to_der","","Serializes this value to DER.",22,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"from_params","","",21,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"generics":["dh","errorstack"],"name":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",21,null],[11,"from_der","","Deserializes a value from DER-formatted data.",21,null],[0,"dsa","openssl","Digital Signatures",null,null],[3,"Dsa","openssl::dsa","Object representing DSA keys.",null,null],[3,"DsaRef","","Reference to [`Dsa`].",null,null],[11,"from_ptr","","",23,null],[11,"as_ptr","","",23,null],[11,"drop","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"dsaref"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"self"}],"output":{"name":"dsaref"}}],[11,"borrow","","",23,{"inputs":[{"name":"self"}],"output":{"name":"dsaref"}}],[11,"as_ref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"dsaref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",24,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",24,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",24,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_der","","Serializes the private key to DER.",24,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",24,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"size","","Returns the maximum size of the signature output by `self` in bytes.  Returns None if the keys are uninitialized.",24,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"p","","Returns the DSA prime parameter of `self`.",24,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"q","","Returns the DSA sub-prime parameter of `self`.",24,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"g","","Returns the DSA base parameter of `self`.",24,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"has_public_key","","Returns whether the DSA includes a public key, used to confirm the authenticity of the message.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_private_key","","Returns whether the DSA includes a private key, used to prove the authenticity of a message.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"generate","","Generate a DSA key pair.",23,{"inputs":[{"name":"u32"}],"output":{"generics":["dsa","errorstack"],"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",23,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",23,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",23,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",23,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",23,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",23,null],[11,"private_key_from_pem_cb","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"ec","openssl","Elliptic Curve",null,null],[3,"PointConversionForm","openssl::ec","Compressed or Uncompressed conversion",null,null],[3,"Asn1Flag","","Named Curve or Explicit",null,null],[3,"EcGroup","","Describes the curve",null,null],[3,"EcGroupRef","","Reference to [`EcGroup`]",null,null],[3,"EcPoint","","Represents a point on the curve",null,null],[3,"EcPointRef","","Reference to [`EcPoint`]",null,null],[3,"EcKey","","Public and optional Private key on the given curve",null,null],[3,"EcKeyRef","","Reference to [`EcKey`]",null,null],[3,"EcKeyBuilder","","Builder pattern for key generation",null,null],[3,"EcKeyBuilderRef","","Reference to [`EcKeyBuilder`]",null,null],[17,"POINT_CONVERSION_COMPRESSED","","Compressed conversion from point value (Default)",null,null],[17,"POINT_CONVERSION_UNCOMPRESSED","","Uncompressed conversion from point value (Binary curve default)",null,null],[17,"POINT_CONVERSION_HYBRID","","Performs both compressed and uncompressed conversions",null,null],[17,"EXPLICIT_CURVE","","Curve defined using polynomial parameters",null,null],[17,"NAMED_CURVE","","Standard Curves",null,null],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"pointconversionform"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"asn1flag"}}],[11,"from_ptr","","",27,null],[11,"as_ptr","","",27,null],[11,"drop","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",27,{"inputs":[{"name":"self"}],"output":{"name":"ecgroupref"}}],[11,"deref_mut","","",27,{"inputs":[{"name":"self"}],"output":{"name":"ecgroupref"}}],[11,"borrow","","",27,{"inputs":[{"name":"self"}],"output":{"name":"ecgroupref"}}],[11,"as_ref","","",27,{"inputs":[{"name":"self"}],"output":{"name":"ecgroupref"}}],[11,"from_curve_name","","Returns the group of a standard named curve.",27,{"inputs":[{"name":"nid"}],"output":{"generics":["ecgroup","errorstack"],"name":"result"}}],[11,"components_gfp","","Places the components of a curve over a prime field in the provided `BigNum`s. The components make up the formula `y^2 mod p = x^3 + ax + b mod p`.",28,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"components_gf2m","","Places the components of a curve over a binary field in the provided `BigNum`s. The components make up the formula `y^2 + xy = x^3 + ax^2 + b`.",28,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"degree","","Returns the degree of the curve.",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"order","","Places the order of the curve in the provided `BigNum`.",28,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a named curve or must be explicitly parameterized.",28,{"inputs":[{"name":"self"},{"name":"asn1flag"}],"output":null}],[11,"from_ptr","","",29,null],[11,"as_ptr","","",29,null],[11,"drop","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"ecpointref"}}],[11,"deref_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"ecpointref"}}],[11,"borrow","","",29,{"inputs":[{"name":"self"}],"output":{"name":"ecpointref"}}],[11,"as_ref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"ecpointref"}}],[11,"add","","Computes `a + b`, storing the result in `self`.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"ecpointref"},{"name":"ecpointref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mul","","Computes `q * m`, storing the result in `self`.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"ecpointref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in `self`.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumref"},{"name":"ecpointref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"invert","","Inverts `self`.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"to_bytes","","Serializes the point to a binary representation.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"pointconversionform"},{"name":"bignumcontextref"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"eq","","Determines if this point is equal to another.",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"ecpointref"},{"name":"bignumcontextref"}],"output":{"generics":["bool","errorstack"],"name":"result"}}],[11,"affine_coordinates_gfp","","Place affine coordinates of a curve over a prime field in the provided `x` and `y` `BigNum`s",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"affine_coordinates_gf2m","","Place affine coordinates of a curve over a binary field in the provided `x` and `y` `BigNum`s",30,{"inputs":[{"name":"self"},{"name":"ecgroupref"},{"name":"bignumref"},{"name":"bignumref"},{"name":"bignumcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"new","","Creates a new point on the specified curve.",29,{"inputs":[{"name":"ecgroupref"}],"output":{"generics":["ecpoint","errorstack"],"name":"result"}}],[11,"from_bytes","","Creates point from a binary representation",29,null],[11,"from_ptr","","",31,null],[11,"as_ptr","","",31,null],[11,"drop","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckeyref"}}],[11,"deref_mut","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckeyref"}}],[11,"borrow","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckeyref"}}],[11,"as_ref","","",31,{"inputs":[{"name":"self"}],"output":{"name":"eckeyref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",32,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",32,null],[11,"private_key_to_der","","Serializes the private key to DER.",32,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"group","","Return [`EcGroup`] of the `EcKey`",32,{"inputs":[{"name":"self"}],"output":{"generics":["ecgroupref"],"name":"option"}}],[11,"public_key","","Return [`EcPoint`] associated with the public key",32,{"inputs":[{"name":"self"}],"output":{"generics":["ecpointref"],"name":"option"}}],[11,"private_key","","Return [`EcPoint`] associated with the private key",32,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"check_key","","Checks the key for validity.",32,{"inputs":[{"name":"self"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"to_owned","","Create a copy of the `EcKey` to allow modification",32,{"inputs":[{"name":"self"}],"output":{"generics":["eckey","errorstack"],"name":"result"}}],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",31,{"inputs":[{"name":"nid"}],"output":{"generics":["eckey","errorstack"],"name":"result"}}],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the associated `EcPoint`, public_key.",31,{"inputs":[{"name":"ecgroupref"},{"name":"ecpointref"}],"output":{"generics":["eckey","errorstack"],"name":"result"}}],[11,"generate","","Generates a new public/private key pair on the specified curve.",31,{"inputs":[{"name":"ecgroupref"}],"output":{"generics":["eckey","errorstack"],"name":"result"}}],[11,"new_by_curve_name","","",31,{"inputs":[{"name":"nid"}],"output":{"generics":["eckey","errorstack"],"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",31,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",31,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",31,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",31,null],[11,"from_ptr","","",33,null],[11,"as_ptr","","",33,null],[11,"drop","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"eckeybuilderref"}}],[11,"deref_mut","","",33,{"inputs":[{"name":"self"}],"output":{"name":"eckeybuilderref"}}],[11,"borrow","","",33,{"inputs":[{"name":"self"}],"output":{"name":"eckeybuilderref"}}],[11,"as_ref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"eckeybuilderref"}}],[11,"new","","Creates an empty `EcKeyBuilder` to be chained with additonal methods",33,{"inputs":[],"output":{"generics":["eckeybuilder","errorstack"],"name":"result"}}],[11,"build","","Consume the `EcKeyBuilder` and return [`EcKey`]",33,{"inputs":[{"name":"self"}],"output":{"name":"eckey"}}],[11,"set_group","","Set the [`EcGroup`] explicitly",34,{"inputs":[{"name":"self"},{"name":"ecgroupref"}],"output":{"generics":["eckeybuilderref","errorstack"],"name":"result"}}],[11,"set_public_key","","Set public key to given `EcPoint`",34,{"inputs":[{"name":"self"},{"name":"ecpointref"}],"output":{"generics":["eckeybuilderref","errorstack"],"name":"result"}}],[11,"generate_key","","Generate public and private keys.",34,{"inputs":[{"name":"self"}],"output":{"generics":["eckeybuilderref","errorstack"],"name":"result"}}],[11,"set_public_key_affine_coordinates","","Sets the public key based on affine coordinates.",34,{"inputs":[{"name":"self"},{"name":"bignumref"},{"name":"bignumref"}],"output":{"generics":["eckeybuilderref","errorstack"],"name":"result"}}],[11,"set_private_key","","Sets the private key.",34,{"inputs":[{"name":"self"},{"name":"bignumref"}],"output":{"generics":["eckeybuilderref","errorstack"],"name":"result"}}],[0,"error","openssl","Errors returned by OpenSSL library.",null,null],[3,"ErrorStack","openssl::error","Collection of [`Error`]s from OpenSSL.",null,null],[3,"Error","","An error reported from OpenSSL.",null,null],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"errorstack"}}],[11,"get","","Returns the contents of the OpenSSL error stack.",35,{"inputs":[],"output":{"name":"errorstack"}}],[11,"errors","","Returns the errors in the stack.",35,null],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",35,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"get","","Returns the first error on the OpenSSL error stack.",36,{"inputs":[],"output":{"generics":["error"],"name":"option"}}],[11,"code","","Returns the raw OpenSSL error code for this error.",36,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"library","","Returns the name of the library reporting the error, if available.",36,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"function","","Returns the name of the function reporting the error.",36,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"reason","","Returns the reason for the error.",36,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"file","","Returns the name of the source file which encountered the error.",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","Returns the line in the source file which encountered the error.",36,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"data","","Returns additional data describing the error.",36,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"ex_data","openssl","",null,null],[3,"Index","openssl::ex_data","A slot in a type's \"extra data\" structure.",null,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"index"}}],[11,"from_raw","","",37,{"inputs":[{"name":"c_int"}],"output":{"name":"index"}}],[11,"as_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[0,"hash","openssl","",null,null],[3,"MessageDigest","openssl::hash","",null,null],[3,"Hasher","","Provides message digest (hash) computation.",null,null],[3,"DigestBytes","","The resulting bytes of a digest.",null,null],[5,"hash","","",null,null],[5,"hash2","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"messagedigest"}}],[11,"md5","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha1","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha224","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha256","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha384","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha512","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"ripemd160","","",38,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"as_ptr","","",38,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",39,{"inputs":[{"name":"messagedigest"}],"output":{"generics":["hasher","errorstack"],"name":"result"}}],[11,"update","","Feeds data into the hasher.",39,null],[11,"finish","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"finish2","","Returns the hash of the data written and resets the hasher.",39,{"inputs":[{"name":"self"}],"output":{"generics":["digestbytes","errorstack"],"name":"result"}}],[11,"write","","",39,null],[11,"flush","","",39,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"hasher"}}],[11,"drop","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"digestbytes"}}],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"as_ref","","",40,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"memcmp","openssl","Utilities to safely compare cryptographic values.",null,null],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"nid","openssl","A collection of numerical identifiers for OpenSSL objects.",null,null],[3,"Nid","openssl::nid","A numerical identifier for an OpenSSL object.",null,null],[17,"UNDEF","","",null,null],[17,"ITU_T","","",null,null],[17,"CCITT","","",null,null],[17,"ISO","","",null,null],[17,"JOINT_ISO_ITU_T","","",null,null],[17,"JOINT_ISO_CCITT","","",null,null],[17,"MEMBER_BODY","","",null,null],[17,"IDENTIFIED_ORGANIZATION","","",null,null],[17,"HMAC_MD5","","",null,null],[17,"HMAC_SHA1","","",null,null],[17,"CERTICOM_ARC","","",null,null],[17,"INTERNATIONAL_ORGANIZATIONS","","",null,null],[17,"WAP","","",null,null],[17,"WAP_WSG","","",null,null],[17,"SELECTED_ATTRIBUTE_TYPES","","",null,null],[17,"CLEARANCE","","",null,null],[17,"ISO_US","","",null,null],[17,"X9_57","","",null,null],[17,"X9CM","","",null,null],[17,"DSA","","",null,null],[17,"DSAWITHSHA1","","",null,null],[17,"ANSI_X9_62","","",null,null],[17,"X9_62_PRIME_FIELD","","",null,null],[17,"X9_62_CHARACTERISTIC_TWO_FIELD","","",null,null],[17,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",null,null],[17,"X9_62_ONBASIS","","",null,null],[17,"X9_62_TPBASIS","","",null,null],[17,"X9_62_PPBASIS","","",null,null],[17,"X9_62_ID_ECPUBLICKEY","","",null,null],[17,"X9_62_C2PNB163V1","","",null,null],[17,"X9_62_C2PNB163V2","","",null,null],[17,"X9_62_C2PNB163V3","","",null,null],[17,"X9_62_C2PNB176V1","","",null,null],[17,"X9_62_C2TNB191V1","","",null,null],[17,"X9_62_C2TNB191V2","","",null,null],[17,"X9_62_C2TNB191V3","","",null,null],[17,"X9_62_C2ONB191V4","","",null,null],[17,"X9_62_C2ONB191V5","","",null,null],[17,"X9_62_C2PNB208W1","","",null,null],[17,"X9_62_C2TNB239V1","","",null,null],[17,"X9_62_C2TNB239V2","","",null,null],[17,"X9_62_C2TNB239V3","","",null,null],[17,"X9_62_C2ONB239V4","","",null,null],[17,"X9_62_C2ONB239V5","","",null,null],[17,"X9_62_C2PNB272W1","","",null,null],[17,"X9_62_C2PNB304W1","","",null,null],[17,"X9_62_C2TNB359V1","","",null,null],[17,"X9_62_C2PNB368W1","","",null,null],[17,"X9_62_C2TNB431R1","","",null,null],[17,"X9_62_PRIME192V1","","",null,null],[17,"X9_62_PRIME192V2","","",null,null],[17,"X9_62_PRIME192V3","","",null,null],[17,"X9_62_PRIME239V1","","",null,null],[17,"X9_62_PRIME239V2","","",null,null],[17,"X9_62_PRIME239V3","","",null,null],[17,"X9_62_PRIME256V1","","",null,null],[17,"ECDSA_WITH_SHA1","","",null,null],[17,"ECDSA_WITH_RECOMMENDED","","",null,null],[17,"ECDSA_WITH_SPECIFIED","","",null,null],[17,"ECDSA_WITH_SHA224","","",null,null],[17,"ECDSA_WITH_SHA256","","",null,null],[17,"ECDSA_WITH_SHA384","","",null,null],[17,"ECDSA_WITH_SHA512","","",null,null],[17,"SECP112R1","","",null,null],[17,"SECP112R2","","",null,null],[17,"SECP128R1","","",null,null],[17,"SECP128R2","","",null,null],[17,"SECP160K1","","",null,null],[17,"SECP160R1","","",null,null],[17,"SECP160R2","","",null,null],[17,"SECP192K1","","",null,null],[17,"SECP224K1","","",null,null],[17,"SECP224R1","","",null,null],[17,"SECP256K1","","",null,null],[17,"SECP384R1","","",null,null],[17,"SECP521R1","","",null,null],[17,"SECT113R1","","",null,null],[17,"SECT113R2","","",null,null],[17,"SECT131R1","","",null,null],[17,"SECT131R2","","",null,null],[17,"SECT163K1","","",null,null],[17,"SECT163R1","","",null,null],[17,"SECT163R2","","",null,null],[17,"SECT193R1","","",null,null],[17,"SECT193R2","","",null,null],[17,"SECT233K1","","",null,null],[17,"SECT233R1","","",null,null],[17,"SECT239K1","","",null,null],[17,"SECT283K1","","",null,null],[17,"SECT283R1","","",null,null],[17,"SECT409K1","","",null,null],[17,"SECT409R1","","",null,null],[17,"SECT571K1","","",null,null],[17,"SECT571R1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS3","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS4","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS5","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS6","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS7","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS8","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS9","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS10","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS11","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS12","","",null,null],[17,"CAST5_CBC","","",null,null],[17,"CAST5_ECB","","",null,null],[17,"CAST5_CFB64","","",null,null],[17,"CAST5_OFB64","","",null,null],[17,"PBEWITHMD5ANDCAST5_CBC","","",null,null],[17,"ID_PASSWORDBASEDMAC","","",null,null],[17,"ID_DHBASEDMAC","","",null,null],[17,"RSADSI","","",null,null],[17,"PKCS","","",null,null],[17,"PKCS1","","",null,null],[17,"RSAENCRYPTION","","",null,null],[17,"MD2WITHRSAENCRYPTION","","",null,null],[17,"MD4WITHRSAENCRYPTION","","",null,null],[17,"MD5WITHRSAENCRYPTION","","",null,null],[17,"SHA1WITHRSAENCRYPTION","","",null,null],[17,"RSAESOAEP","","",null,null],[17,"MGF1","","",null,null],[17,"RSASSAPSS","","",null,null],[17,"SHA256WITHRSAENCRYPTION","","",null,null],[17,"SHA384WITHRSAENCRYPTION","","",null,null],[17,"SHA512WITHRSAENCRYPTION","","",null,null],[17,"SHA224WITHRSAENCRYPTION","","",null,null],[17,"PKCS3","","",null,null],[17,"DHKEYAGREEMENT","","",null,null],[17,"PKCS5","","",null,null],[17,"PBEWITHMD2ANDDES_CBC","","",null,null],[17,"PBEWITHMD5ANDDES_CBC","","",null,null],[17,"PBEWITHMD2ANDRC2_CBC","","",null,null],[17,"PBEWITHMD5ANDRC2_CBC","","",null,null],[17,"PBEWITHSHA1ANDDES_CBC","","",null,null],[17,"PBEWITHSHA1ANDRC2_CBC","","",null,null],[17,"ID_PBKDF2","","",null,null],[17,"PBES2","","",null,null],[17,"PBMAC1","","",null,null],[17,"PKCS7","","",null,null],[17,"PKCS7_DATA","","",null,null],[17,"PKCS7_SIGNED","","",null,null],[17,"PKCS7_ENVELOPED","","",null,null],[17,"PKCS7_SIGNEDANDENVELOPED","","",null,null],[17,"PKCS7_DIGEST","","",null,null],[17,"PKCS7_ENCRYPTED","","",null,null],[17,"PKCS9","","",null,null],[17,"PKCS9_EMAILADDRESS","","",null,null],[17,"PKCS9_UNSTRUCTUREDNAME","","",null,null],[17,"PKCS9_CONTENTTYPE","","",null,null],[17,"PKCS9_MESSAGEDIGEST","","",null,null],[17,"PKCS9_SIGNINGTIME","","",null,null],[17,"PKCS9_COUNTERSIGNATURE","","",null,null],[17,"PKCS9_CHALLENGEPASSWORD","","",null,null],[17,"PKCS9_UNSTRUCTUREDADDRESS","","",null,null],[17,"PKCS9_EXTCERTATTRIBUTES","","",null,null],[17,"EXT_REQ","","",null,null],[17,"SMIMECAPABILITIES","","",null,null],[17,"SMIME","","",null,null],[17,"ID_SMIME_MOD","","",null,null],[17,"ID_SMIME_CT","","",null,null],[17,"ID_SMIME_AA","","",null,null],[17,"ID_SMIME_ALG","","",null,null],[17,"ID_SMIME_CD","","",null,null],[17,"ID_SMIME_SPQ","","",null,null],[17,"ID_SMIME_CTI","","",null,null],[17,"ID_SMIME_MOD_CMS","","",null,null],[17,"ID_SMIME_MOD_ESS","","",null,null],[17,"ID_SMIME_MOD_OID","","",null,null],[17,"ID_SMIME_MOD_MSG_V3","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",null,null],[17,"ID_SMIME_CT_RECEIPT","","",null,null],[17,"ID_SMIME_CT_AUTHDATA","","",null,null],[17,"ID_SMIME_CT_PUBLISHCERT","","",null,null],[17,"ID_SMIME_CT_TSTINFO","","",null,null],[17,"ID_SMIME_CT_TDTINFO","","",null,null],[17,"ID_SMIME_CT_CONTENTINFO","","",null,null],[17,"ID_SMIME_CT_DVCSREQUESTDATA","","",null,null],[17,"ID_SMIME_CT_DVCSRESPONSEDATA","","",null,null],[17,"ID_SMIME_CT_COMPRESSEDDATA","","",null,null],[17,"ID_CT_ASCIITEXTWITHCRLF","","",null,null],[17,"ID_SMIME_AA_RECEIPTREQUEST","","",null,null],[17,"ID_SMIME_AA_SECURITYLABEL","","",null,null],[17,"ID_SMIME_AA_MLEXPANDHISTORY","","",null,null],[17,"ID_SMIME_AA_CONTENTHINT","","",null,null],[17,"ID_SMIME_AA_MSGSIGDIGEST","","",null,null],[17,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",null,null],[17,"ID_SMIME_AA_CONTENTIDENTIFIER","","",null,null],[17,"ID_SMIME_AA_MACVALUE","","",null,null],[17,"ID_SMIME_AA_EQUIVALENTLABELS","","",null,null],[17,"ID_SMIME_AA_CONTENTREFERENCE","","",null,null],[17,"ID_SMIME_AA_ENCRYPKEYPREF","","",null,null],[17,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",null,null],[17,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",null,null],[17,"ID_SMIME_AA_TIMESTAMPTOKEN","","",null,null],[17,"ID_SMIME_AA_ETS_SIGPOLICYID","","",null,null],[17,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERATTR","","",null,null],[17,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",null,null],[17,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",null,null],[17,"ID_SMIME_AA_ETS_CERTVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",null,null],[17,"ID_SMIME_AA_SIGNATURETYPE","","",null,null],[17,"ID_SMIME_AA_DVCS_DVC","","",null,null],[17,"ID_SMIME_ALG_ESDHWITH3DES","","",null,null],[17,"ID_SMIME_ALG_ESDHWITHRC2","","",null,null],[17,"ID_SMIME_ALG_3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_RC2WRAP","","",null,null],[17,"ID_SMIME_ALG_ESDH","","",null,null],[17,"ID_SMIME_ALG_CMS3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_CMSRC2WRAP","","",null,null],[17,"ID_ALG_PWRI_KEK","","",null,null],[17,"ID_SMIME_CD_LDAP","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_URI","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",null,null],[17,"FRIENDLYNAME","","",null,null],[17,"LOCALKEYID","","",null,null],[17,"MS_CSP_NAME","","",null,null],[17,"LOCALKEYSET","","",null,null],[17,"X509CERTIFICATE","","",null,null],[17,"SDSICERTIFICATE","","",null,null],[17,"X509CRL","","",null,null],[17,"PBE_WITHSHA1AND128BITRC4","","",null,null],[17,"PBE_WITHSHA1AND40BITRC4","","",null,null],[17,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND128BITRC2_CBC","","",null,null],[17,"PBE_WITHSHA1AND40BITRC2_CBC","","",null,null],[17,"KEYBAG","","",null,null],[17,"PKCS8SHROUDEDKEYBAG","","",null,null],[17,"CERTBAG","","",null,null],[17,"CRLBAG","","",null,null],[17,"SECRETBAG","","",null,null],[17,"SAFECONTENTSBAG","","",null,null],[17,"MD2","","",null,null],[17,"MD4","","",null,null],[17,"MD5","","",null,null],[17,"MD5_SHA1","","",null,null],[17,"HMACWITHMD5","","",null,null],[17,"HMACWITHSHA1","","",null,null],[17,"HMACWITHSHA224","","",null,null],[17,"HMACWITHSHA256","","",null,null],[17,"HMACWITHSHA384","","",null,null],[17,"HMACWITHSHA512","","",null,null],[17,"RC2_CBC","","",null,null],[17,"RC2_ECB","","",null,null],[17,"RC2_CFB64","","",null,null],[17,"RC2_OFB64","","",null,null],[17,"RC2_40_CBC","","",null,null],[17,"RC2_64_CBC","","",null,null],[17,"RC4","","",null,null],[17,"RC4_40","","",null,null],[17,"DES_EDE3_CBC","","",null,null],[17,"RC5_CBC","","",null,null],[17,"RC5_ECB","","",null,null],[17,"RC5_CFB64","","",null,null],[17,"RC5_OFB64","","",null,null],[17,"MS_EXT_REQ","","",null,null],[17,"MS_CODE_IND","","",null,null],[17,"MS_CODE_COM","","",null,null],[17,"MS_CTL_SIGN","","",null,null],[17,"MS_SGC","","",null,null],[17,"MS_EFS","","",null,null],[17,"MS_SMARTCARD_LOGIN","","",null,null],[17,"MS_UPN","","",null,null],[17,"IDEA_CBC","","",null,null],[17,"IDEA_ECB","","",null,null],[17,"IDEA_CFB64","","",null,null],[17,"IDEA_OFB64","","",null,null],[17,"BF_CBC","","",null,null],[17,"BF_ECB","","",null,null],[17,"BF_CFB64","","",null,null],[17,"BF_OFB64","","",null,null],[17,"ID_PKIX","","",null,null],[17,"ID_PKIX_MOD","","",null,null],[17,"ID_PE","","",null,null],[17,"ID_QT","","",null,null],[17,"ID_KP","","",null,null],[17,"ID_IT","","",null,null],[17,"ID_PKIP","","",null,null],[17,"ID_ALG","","",null,null],[17,"ID_CMC","","",null,null],[17,"ID_ON","","",null,null],[17,"ID_PDA","","",null,null],[17,"ID_ACA","","",null,null],[17,"ID_QCS","","",null,null],[17,"ID_CCT","","",null,null],[17,"ID_PPL","","",null,null],[17,"ID_AD","","",null,null],[17,"ID_PKIX1_EXPLICIT_88","","",null,null],[17,"ID_PKIX1_IMPLICIT_88","","",null,null],[17,"ID_PKIX1_EXPLICIT_93","","",null,null],[17,"ID_PKIX1_IMPLICIT_93","","",null,null],[17,"ID_MOD_CRMF","","",null,null],[17,"ID_MOD_CMC","","",null,null],[17,"ID_MOD_KEA_PROFILE_88","","",null,null],[17,"ID_MOD_KEA_PROFILE_93","","",null,null],[17,"ID_MOD_CMP","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_88","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_93","","",null,null],[17,"ID_MOD_ATTRIBUTE_CERT","","",null,null],[17,"ID_MOD_TIMESTAMP_PROTOCOL","","",null,null],[17,"ID_MOD_OCSP","","",null,null],[17,"ID_MOD_DVCS","","",null,null],[17,"ID_MOD_CMP2000","","",null,null],[17,"INFO_ACCESS","","",null,null],[17,"BIOMETRICINFO","","",null,null],[17,"QCSTATEMENTS","","",null,null],[17,"AC_AUDITENTITY","","",null,null],[17,"AC_TARGETING","","",null,null],[17,"AACONTROLS","","",null,null],[17,"SBGP_IPADDRBLOCK","","",null,null],[17,"SBGP_AUTONOMOUSSYSNUM","","",null,null],[17,"SBGP_ROUTERIDENTIFIER","","",null,null],[17,"AC_PROXYING","","",null,null],[17,"SINFO_ACCESS","","",null,null],[17,"PROXYCERTINFO","","",null,null],[17,"ID_QT_CPS","","",null,null],[17,"ID_QT_UNOTICE","","",null,null],[17,"TEXTNOTICE","","",null,null],[17,"SERVER_AUTH","","",null,null],[17,"CLIENT_AUTH","","",null,null],[17,"CODE_SIGN","","",null,null],[17,"EMAIL_PROTECT","","",null,null],[17,"IPSECENDSYSTEM","","",null,null],[17,"IPSECTUNNEL","","",null,null],[17,"IPSECUSER","","",null,null],[17,"TIME_STAMP","","",null,null],[17,"OCSP_SIGN","","",null,null],[17,"DVCS","","",null,null],[17,"ID_IT_CAPROTENCCERT","","",null,null],[17,"ID_IT_SIGNKEYPAIRTYPES","","",null,null],[17,"ID_IT_ENCKEYPAIRTYPES","","",null,null],[17,"ID_IT_PREFERREDSYMMALG","","",null,null],[17,"ID_IT_CAKEYUPDATEINFO","","",null,null],[17,"ID_IT_CURRENTCRL","","",null,null],[17,"ID_IT_UNSUPPORTEDOIDS","","",null,null],[17,"ID_IT_SUBSCRIPTIONREQUEST","","",null,null],[17,"ID_IT_SUBSCRIPTIONRESPONSE","","",null,null],[17,"ID_IT_KEYPAIRPARAMREQ","","",null,null],[17,"ID_IT_KEYPAIRPARAMREP","","",null,null],[17,"ID_IT_REVPASSPHRASE","","",null,null],[17,"ID_IT_IMPLICITCONFIRM","","",null,null],[17,"ID_IT_CONFIRMWAITTIME","","",null,null],[17,"ID_IT_ORIGPKIMESSAGE","","",null,null],[17,"ID_IT_SUPPLANGTAGS","","",null,null],[17,"ID_REGCTRL","","",null,null],[17,"ID_REGINFO","","",null,null],[17,"ID_REGCTRL_REGTOKEN","","",null,null],[17,"ID_REGCTRL_AUTHENTICATOR","","",null,null],[17,"ID_REGCTRL_PKIPUBLICATIONINFO","","",null,null],[17,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",null,null],[17,"ID_REGCTRL_OLDCERTID","","",null,null],[17,"ID_REGCTRL_PROTOCOLENCRKEY","","",null,null],[17,"ID_REGINFO_UTF8PAIRS","","",null,null],[17,"ID_REGINFO_CERTREQ","","",null,null],[17,"ID_ALG_DES40","","",null,null],[17,"ID_ALG_NOSIGNATURE","","",null,null],[17,"ID_ALG_DH_SIG_HMAC_SHA1","","",null,null],[17,"ID_ALG_DH_POP","","",null,null],[17,"ID_CMC_STATUSINFO","","",null,null],[17,"ID_CMC_IDENTIFICATION","","",null,null],[17,"ID_CMC_IDENTITYPROOF","","",null,null],[17,"ID_CMC_DATARETURN","","",null,null],[17,"ID_CMC_TRANSACTIONID","","",null,null],[17,"ID_CMC_SENDERNONCE","","",null,null],[17,"ID_CMC_RECIPIENTNONCE","","",null,null],[17,"ID_CMC_ADDEXTENSIONS","","",null,null],[17,"ID_CMC_ENCRYPTEDPOP","","",null,null],[17,"ID_CMC_DECRYPTEDPOP","","",null,null],[17,"ID_CMC_LRAPOPWITNESS","","",null,null],[17,"ID_CMC_GETCERT","","",null,null],[17,"ID_CMC_GETCRL","","",null,null],[17,"ID_CMC_REVOKEREQUEST","","",null,null],[17,"ID_CMC_REGINFO","","",null,null],[17,"ID_CMC_RESPONSEINFO","","",null,null],[17,"ID_CMC_QUERYPENDING","","",null,null],[17,"ID_CMC_POPLINKRANDOM","","",null,null],[17,"ID_CMC_POPLINKWITNESS","","",null,null],[17,"ID_CMC_CONFIRMCERTACCEPTANCE","","",null,null],[17,"ID_ON_PERSONALDATA","","",null,null],[17,"ID_ON_PERMANENTIDENTIFIER","","",null,null],[17,"ID_PDA_DATEOFBIRTH","","",null,null],[17,"ID_PDA_PLACEOFBIRTH","","",null,null],[17,"ID_PDA_GENDER","","",null,null],[17,"ID_PDA_COUNTRYOFCITIZENSHIP","","",null,null],[17,"ID_PDA_COUNTRYOFRESIDENCE","","",null,null],[17,"ID_ACA_AUTHENTICATIONINFO","","",null,null],[17,"ID_ACA_ACCESSIDENTITY","","",null,null],[17,"ID_ACA_CHARGINGIDENTITY","","",null,null],[17,"ID_ACA_GROUP","","",null,null],[17,"ID_ACA_ROLE","","",null,null],[17,"ID_ACA_ENCATTRS","","",null,null],[17,"ID_QCS_PKIXQCSYNTAX_V1","","",null,null],[17,"ID_CCT_CRS","","",null,null],[17,"ID_CCT_PKIDATA","","",null,null],[17,"ID_CCT_PKIRESPONSE","","",null,null],[17,"ID_PPL_ANYLANGUAGE","","",null,null],[17,"ID_PPL_INHERITALL","","",null,null],[17,"INDEPENDENT","","",null,null],[17,"AD_OCSP","","",null,null],[17,"AD_CA_ISSUERS","","",null,null],[17,"AD_TIMESTAMPING","","",null,null],[17,"AD_DVCS","","",null,null],[17,"CAREPOSITORY","","",null,null],[17,"ID_PKIX_OCSP_BASIC","","",null,null],[17,"ID_PKIX_OCSP_NONCE","","",null,null],[17,"ID_PKIX_OCSP_CRLID","","",null,null],[17,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",null,null],[17,"ID_PKIX_OCSP_NOCHECK","","",null,null],[17,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",null,null],[17,"ID_PKIX_OCSP_SERVICELOCATOR","","",null,null],[17,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",null,null],[17,"ID_PKIX_OCSP_VALID","","",null,null],[17,"ID_PKIX_OCSP_PATH","","",null,null],[17,"ID_PKIX_OCSP_TRUSTROOT","","",null,null],[17,"ALGORITHM","","",null,null],[17,"MD5WITHRSA","","",null,null],[17,"DES_ECB","","",null,null],[17,"DES_CBC","","",null,null],[17,"DES_OFB64","","",null,null],[17,"DES_CFB64","","",null,null],[17,"RSASIGNATURE","","",null,null],[17,"DSA_2","","",null,null],[17,"DSAWITHSHA","","",null,null],[17,"SHAWITHRSAENCRYPTION","","",null,null],[17,"DES_EDE_ECB","","",null,null],[17,"DES_EDE3_ECB","","",null,null],[17,"DES_EDE_CBC","","",null,null],[17,"DES_EDE_CFB64","","",null,null],[17,"DES_EDE3_CFB64","","",null,null],[17,"DES_EDE_OFB64","","",null,null],[17,"DES_EDE3_OFB64","","",null,null],[17,"DESX_CBC","","",null,null],[17,"SHA","","",null,null],[17,"SHA1","","",null,null],[17,"DSAWITHSHA1_2","","",null,null],[17,"SHA1WITHRSA","","",null,null],[17,"RIPEMD160","","",null,null],[17,"RIPEMD160WITHRSA","","",null,null],[17,"SXNET","","",null,null],[17,"X500","","",null,null],[17,"X509","","",null,null],[17,"COMMONNAME","","",null,null],[17,"SURNAME","","",null,null],[17,"SERIALNUMBER","","",null,null],[17,"COUNTRYNAME","","",null,null],[17,"LOCALITYNAME","","",null,null],[17,"STATEORPROVINCENAME","","",null,null],[17,"STREETADDRESS","","",null,null],[17,"ORGANIZATIONNAME","","",null,null],[17,"ORGANIZATIONALUNITNAME","","",null,null],[17,"TITLE","","",null,null],[17,"DESCRIPTION","","",null,null],[17,"SEARCHGUIDE","","",null,null],[17,"BUSINESSCATEGORY","","",null,null],[17,"POSTALADDRESS","","",null,null],[17,"POSTALCODE","","",null,null],[17,"POSTOFFICEBOX","","",null,null],[17,"PHYSICALDELIVERYOFFICENAME","","",null,null],[17,"TELEPHONENUMBER","","",null,null],[17,"TELEXNUMBER","","",null,null],[17,"TELETEXTERMINALIDENTIFIER","","",null,null],[17,"FACSIMILETELEPHONENUMBER","","",null,null],[17,"X121ADDRESS","","",null,null],[17,"INTERNATIONALISDNNUMBER","","",null,null],[17,"REGISTEREDADDRESS","","",null,null],[17,"DESTINATIONINDICATOR","","",null,null],[17,"PREFERREDDELIVERYMETHOD","","",null,null],[17,"PRESENTATIONADDRESS","","",null,null],[17,"SUPPORTEDAPPLICATIONCONTEXT","","",null,null],[17,"MEMBER","","",null,null],[17,"OWNER","","",null,null],[17,"ROLEOCCUPANT","","",null,null],[17,"SEEALSO","","",null,null],[17,"USERPASSWORD","","",null,null],[17,"USERCERTIFICATE","","",null,null],[17,"CACERTIFICATE","","",null,null],[17,"AUTHORITYREVOCATIONLIST","","",null,null],[17,"CERTIFICATEREVOCATIONLIST","","",null,null],[17,"CROSSCERTIFICATEPAIR","","",null,null],[17,"NAME","","",null,null],[17,"GIVENNAME","","",null,null],[17,"INITIALS","","",null,null],[17,"GENERATIONQUALIFIER","","",null,null],[17,"X500UNIQUEIDENTIFIER","","",null,null],[17,"DNQUALIFIER","","",null,null],[17,"ENHANCEDSEARCHGUIDE","","",null,null],[17,"PROTOCOLINFORMATION","","",null,null],[17,"DISTINGUISHEDNAME","","",null,null],[17,"UNIQUEMEMBER","","",null,null],[17,"HOUSEIDENTIFIER","","",null,null],[17,"SUPPORTEDALGORITHMS","","",null,null],[17,"DELTAREVOCATIONLIST","","",null,null],[17,"DMDNAME","","",null,null],[17,"PSEUDONYM","","",null,null],[17,"ROLE","","",null,null],[17,"X500ALGORITHMS","","",null,null],[17,"RSA","","",null,null],[17,"MDC2WITHRSA","","",null,null],[17,"MDC2","","",null,null],[17,"ID_CE","","",null,null],[17,"SUBJECT_DIRECTORY_ATTRIBUTES","","",null,null],[17,"SUBJECT_KEY_IDENTIFIER","","",null,null],[17,"KEY_USAGE","","",null,null],[17,"PRIVATE_KEY_USAGE_PERIOD","","",null,null],[17,"SUBJECT_ALT_NAME","","",null,null],[17,"ISSUER_ALT_NAME","","",null,null],[17,"BASIC_CONSTRAINTS","","",null,null],[17,"CRL_NUMBER","","",null,null],[17,"CRL_REASON","","",null,null],[17,"INVALIDITY_DATE","","",null,null],[17,"DELTA_CRL","","",null,null],[17,"ISSUING_DISTRIBUTION_POINT","","",null,null],[17,"CERTIFICATE_ISSUER","","",null,null],[17,"NAME_CONSTRAINTS","","",null,null],[17,"CRL_DISTRIBUTION_POINTS","","",null,null],[17,"CERTIFICATE_POLICIES","","",null,null],[17,"ANY_POLICY","","",null,null],[17,"POLICY_MAPPINGS","","",null,null],[17,"AUTHORITY_KEY_IDENTIFIER","","",null,null],[17,"POLICY_CONSTRAINTS","","",null,null],[17,"EXT_KEY_USAGE","","",null,null],[17,"FRESHEST_CRL","","",null,null],[17,"INHIBIT_ANY_POLICY","","",null,null],[17,"TARGET_INFORMATION","","",null,null],[17,"NO_REV_AVAIL","","",null,null],[17,"ANYEXTENDEDKEYUSAGE","","",null,null],[17,"NETSCAPE","","",null,null],[17,"NETSCAPE_CERT_EXTENSION","","",null,null],[17,"NETSCAPE_DATA_TYPE","","",null,null],[17,"NETSCAPE_CERT_TYPE","","",null,null],[17,"NETSCAPE_BASE_URL","","",null,null],[17,"NETSCAPE_REVOCATION_URL","","",null,null],[17,"NETSCAPE_CA_REVOCATION_URL","","",null,null],[17,"NETSCAPE_RENEWAL_URL","","",null,null],[17,"NETSCAPE_CA_POLICY_URL","","",null,null],[17,"NETSCAPE_SSL_SERVER_NAME","","",null,null],[17,"NETSCAPE_COMMENT","","",null,null],[17,"NETSCAPE_CERT_SEQUENCE","","",null,null],[17,"NS_SGC","","",null,null],[17,"ORG","","",null,null],[17,"DOD","","",null,null],[17,"IANA","","",null,null],[17,"DIRECTORY","","",null,null],[17,"MANAGEMENT","","",null,null],[17,"EXPERIMENTAL","","",null,null],[17,"PRIVATE","","",null,null],[17,"SECURITY","","",null,null],[17,"SNMPV2","","",null,null],[17,"MAIL","","",null,null],[17,"ENTERPRISES","","",null,null],[17,"DCOBJECT","","",null,null],[17,"MIME_MHS","","",null,null],[17,"MIME_MHS_HEADINGS","","",null,null],[17,"MIME_MHS_BODIES","","",null,null],[17,"ID_HEX_PARTIAL_MESSAGE","","",null,null],[17,"ID_HEX_MULTIPART_MESSAGE","","",null,null],[17,"ZLIB_COMPRESSION","","",null,null],[17,"AES_128_ECB","","",null,null],[17,"AES_128_CBC","","",null,null],[17,"AES_128_OFB128","","",null,null],[17,"AES_128_CFB128","","",null,null],[17,"ID_AES128_WRAP","","",null,null],[17,"AES_128_GCM","","",null,null],[17,"AES_128_CCM","","",null,null],[17,"ID_AES128_WRAP_PAD","","",null,null],[17,"AES_192_ECB","","",null,null],[17,"AES_192_CBC","","",null,null],[17,"AES_192_OFB128","","",null,null],[17,"AES_192_CFB128","","",null,null],[17,"ID_AES192_WRAP","","",null,null],[17,"AES_192_GCM","","",null,null],[17,"AES_192_CCM","","",null,null],[17,"ID_AES192_WRAP_PAD","","",null,null],[17,"AES_256_ECB","","",null,null],[17,"AES_256_CBC","","",null,null],[17,"AES_256_OFB128","","",null,null],[17,"AES_256_CFB128","","",null,null],[17,"ID_AES256_WRAP","","",null,null],[17,"AES_256_GCM","","",null,null],[17,"AES_256_CCM","","",null,null],[17,"ID_AES256_WRAP_PAD","","",null,null],[17,"AES_128_CFB1","","",null,null],[17,"AES_192_CFB1","","",null,null],[17,"AES_256_CFB1","","",null,null],[17,"AES_128_CFB8","","",null,null],[17,"AES_192_CFB8","","",null,null],[17,"AES_256_CFB8","","",null,null],[17,"AES_128_CTR","","",null,null],[17,"AES_192_CTR","","",null,null],[17,"AES_256_CTR","","",null,null],[17,"AES_128_XTS","","",null,null],[17,"AES_256_XTS","","",null,null],[17,"DES_CFB1","","",null,null],[17,"DES_CFB8","","",null,null],[17,"DES_EDE3_CFB1","","",null,null],[17,"DES_EDE3_CFB8","","",null,null],[17,"SHA256","","",null,null],[17,"SHA384","","",null,null],[17,"SHA512","","",null,null],[17,"SHA224","","",null,null],[17,"DSA_WITH_SHA224","","",null,null],[17,"DSA_WITH_SHA256","","",null,null],[17,"HOLD_INSTRUCTION_CODE","","",null,null],[17,"HOLD_INSTRUCTION_NONE","","",null,null],[17,"HOLD_INSTRUCTION_CALL_ISSUER","","",null,null],[17,"HOLD_INSTRUCTION_REJECT","","",null,null],[17,"DATA","","",null,null],[17,"PSS","","",null,null],[17,"UCL","","",null,null],[17,"PILOT","","",null,null],[17,"PILOTATTRIBUTETYPE","","",null,null],[17,"PILOTATTRIBUTESYNTAX","","",null,null],[17,"PILOTOBJECTCLASS","","",null,null],[17,"PILOTGROUPS","","",null,null],[17,"IA5STRINGSYNTAX","","",null,null],[17,"CASEIGNOREIA5STRINGSYNTAX","","",null,null],[17,"PILOTOBJECT","","",null,null],[17,"PILOTPERSON","","",null,null],[17,"ACCOUNT","","",null,null],[17,"DOCUMENT","","",null,null],[17,"ROOM","","",null,null],[17,"DOCUMENTSERIES","","",null,null],[17,"DOMAIN","","",null,null],[17,"RFC822LOCALPART","","",null,null],[17,"DNSDOMAIN","","",null,null],[17,"DOMAINRELATEDOBJECT","","",null,null],[17,"FRIENDLYCOUNTRY","","",null,null],[17,"SIMPLESECURITYOBJECT","","",null,null],[17,"PILOTORGANIZATION","","",null,null],[17,"PILOTDSA","","",null,null],[17,"QUALITYLABELLEDDATA","","",null,null],[17,"USERID","","",null,null],[17,"TEXTENCODEDORADDRESS","","",null,null],[17,"RFC822MAILBOX","","",null,null],[17,"INFO","","",null,null],[17,"FAVOURITEDRINK","","",null,null],[17,"ROOMNUMBER","","",null,null],[17,"PHOTO","","",null,null],[17,"USERCLASS","","",null,null],[17,"HOST","","",null,null],[17,"MANAGER","","",null,null],[17,"DOCUMENTIDENTIFIER","","",null,null],[17,"DOCUMENTTITLE","","",null,null],[17,"DOCUMENTVERSION","","",null,null],[17,"DOCUMENTAUTHOR","","",null,null],[17,"DOCUMENTLOCATION","","",null,null],[17,"HOMETELEPHONENUMBER","","",null,null],[17,"SECRETARY","","",null,null],[17,"OTHERMAILBOX","","",null,null],[17,"LASTMODIFIEDTIME","","",null,null],[17,"LASTMODIFIEDBY","","",null,null],[17,"DOMAINCOMPONENT","","",null,null],[17,"ARECORD","","",null,null],[17,"PILOTATTRIBUTETYPE27","","",null,null],[17,"MXRECORD","","",null,null],[17,"NSRECORD","","",null,null],[17,"SOARECORD","","",null,null],[17,"CNAMERECORD","","",null,null],[17,"ASSOCIATEDDOMAIN","","",null,null],[17,"ASSOCIATEDNAME","","",null,null],[17,"HOMEPOSTALADDRESS","","",null,null],[17,"PERSONALTITLE","","",null,null],[17,"MOBILETELEPHONENUMBER","","",null,null],[17,"PAGERTELEPHONENUMBER","","",null,null],[17,"FRIENDLYCOUNTRYNAME","","",null,null],[17,"ORGANIZATIONALSTATUS","","",null,null],[17,"JANETMAILBOX","","",null,null],[17,"MAILPREFERENCEOPTION","","",null,null],[17,"BUILDINGNAME","","",null,null],[17,"DSAQUALITY","","",null,null],[17,"SINGLELEVELQUALITY","","",null,null],[17,"SUBTREEMINIMUMQUALITY","","",null,null],[17,"SUBTREEMAXIMUMQUALITY","","",null,null],[17,"PERSONALSIGNATURE","","",null,null],[17,"DITREDIRECT","","",null,null],[17,"AUDIO","","",null,null],[17,"DOCUMENTPUBLISHER","","",null,null],[17,"ID_SET","","",null,null],[17,"SET_CTYPE","","",null,null],[17,"SET_MSGEXT","","",null,null],[17,"SET_ATTR","","",null,null],[17,"SET_POLICY","","",null,null],[17,"SET_CERTEXT","","",null,null],[17,"SET_BRAND","","",null,null],[17,"SETCT_PANDATA","","",null,null],[17,"SETCT_PANTOKEN","","",null,null],[17,"SETCT_PANONLY","","",null,null],[17,"SETCT_OIDATA","","",null,null],[17,"SETCT_PI","","",null,null],[17,"SETCT_PIDATA","","",null,null],[17,"SETCT_PIDATAUNSIGNED","","",null,null],[17,"SETCT_HODINPUT","","",null,null],[17,"SETCT_AUTHRESBAGGAGE","","",null,null],[17,"SETCT_AUTHREVREQBAGGAGE","","",null,null],[17,"SETCT_AUTHREVRESBAGGAGE","","",null,null],[17,"SETCT_CAPTOKENSEQ","","",null,null],[17,"SETCT_PINITRESDATA","","",null,null],[17,"SETCT_PI_TBS","","",null,null],[17,"SETCT_PRESDATA","","",null,null],[17,"SETCT_AUTHREQTBS","","",null,null],[17,"SETCT_AUTHRESTBS","","",null,null],[17,"SETCT_AUTHRESTBSX","","",null,null],[17,"SETCT_AUTHTOKENTBS","","",null,null],[17,"SETCT_CAPTOKENDATA","","",null,null],[17,"SETCT_CAPTOKENTBS","","",null,null],[17,"SETCT_ACQCARDCODEMSG","","",null,null],[17,"SETCT_AUTHREVREQTBS","","",null,null],[17,"SETCT_AUTHREVRESDATA","","",null,null],[17,"SETCT_AUTHREVRESTBS","","",null,null],[17,"SETCT_CAPREQTBS","","",null,null],[17,"SETCT_CAPREQTBSX","","",null,null],[17,"SETCT_CAPRESDATA","","",null,null],[17,"SETCT_CAPREVREQTBS","","",null,null],[17,"SETCT_CAPREVREQTBSX","","",null,null],[17,"SETCT_CAPREVRESDATA","","",null,null],[17,"SETCT_CREDREQTBS","","",null,null],[17,"SETCT_CREDREQTBSX","","",null,null],[17,"SETCT_CREDRESDATA","","",null,null],[17,"SETCT_CREDREVREQTBS","","",null,null],[17,"SETCT_CREDREVREQTBSX","","",null,null],[17,"SETCT_CREDREVRESDATA","","",null,null],[17,"SETCT_PCERTREQDATA","","",null,null],[17,"SETCT_PCERTRESTBS","","",null,null],[17,"SETCT_BATCHADMINREQDATA","","",null,null],[17,"SETCT_BATCHADMINRESDATA","","",null,null],[17,"SETCT_CARDCINITRESTBS","","",null,null],[17,"SETCT_MEAQCINITRESTBS","","",null,null],[17,"SETCT_REGFORMRESTBS","","",null,null],[17,"SETCT_CERTREQDATA","","",null,null],[17,"SETCT_CERTREQTBS","","",null,null],[17,"SETCT_CERTRESDATA","","",null,null],[17,"SETCT_CERTINQREQTBS","","",null,null],[17,"SETCT_ERRORTBS","","",null,null],[17,"SETCT_PIDUALSIGNEDTBE","","",null,null],[17,"SETCT_PIUNSIGNEDTBE","","",null,null],[17,"SETCT_AUTHREQTBE","","",null,null],[17,"SETCT_AUTHRESTBE","","",null,null],[17,"SETCT_AUTHRESTBEX","","",null,null],[17,"SETCT_AUTHTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBEX","","",null,null],[17,"SETCT_ACQCARDCODEMSGTBE","","",null,null],[17,"SETCT_AUTHREVREQTBE","","",null,null],[17,"SETCT_AUTHREVRESTBE","","",null,null],[17,"SETCT_AUTHREVRESTBEB","","",null,null],[17,"SETCT_CAPREQTBE","","",null,null],[17,"SETCT_CAPREQTBEX","","",null,null],[17,"SETCT_CAPRESTBE","","",null,null],[17,"SETCT_CAPREVREQTBE","","",null,null],[17,"SETCT_CAPREVREQTBEX","","",null,null],[17,"SETCT_CAPREVRESTBE","","",null,null],[17,"SETCT_CREDREQTBE","","",null,null],[17,"SETCT_CREDREQTBEX","","",null,null],[17,"SETCT_CREDRESTBE","","",null,null],[17,"SETCT_CREDREVREQTBE","","",null,null],[17,"SETCT_CREDREVREQTBEX","","",null,null],[17,"SETCT_CREDREVRESTBE","","",null,null],[17,"SETCT_BATCHADMINREQTBE","","",null,null],[17,"SETCT_BATCHADMINRESTBE","","",null,null],[17,"SETCT_REGFORMREQTBE","","",null,null],[17,"SETCT_CERTREQTBE","","",null,null],[17,"SETCT_CERTREQTBEX","","",null,null],[17,"SETCT_CERTRESTBE","","",null,null],[17,"SETCT_CRLNOTIFICATIONTBS","","",null,null],[17,"SETCT_CRLNOTIFICATIONRESTBS","","",null,null],[17,"SETCT_BCIDISTRIBUTIONTBS","","",null,null],[17,"SETEXT_GENCRYPT","","",null,null],[17,"SETEXT_MIAUTH","","",null,null],[17,"SETEXT_PINSECURE","","",null,null],[17,"SETEXT_PINANY","","",null,null],[17,"SETEXT_TRACK2","","",null,null],[17,"SETEXT_CV","","",null,null],[17,"SET_POLICY_ROOT","","",null,null],[17,"SETCEXT_HASHEDROOT","","",null,null],[17,"SETCEXT_CERTTYPE","","",null,null],[17,"SETCEXT_MERCHDATA","","",null,null],[17,"SETCEXT_CCERTREQUIRED","","",null,null],[17,"SETCEXT_TUNNELING","","",null,null],[17,"SETCEXT_SETEXT","","",null,null],[17,"SETCEXT_SETQUALF","","",null,null],[17,"SETCEXT_PGWYCAPABILITIES","","",null,null],[17,"SETCEXT_TOKENIDENTIFIER","","",null,null],[17,"SETCEXT_TRACK2DATA","","",null,null],[17,"SETCEXT_TOKENTYPE","","",null,null],[17,"SETCEXT_ISSUERCAPABILITIES","","",null,null],[17,"SETATTR_CERT","","",null,null],[17,"SETATTR_PGWYCAP","","",null,null],[17,"SETATTR_TOKENTYPE","","",null,null],[17,"SETATTR_ISSCAP","","",null,null],[17,"SET_ROOTKEYTHUMB","","",null,null],[17,"SET_ADDPOLICY","","",null,null],[17,"SETATTR_TOKEN_EMV","","",null,null],[17,"SETATTR_TOKEN_B0PRIME","","",null,null],[17,"SETATTR_ISSCAP_CVM","","",null,null],[17,"SETATTR_ISSCAP_T2","","",null,null],[17,"SETATTR_ISSCAP_SIG","","",null,null],[17,"SETATTR_GENCRYPTGRM","","",null,null],[17,"SETATTR_T2ENC","","",null,null],[17,"SETATTR_T2CLEARTXT","","",null,null],[17,"SETATTR_TOKICCSIG","","",null,null],[17,"SETATTR_SECDEVSIG","","",null,null],[17,"SET_BRAND_IATA_ATA","","",null,null],[17,"SET_BRAND_DINERS","","",null,null],[17,"SET_BRAND_AMERICANEXPRESS","","",null,null],[17,"SET_BRAND_JCB","","",null,null],[17,"SET_BRAND_VISA","","",null,null],[17,"SET_BRAND_MASTERCARD","","",null,null],[17,"SET_BRAND_NOVUS","","",null,null],[17,"DES_CDMF","","",null,null],[17,"RSAOAEPENCRYPTIONSET","","",null,null],[17,"IPSEC3","","",null,null],[17,"IPSEC4","","",null,null],[17,"WHIRLPOOL","","",null,null],[17,"CRYPTOPRO","","",null,null],[17,"CRYPTOCOM","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",null,null],[17,"ID_GOSTR3411_94","","",null,null],[17,"ID_HMACGOSTR3411_94","","",null,null],[17,"ID_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3410_94","","",null,null],[17,"ID_GOST28147_89","","",null,null],[17,"GOST89_CNT","","",null,null],[17,"ID_GOST28147_89_MAC","","",null,null],[17,"ID_GOSTR3411_94_PRF","","",null,null],[17,"ID_GOSTR3410_2001DH","","",null,null],[17,"ID_GOSTR3410_94DH","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",null,null],[17,"ID_GOST28147_89_NONE_KEYMESHING","","",null,null],[17,"ID_GOSTR3411_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",null,null],[17,"ID_GOST28147_89_TESTPARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_A","","",null,null],[17,"ID_GOSTR3410_94_ABIS","","",null,null],[17,"ID_GOSTR3410_94_B","","",null,null],[17,"ID_GOSTR3410_94_BBIS","","",null,null],[17,"ID_GOST28147_89_CC","","",null,null],[17,"ID_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3410_2001_PARAMSET_CC","","",null,null],[17,"CAMELLIA_128_CBC","","",null,null],[17,"CAMELLIA_192_CBC","","",null,null],[17,"CAMELLIA_256_CBC","","",null,null],[17,"ID_CAMELLIA128_WRAP","","",null,null],[17,"ID_CAMELLIA192_WRAP","","",null,null],[17,"ID_CAMELLIA256_WRAP","","",null,null],[17,"CAMELLIA_128_ECB","","",null,null],[17,"CAMELLIA_128_OFB128","","",null,null],[17,"CAMELLIA_128_CFB128","","",null,null],[17,"CAMELLIA_192_ECB","","",null,null],[17,"CAMELLIA_192_OFB128","","",null,null],[17,"CAMELLIA_192_CFB128","","",null,null],[17,"CAMELLIA_256_ECB","","",null,null],[17,"CAMELLIA_256_OFB128","","",null,null],[17,"CAMELLIA_256_CFB128","","",null,null],[17,"CAMELLIA_128_CFB1","","",null,null],[17,"CAMELLIA_192_CFB1","","",null,null],[17,"CAMELLIA_256_CFB1","","",null,null],[17,"CAMELLIA_128_CFB8","","",null,null],[17,"CAMELLIA_192_CFB8","","",null,null],[17,"CAMELLIA_256_CFB8","","",null,null],[17,"KISA","","",null,null],[17,"SEED_ECB","","",null,null],[17,"SEED_CBC","","",null,null],[17,"SEED_CFB128","","",null,null],[17,"SEED_OFB128","","",null,null],[17,"HMAC","","",null,null],[17,"CMAC","","",null,null],[17,"RC4_HMAC_MD5","","",null,null],[17,"AES_128_CBC_HMAC_SHA1","","",null,null],[17,"AES_192_CBC_HMAC_SHA1","","",null,null],[17,"AES_256_CBC_HMAC_SHA1","","",null,null],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"nid"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"from_raw","","Create a `Nid` from an integer representation.",41,{"inputs":[{"name":"c_int"}],"output":{"name":"nid"}}],[11,"as_raw","","Return the integer representation of a `Nid`.",41,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[0,"ocsp","openssl","",null,null],[3,"Flag","openssl::ocsp","",null,null],[3,"OcspResponseStatus","","",null,null],[3,"OcspCertStatus","","",null,null],[3,"OcspRevokedStatus","","",null,null],[3,"Status","","",null,null],[12,"status","","The overall status of the response.",42,null],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the revocation.",42,null],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which the certificate was revoked.",42,null],[12,"this_update","","The time that this revocation check was performed.",42,null],[12,"next_update","","The time at which this revocation check expires.",42,null],[3,"OcspBasicResponse","","",null,null],[3,"OcspBasicResponseRef","","",null,null],[3,"OcspCertId","","",null,null],[3,"OcspCertIdRef","","",null,null],[3,"OcspResponse","","",null,null],[3,"OcspResponseRef","","",null,null],[3,"OcspRequest","","",null,null],[3,"OcspRequestRef","","",null,null],[3,"OcspOneReq","","",null,null],[3,"OcspOneReqRef","","",null,null],[17,"FLAG_NO_CERTS","","",null,null],[17,"FLAG_NO_INTERN","","",null,null],[17,"FLAG_NO_CHAIN","","",null,null],[17,"FLAG_NO_VERIFY","","",null,null],[17,"FLAG_NO_EXPLICIT","","",null,null],[17,"FLAG_NO_CA_SIGN","","",null,null],[17,"FLAG_NO_DELEGATED","","",null,null],[17,"FLAG_NO_CHECKS","","",null,null],[17,"FLAG_TRUST_OTHER","","",null,null],[17,"FLAG_RESPID_KEY","","",null,null],[17,"FLAG_NO_TIME","","",null,null],[17,"RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"RESPONSE_STATUS_MALFORMED_REQUEST","","",null,null],[17,"RESPONSE_STATUS_INTERNAL_ERROR","","",null,null],[17,"RESPONSE_STATUS_TRY_LATER","","",null,null],[17,"RESPONSE_STATUS_SIG_REQUIRED","","",null,null],[17,"RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"CERT_STATUS_GOOD","","",null,null],[17,"CERT_STATUS_REVOKED","","",null,null],[17,"CERT_STATUS_UNKNOWN","","",null,null],[17,"REVOKED_STATUS_NO_STATUS","","",null,null],[17,"REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"REVOKED_STATUS_KEY_COMPROMISE","","",null,null],[17,"REVOKED_STATUS_CA_COMPROMISE","","",null,null],[17,"REVOKED_STATUS_AFFILIATION_CHANGED","","",null,null],[17,"REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"REVOKED_STATUS_CESSATION_OF_OPERATION","","",null,null],[17,"REVOKED_STATUS_CERTIFICATE_HOLD","","",null,null],[17,"REVOKED_STATUS_REMOVE_FROM_CRL","","",null,null],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"flag"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"ordering"}}],[11,"hash","","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",43,{"inputs":[],"output":{"name":"flag"}}],[11,"all","","Returns the set containing all flags.",43,{"inputs":[],"output":{"name":"flag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",43,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",43,{"inputs":[{"name":"c_ulong"}],"output":{"generics":["flag"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",43,{"inputs":[{"name":"c_ulong"}],"output":{"name":"flag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",43,{"inputs":[{"name":"self"},{"name":"flag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"bitor_assign","","Adds the set of flags.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"bitxor_assign","","Toggles the set of flags.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":{"name":"flag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",43,{"inputs":[{"name":"self"},{"name":"flag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",43,{"inputs":[{"name":"self"}],"output":{"name":"flag"}}],[11,"extend","","",43,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",43,{"inputs":[{"name":"t"}],"output":{"name":"flag"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponsestatus"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"ocspresponsestatus"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"ocspresponsestatus"}],"output":{"name":"bool"}}],[11,"from_raw","","",44,{"inputs":[{"name":"c_int"}],"output":{"name":"ocspresponsestatus"}}],[11,"as_raw","","",44,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertstatus"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"ocspcertstatus"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"ocspcertstatus"}],"output":{"name":"bool"}}],[11,"from_raw","","",45,{"inputs":[{"name":"c_int"}],"output":{"name":"ocspcertstatus"}}],[11,"as_raw","","",45,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ocsprevokedstatus"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"ocsprevokedstatus"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"ocsprevokedstatus"}],"output":{"name":"bool"}}],[11,"from_raw","","",46,{"inputs":[{"name":"c_int"}],"output":{"name":"ocsprevokedstatus"}}],[11,"as_raw","","",46,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"check_validity","","Checks validity of the `this_update` and `next_update` fields.",42,{"inputs":[{"name":"self"},{"name":"u32"},{"generics":["u32"],"name":"option"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"from_ptr","","",47,null],[11,"as_ptr","","",47,null],[11,"drop","","",47,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ocspbasicresponseref"}}],[11,"deref_mut","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ocspbasicresponseref"}}],[11,"borrow","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ocspbasicresponseref"}}],[11,"as_ref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ocspbasicresponseref"}}],[11,"verify","","Verifies the validity of the response.",48,{"inputs":[{"name":"self"},{"name":"stackref"},{"name":"x509storeref"},{"name":"flag"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"find_status","","Looks up the status for the specified certificate ID.",48,{"inputs":[{"name":"self"},{"name":"ocspcertidref"}],"output":{"generics":["status"],"name":"option"}}],[11,"from_ptr","","",49,null],[11,"as_ptr","","",49,null],[11,"drop","","",49,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertidref"}}],[11,"deref_mut","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertidref"}}],[11,"borrow","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertidref"}}],[11,"as_ref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"ocspcertidref"}}],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",49,{"inputs":[{"name":"messagedigest"},{"name":"x509ref"},{"name":"x509ref"}],"output":{"generics":["ocspcertid","errorstack"],"name":"result"}}],[11,"from_ptr","","",50,null],[11,"as_ptr","","",50,null],[11,"drop","","",50,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",50,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponseref"}}],[11,"deref_mut","","",50,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponseref"}}],[11,"borrow","","",50,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponseref"}}],[11,"as_ref","","",50,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponseref"}}],[11,"create","","Creates an OCSP response from the status and optional body.",50,{"inputs":[{"name":"ocspresponsestatus"},{"generics":["ocspbasicresponseref"],"name":"option"}],"output":{"generics":["ocspresponse","errorstack"],"name":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",50,null],[11,"to_der","","Serializes this value to DER.",51,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"status","","Returns the status of the response.",51,{"inputs":[{"name":"self"}],"output":{"name":"ocspresponsestatus"}}],[11,"basic","","Returns the basic response.",51,{"inputs":[{"name":"self"}],"output":{"generics":["ocspbasicresponse","errorstack"],"name":"result"}}],[11,"from_ptr","","",52,null],[11,"as_ptr","","",52,null],[11,"drop","","",52,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ocsprequestref"}}],[11,"deref_mut","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ocsprequestref"}}],[11,"borrow","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ocsprequestref"}}],[11,"as_ref","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ocsprequestref"}}],[11,"new","","",52,{"inputs":[],"output":{"generics":["ocsprequest","errorstack"],"name":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",52,null],[11,"to_der","","Serializes this value to DER.",53,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"add_id","","",53,{"inputs":[{"name":"self"},{"name":"ocspcertid"}],"output":{"generics":["ocsponereqref","errorstack"],"name":"result"}}],[11,"from_ptr","","",54,null],[11,"as_ptr","","",54,null],[11,"drop","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ocsponereqref"}}],[11,"deref_mut","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ocsponereqref"}}],[11,"borrow","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ocsponereqref"}}],[11,"as_ref","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ocsponereqref"}}],[0,"pkcs12","openssl","PKCS #12 archives.",null,null],[3,"Pkcs12","openssl::pkcs12","",null,null],[3,"Pkcs12Ref","","",null,null],[3,"ParsedPkcs12","","",null,null],[12,"pkey","","",55,null],[12,"cert","","",55,null],[12,"chain","","",55,null],[3,"Pkcs12Builder","","",null,null],[11,"from_ptr","","",56,null],[11,"as_ptr","","",56,null],[11,"drop","","",56,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",56,{"inputs":[{"name":"self"}],"output":{"name":"pkcs12ref"}}],[11,"deref_mut","","",56,{"inputs":[{"name":"self"}],"output":{"name":"pkcs12ref"}}],[11,"borrow","","",56,{"inputs":[{"name":"self"}],"output":{"name":"pkcs12ref"}}],[11,"as_ref","","",56,{"inputs":[{"name":"self"}],"output":{"name":"pkcs12ref"}}],[11,"to_der","","Serializes this value to DER.",57,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"parse","","Extracts the contents of the `Pkcs12`.",57,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["parsedpkcs12","errorstack"],"name":"result"}}],[11,"from_der","","Deserializes a value from DER-formatted data.",56,null],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",56,{"inputs":[],"output":{"name":"pkcs12builder"}}],[11,"key_algorithm","","The encryption algorithm that should be used for the key",58,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"self"}}],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",58,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"self"}}],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",58,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",58,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"ca","","An additional set of certificates to include in the archive beyond the one provided to `build`.",58,{"inputs":[{"name":"self"},{"generics":["x509"],"name":"stack"}],"output":{"name":"self"}}],[11,"build","","Builds the PKCS #12 object",58,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"pkeyref"},{"name":"x509"}],"output":{"generics":["pkcs12","errorstack"],"name":"result"}}],[0,"pkcs5","openssl","",null,null],[3,"KeyIvPair","openssl::pkcs5","",null,null],[12,"key","","",59,null],[12,"iv","","",59,null],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.",null,null],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"keyivpair"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"keyivpair"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"keyivpair"}],"output":{"name":"bool"}}],[11,"hash","","",59,null],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"pkey","openssl","",null,null],[3,"PKey","openssl::pkey","",null,null],[3,"PKeyRef","","",null,null],[3,"PKeyCtx","","",null,null],[3,"PKeyCtxRef","","",null,null],[11,"from_ptr","","",60,null],[11,"as_ptr","","",60,null],[11,"drop","","",60,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",60,{"inputs":[{"name":"self"}],"output":{"name":"pkeyref"}}],[11,"deref_mut","","",60,{"inputs":[{"name":"self"}],"output":{"name":"pkeyref"}}],[11,"borrow","","",60,{"inputs":[{"name":"self"}],"output":{"name":"pkeyref"}}],[11,"as_ref","","",60,{"inputs":[{"name":"self"}],"output":{"name":"pkeyref"}}],[11,"rsa","","Returns a copy of the internal RSA key.",61,{"inputs":[{"name":"self"}],"output":{"generics":["rsa","errorstack"],"name":"result"}}],[11,"dsa","","Returns a copy of the internal DSA key.",61,{"inputs":[{"name":"self"}],"output":{"generics":["dsa","errorstack"],"name":"result"}}],[11,"dh","","Returns a copy of the internal DH key.",61,{"inputs":[{"name":"self"}],"output":{"generics":["dh","errorstack"],"name":"result"}}],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",61,{"inputs":[{"name":"self"}],"output":{"generics":["eckey","errorstack"],"name":"result"}}],[11,"public_key_to_pem","","Serializes a public key to PEM.",61,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",61,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",61,null],[11,"private_key_to_der","","Serializes the private key to DER.",61,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",61,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"bits","","Returns the size of the key.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"public_eq","","Compares the public component of this key with another.",61,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"name":"bool"}}],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",60,{"inputs":[{"name":"rsa"}],"output":{"generics":["pkey","errorstack"],"name":"result"}}],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",60,{"inputs":[{"name":"dsa"}],"output":{"generics":["pkey","errorstack"],"name":"result"}}],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",60,{"inputs":[{"name":"dh"}],"output":{"generics":["pkey","errorstack"],"name":"result"}}],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",60,{"inputs":[{"name":"eckey"}],"output":{"generics":["pkey","errorstack"],"name":"result"}}],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",60,null],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",60,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",60,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",60,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",60,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",60,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",60,null],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password if the key is encrpyted.",60,null],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the supplied password if the key is encrypted.",60,null],[11,"private_key_from_pem_cb","","",60,null],[11,"from_ptr","","",62,null],[11,"as_ptr","","",62,null],[11,"drop","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",62,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"deref_mut","","",62,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"borrow","","",62,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"as_ref","","",62,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"from_pkey","","",62,{"inputs":[{"name":"pkeyref"}],"output":{"generics":["pkeyctx","errorstack"],"name":"result"}}],[11,"set_rsa_padding","","",63,{"inputs":[{"name":"self"},{"name":"padding"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"rsa_padding","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["padding","errorstack"],"name":"result"}}],[11,"derive_init","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"derive_set_peer","","",63,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"derive","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[0,"rand","openssl","Utilities for secure random number generation.",null,null],[5,"rand_bytes","openssl::rand","Fill buffer with cryptographically strong pseudo-random bytes.",null,null],[0,"rsa","openssl","",null,null],[3,"Padding","openssl::rsa","Type of encryption padding to use.",null,null],[3,"Rsa","","",null,null],[3,"RsaRef","","",null,null],[17,"NO_PADDING","","",null,null],[17,"PKCS1_PADDING","","",null,null],[17,"PKCS1_OAEP_PADDING","","",null,null],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"padding"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"padding"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"padding"}],"output":{"name":"bool"}}],[11,"from_raw","","",64,{"inputs":[{"name":"c_int"}],"output":{"name":"padding"}}],[11,"as_raw","","",64,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_ptr","","",65,null],[11,"as_ptr","","",65,null],[11,"drop","","",65,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",65,{"inputs":[{"name":"self"}],"output":{"name":"rsaref"}}],[11,"deref_mut","","",65,{"inputs":[{"name":"self"}],"output":{"name":"rsaref"}}],[11,"borrow","","",65,{"inputs":[{"name":"self"}],"output":{"name":"rsaref"}}],[11,"as_ref","","",65,{"inputs":[{"name":"self"}],"output":{"name":"rsaref"}}],[11,"private_key_to_pem","","Serializes the private key to PEM.",66,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and passphrase.",66,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",66,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"private_key_to_der","","Serializes the private key to DER.",66,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"public_key_to_der","","Serializes the public key to DER.",66,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"public_key_to_der_pkcs1","","Serializes the public key to DER-encoded PKCS#1.",66,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"size","","",66,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"private_decrypt","","Decrypts data using the private key, returning the number of decrypted bytes.",66,null],[11,"private_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",66,null],[11,"public_decrypt","","Decrypts data using the public key, returning the number of decrypted bytes.",66,null],[11,"public_encrypt","","Encrypts data using the public key, returning the number of encrypted bytes.",66,null],[11,"n","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"d","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"e","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"p","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"q","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"dp","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"dq","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"qi","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["bignumref"],"name":"option"}}],[11,"from_public_components","","only useful for associating the key material directly with the key, it's safer to use the supplied load and save methods for DER formatted keys.",65,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"generics":["rsa","errorstack"],"name":"result"}}],[11,"from_private_components","","",65,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"generics":["rsa","errorstack"],"name":"result"}}],[11,"generate","","Generates a public/private key pair with the specified size.",65,{"inputs":[{"name":"u32"}],"output":{"generics":["rsa","errorstack"],"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",65,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is encrypted.",65,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the key is encrypted.",65,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",65,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",65,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",65,null],[11,"public_key_from_der_pkcs1","","Deserializes a public key from DER-encoded PKCS#1 data.",65,null],[11,"private_key_from_pem_cb","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"sign","openssl","Message signatures.",null,null],[3,"Signer","openssl::sign","A type which computes cryptographic signatures of data.",null,null],[3,"Verifier","","",null,null],[11,"drop","","",67,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `Signer`.",67,{"inputs":[{"name":"messagedigest"},{"name":"pkeyref"}],"output":{"generics":["signer","errorstack"],"name":"result"}}],[11,"pkey_ctx","","Returns a shared reference to the `PKeyCtx` associated with the `Signer`.",67,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"pkey_ctx_mut","","Returns a mutable reference to the `PKeyCtx` associated with the `Signer`.",67,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"update","","Feeds more data into the `Signer`.",67,null],[11,"len","","Computes an upper bound on the signature length.",67,{"inputs":[{"name":"self"}],"output":{"generics":["usize","errorstack"],"name":"result"}}],[11,"sign","","Writes the signature into the provided buffer, returning the number of bytes written.",67,null],[11,"sign_to_vec","","Returns the signature.",67,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"finish","","",67,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"write","","",67,null],[11,"flush","","",67,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",68,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `Verifier`.",68,{"inputs":[{"name":"messagedigest"},{"name":"pkeyref"}],"output":{"generics":["verifier","errorstack"],"name":"result"}}],[11,"pkey_ctx","","Returns a shared reference to the `PKeyCtx` associated with the `Verifier`.",68,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"pkey_ctx_mut","","Returns a mutable reference to the `PKeyCtx` associated with the `Verifier`.",68,{"inputs":[{"name":"self"}],"output":{"name":"pkeyctxref"}}],[11,"update","","Feeds more data into the `Verifier`.",68,null],[11,"verify","","Determines if the data fed into the `Verifier` matches the provided signature.",68,null],[11,"finish","","",68,null],[11,"write","","",68,null],[11,"flush","","",68,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"sha","openssl","The SHA family of hashes.",null,null],[3,"Sha1","openssl::sha","An object which calculates a SHA1 hash of some data.",null,null],[3,"Sha224","","An object which calculates a SHA224 hash of some data.",null,null],[3,"Sha256","","An object which calculates a SHA256 hash of some data.",null,null],[3,"Sha384","","An object which calculates a SHA384 hash of some data.",null,null],[3,"Sha512","","An object which calculates a SHA512 hash of some data.",null,null],[5,"sha1","","Computes the SHA1 hash of some data.",null,null],[5,"sha224","","Computes the SHA224 hash of some data.",null,null],[5,"sha256","","Computes the SHA256 hash of some data.",null,null],[5,"sha384","","Computes the SHA384 hash of some data.",null,null],[5,"sha512","","Computes the SHA512 hash of some data.",null,null],[11,"new","","Creates a new hasher.",69,{"inputs":[],"output":{"name":"sha1"}}],[11,"update","","Feeds some data into the hasher.",69,null],[11,"finish","","Returns the hash of the data.",69,null],[11,"new","","Creates a new hasher.",70,{"inputs":[],"output":{"name":"sha224"}}],[11,"update","","Feeds some data into the hasher.",70,null],[11,"finish","","Returns the hash of the data.",70,null],[11,"new","","Creates a new hasher.",71,{"inputs":[],"output":{"name":"sha256"}}],[11,"update","","Feeds some data into the hasher.",71,null],[11,"finish","","Returns the hash of the data.",71,null],[11,"new","","Creates a new hasher.",72,{"inputs":[],"output":{"name":"sha384"}}],[11,"update","","Feeds some data into the hasher.",72,null],[11,"finish","","Returns the hash of the data.",72,null],[11,"new","","Creates a new hasher.",73,{"inputs":[],"output":{"name":"sha512"}}],[11,"update","","Feeds some data into the hasher.",73,null],[11,"finish","","Returns the hash of the data.",73,null],[0,"ssl","openssl","SSL/TLS support.",null,null],[3,"ConnectConfiguration","openssl::ssl","A type which allows for configuration of a client-side TLS session before connection.",null,null],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",null,null],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",null,null],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",null,null],[3,"SslConnectorBuilder","","A builder for `SslConnector`s.",null,null],[3,"RetryError","","An error indicating that the operation can be immediately retried.",null,null],[3,"SslOption","","Options controlling the behavior of an `SslContext`.",null,null],[3,"SslMode","","Options controlling the behavior of an `SslContext`.",null,null],[3,"SslMethod","","A type specifying the kind of protocol an `SslContext` will speak.",null,null],[3,"SslVerifyMode","","Options controling the behavior of certificate verification.",null,null],[3,"StatusType","","An identifier of a certificate status type.",null,null],[3,"SslContextBuilder","","A builder for `SslContext`s.",null,null],[3,"SslContext","","A context object for TLS streams.",null,null],[3,"SslContextRef","","Reference to [`SslContext`]",null,null],[3,"CipherBits","","Information about the state of a cipher.",null,null],[12,"secret","","The number of secret bits used for the cipher.",74,null],[12,"algorithm","","The number of bits processed by the chosen algorithm.",74,null],[3,"SslCipher","","Information about a cipher.",null,null],[3,"SslCipherRef","","Reference to an [`SslCipher`].",null,null],[3,"SslSession","","An encoded SSL session.",null,null],[3,"SslSessionRef","","Reference to [`SslSession]`.",null,null],[3,"Ssl","","The state of an SSL/TLS session.",null,null],[3,"SslRef","","Reference to an [`Ssl`].",null,null],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",null,null],[3,"SslStream","","A TLS session over a stream.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",75,null],[13,"WantRead","","An attempt to read data from the underlying socket returned `WouldBlock`. Wait for read readiness and reattempt the operation.",75,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned `WouldBlock`. Wait for write readiness and reattempt the operation.",75,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",75,null],[13,"Stream","","An error reported by the underlying stream.",75,null],[13,"Ssl","","An error in the OpenSSL library.",75,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"SetupFailure","","Setup failed.",76,null],[13,"Failure","","The handshake failed.",76,null],[13,"Interrupted","","The handshake was interrupted midway through.",76,null],[4,"SniError","","An error returned from an SNI callback.",null,null],[13,"Fatal","","",77,null],[13,"Warning","","",77,null],[13,"NoAck","","",77,null],[4,"ShutdownResult","","The result of a shutdown request.",null,null],[13,"Sent","","A close notify message has been sent to the peer.",78,null],[13,"Received","","A close notify response message has been received from the peer.",78,null],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",75,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",75,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",75,{"inputs":[{"name":"errorstack"}],"output":{"name":"error"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",79,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",76,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",76,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",76,{"inputs":[{"name":"errorstack"}],"output":{"name":"handshakeerror"}}],[11,"new","","Creates a new builder for TLS connections.",80,{"inputs":[{"name":"sslmethod"}],"output":{"generics":["sslconnectorbuilder","errorstack"],"name":"result"}}],[11,"builder","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"builder_mut","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"build","","Consumes the builder, returning an `SslConnector`.",80,{"inputs":[{"name":"self"}],"output":{"name":"sslconnector"}}],[11,"deref","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"deref_mut","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"sslconnector"}}],[11,"connect","","Initiates a client-side TLS session on a stream.",81,{"inputs":[{"name":"self"},{"name":"str"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",81,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"configure","","Returns a structure allowing for configuration of a single TLS session before connection.",81,{"inputs":[{"name":"self"}],"output":{"generics":["connectconfiguration","errorstack"],"name":"result"}}],[11,"ssl","","",82,{"inputs":[{"name":"self"}],"output":{"name":"ssl"}}],[11,"ssl_mut","","",82,{"inputs":[{"name":"self"}],"output":{"name":"ssl"}}],[11,"connect","","Initiates a client-side TLS session on a stream.",82,{"inputs":[{"name":"self"},{"name":"str"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",82,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"deref","","",82,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"deref_mut","","",82,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy clients. This should generally be considered a reasonable default choice.",83,{"inputs":[{"name":"sslmethod"},{"name":"pkeyref"},{"name":"x509ref"},{"name":"i"}],"output":{"generics":["sslacceptorbuilder","errorstack"],"name":"result"}}],[11,"mozilla_modern","","Creates a new builder configured to connect to modern clients.",83,{"inputs":[{"name":"sslmethod"},{"name":"pkeyref"},{"name":"x509ref"},{"name":"i"}],"output":{"generics":["sslacceptorbuilder","errorstack"],"name":"result"}}],[11,"mozilla_intermediate_raw","","Like `mozilla_intermediate`, but does not load the certificate chain and private key.",83,{"inputs":[{"name":"sslmethod"}],"output":{"generics":["sslacceptorbuilder","errorstack"],"name":"result"}}],[11,"mozilla_modern_raw","","Like `mozilla_modern`, but does not load the certificate chain and private key.",83,{"inputs":[{"name":"sslmethod"}],"output":{"generics":["sslacceptorbuilder","errorstack"],"name":"result"}}],[11,"builder","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"builder_mut","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",83,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptor"}}],[11,"deref","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"deref_mut","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextbuilder"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"sslacceptor"}}],[11,"accept","","Initiates a server-side TLS session on a stream.",84,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","Disables a countermeasure against an SSLv3/TLSv1.0 vulnerability affecting CBC ciphers.",null,null],[17,"SSL_OP_ALL","","A \"reasonable default\" set of options which enables compatibility flags.",null,null],[17,"SSL_OP_NO_QUERY_MTU","","Do not query the MTU.",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","Enables Cookie Exchange as described in [RFC 4347 Section 4.2.1].",null,null],[17,"SSL_OP_NO_TICKET","","Disables the use of session tickets for session resumption.",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","Always start a new session when performing a renegotiation on the server side.",null,null],[17,"SSL_OP_NO_COMPRESSION","","Disables the use of TLS compression.",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","Allow legacy insecure renegotiation with servers or clients that do not support secure renegotiation.",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","Creates a new key for each session when using ECDHE.",null,null],[17,"SSL_OP_SINGLE_DH_USE","","Creates a new key for each session when using DHE.",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","Use the server's preferences rather than the client's when selecting a cipher.",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","Disables version rollback attach detection.",null,null],[17,"SSL_OP_NO_SSLV2","","Disables the use of SSLv2.",null,null],[17,"SSL_OP_NO_SSLV3","","Disables the use of SSLv3.",null,null],[17,"SSL_OP_NO_TLSV1","","Disables the use of TLSv1.0.",null,null],[17,"SSL_OP_NO_TLSV1_1","","Disables the use of TLSv1.1.",null,null],[17,"SSL_OP_NO_TLSV1_2","","Disables the use of TLSv1.2.",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","Enables \"short writes\".",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","Disables a check that the data buffer has not moved between calls when operating in a nonblocking context.",null,null],[17,"SSL_MODE_AUTO_RETRY","","Enables automatic retries after TLS session events such as renegotiations or heartbeats.",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","Disables automatic chain building when verifying a peer's certificate.",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","Release memory buffers when the session does not need them.",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","Sends the fake `TLS_FALLBACK_SCSV` cipher suite in the ClientHello message of a handshake.",null,null],[17,"SSL_VERIFY_PEER","","Verifies that the peer's certificate is trusted.",null,null],[17,"SSL_VERIFY_NONE","","Disables verification of the peer's certificate.",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","On the server side, abort the handshake if the client did not send a certificate.",null,null],[17,"STATUS_TYPE_OCSP","","An OSCP status.",null,null],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"ssloption"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"cmp","","",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",85,{"inputs":[],"output":{"name":"ssloption"}}],[11,"all","","Returns the set containing all flags.",85,{"inputs":[],"output":{"name":"ssloption"}}],[11,"bits","","Returns the raw value of the flags currently stored.",85,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",85,{"inputs":[{"name":"c_ulong"}],"output":{"generics":["ssloption"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",85,{"inputs":[{"name":"c_ulong"}],"output":{"name":"ssloption"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",85,{"inputs":[{"name":"self"},{"name":"ssloption"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"bitor_assign","","Adds the set of flags.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"bitxor_assign","","Toggles the set of flags.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"sub_assign","","Disables all flags enabled in the set.",85,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",85,{"inputs":[{"name":"self"}],"output":{"name":"ssloption"}}],[11,"extend","","",85,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"ssloption"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"sslmode"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"cmp","","",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"ordering"}}],[11,"hash","","",86,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",86,{"inputs":[],"output":{"name":"sslmode"}}],[11,"all","","Returns the set containing all flags.",86,{"inputs":[],"output":{"name":"sslmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",86,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",86,{"inputs":[{"name":"c_long"}],"output":{"generics":["sslmode"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",86,{"inputs":[{"name":"c_long"}],"output":{"name":"sslmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",86,{"inputs":[{"name":"self"},{"name":"sslmode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"bitor_assign","","Adds the set of flags.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"bitxor_assign","","Toggles the set of flags.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",86,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",86,{"inputs":[{"name":"self"}],"output":{"name":"sslmode"}}],[11,"extend","","",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",86,{"inputs":[{"name":"t"}],"output":{"name":"sslmode"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"sslmethod"}}],[11,"tls","","Support all versions of the TLS protocol.",87,{"inputs":[],"output":{"name":"sslmethod"}}],[11,"dtls","","Support all versions of the DTLS protocol.",87,{"inputs":[],"output":{"name":"sslmethod"}}],[11,"from_ptr","","Constructs an `SslMethod` from a pointer to the underlying OpenSSL value.",87,null],[11,"as_ptr","","Returns a pointer to the underlying OpenSSL value.",87,null],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"sslverifymode"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"ordering"}}],[11,"hash","","",88,null],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",88,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",88,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",88,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",88,{"inputs":[{"name":"i32"}],"output":{"generics":["sslverifymode"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",88,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitor_assign","","Adds the set of flags.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitxor_assign","","Toggles the set of flags.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",88,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",88,{"inputs":[{"name":"self"}],"output":{"name":"sslverifymode"}}],[11,"extend","","",88,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",88,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"statustype"}}],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",89,{"inputs":[{"name":"c_int"}],"output":{"name":"statustype"}}],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",89,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"drop","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `SslContextBuilder`.",90,{"inputs":[{"name":"sslmethod"}],"output":{"generics":["sslcontextbuilder","errorstack"],"name":"result"}}],[11,"from_ptr","","Creates an `SslContextBuilder` from a pointer to a raw OpenSSL value.",90,null],[11,"as_ptr","","Returns a pointer to the raw OpenSSL value.",90,null],[11,"set_verify","","Configures the certificate verification method for new connections.",90,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"set_verify_callback","","Configures the certificate verification method for new connections and registers a verification callback.",90,{"inputs":[{"name":"self"},{"name":"sslverifymode"},{"name":"f"}],"output":null}],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections.",90,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_verify_depth","","Sets the certificate verification depth.",90,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"set_read_ahead","","Controls read ahead behavior.",90,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_mode","","Sets the mode used by the context, returning the previous mode.",90,{"inputs":[{"name":"self"},{"name":"sslmode"}],"output":{"name":"sslmode"}}],[11,"set_tmp_dh","","Sets the parameters to be used during ephemeral Diffie-Hellman key exchange.",90,{"inputs":[{"name":"self"},{"name":"dhref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_tmp_dh_callback","","Sets the callback which will generate parameters to be used during ephemeral Diffie-Hellman key exchange.",90,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_tmp_ecdh","","Sets the parameters to be used during ephemeral elliptic curve Diffie-Hellman key exchange.",90,{"inputs":[{"name":"self"},{"name":"eckeyref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",90,{"inputs":[{"name":"self"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_ca_file","","Loads trusted root certificates from a file.",90,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_client_ca_list","","Sets the list of CA names sent to the client.",90,{"inputs":[{"name":"self"},{"generics":["x509name"],"name":"stack"}],"output":null}],[11,"set_session_id_context","","Set the context identifier for sessions.",90,null],[11,"set_certificate_file","","Loads a leaf certificate from a file.",90,{"inputs":[{"name":"self"},{"name":"p"},{"name":"x509filetype"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",90,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_certificate","","Sets the leaf certificate.",90,{"inputs":[{"name":"self"},{"name":"x509ref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",90,{"inputs":[{"name":"self"},{"name":"x509"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_private_key_file","","Loads the private key from a file.",90,{"inputs":[{"name":"self"},{"name":"p"},{"name":"x509filetype"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_private_key","","Sets the private key.",90,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_cipher_list","","Sets the list of supported ciphers.",90,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_options","","Sets the options used by the context, returning the old set.",90,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"options","","Returns the options used by the context.",90,{"inputs":[{"name":"self"}],"output":{"name":"ssloption"}}],[11,"clear_options","","Clears the options used by the context, returning the old set.",90,{"inputs":[{"name":"self"},{"name":"ssloption"}],"output":{"name":"ssloption"}}],[11,"set_npn_protocols","","Set the protocols to be used during Next Protocol Negotiation (the protocols supported by the application).",90,null],[11,"check_private_key","","Checks for consistency between the private key and certificate.",90,{"inputs":[{"name":"self"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"cert_store","","Returns a shared reference to the context's certificate store.",90,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate store.",90,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",90,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_psk_callback","","Sets the callback for providing an identity and pre-shared key for a TLS-PSK client.",90,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_ex_data","","Sets the extra data at the specified index.",90,{"inputs":[{"name":"self"},{"generics":["sslcontext"],"name":"index"},{"name":"t"}],"output":null}],[11,"build","","Consumes the builder, returning a new `SslContext`.",90,{"inputs":[{"name":"self"}],"output":{"name":"sslcontext"}}],[11,"from_ptr","","",91,null],[11,"as_ptr","","",91,null],[11,"drop","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"deref_mut","","",91,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"borrow","","",91,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"as_ref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"builder","","Creates a new builder object for an `SslContext`.",91,{"inputs":[{"name":"sslmethod"}],"output":{"generics":["sslcontextbuilder","errorstack"],"name":"result"}}],[11,"new_ex_index","","Returns a new extra data index.",91,{"inputs":[],"output":{"generics":["index","errorstack"],"name":"result"}}],[11,"cert_store","","Returns a shared reference to the certificate store used for verification.",92,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[11,"extra_chain_certs","","Returns a shared reference to the stack of certificates making up the chain from the leaf.",92,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"ex_data","","Returns a reference to the extra data at the specified index.",92,{"inputs":[{"name":"self"},{"generics":["sslcontext"],"name":"index"}],"output":{"name":"option"}}],[11,"from_ptr","","",93,null],[11,"as_ptr","","",93,null],[11,"deref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"sslcipherref"}}],[11,"deref_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"sslcipherref"}}],[11,"name","","Returns the name of the cipher.",94,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",94,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"bits","","Returns the number of bits used for the cipher.",94,{"inputs":[{"name":"self"}],"output":{"name":"cipherbits"}}],[11,"description","","Returns a textual description of the cipher.",94,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"from_ptr","","",95,null],[11,"as_ptr","","",95,null],[11,"drop","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"deref_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"borrow","","",95,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"as_ref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"sslsessionref"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"sslsession"}}],[11,"to_owned","","",96,{"inputs":[{"name":"self"}],"output":{"name":"sslsession"}}],[11,"id","","Returns the SSL session ID.",96,null],[11,"master_key_len","","Returns the length of the master key.",96,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"master_key","","Copies the master key into the provided buffer.",96,null],[11,"from_ptr","","",97,null],[11,"as_ptr","","",97,null],[11,"drop","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"deref_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"borrow","","",97,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"new_ex_index","","Returns a new extra data index.",97,{"inputs":[],"output":{"generics":["index","errorstack"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_verify","","Like [`SslContextBuilder::set_verify`].",98,{"inputs":[{"name":"self"},{"name":"sslverifymode"}],"output":null}],[11,"set_verify_callback","","Like [`SslContextBuilder::set_verify_callback`].",98,{"inputs":[{"name":"self"},{"name":"sslverifymode"},{"name":"f"}],"output":null}],[11,"set_tmp_dh","","Like [`SslContextBuilder::set_tmp_dh`].",98,{"inputs":[{"name":"self"},{"name":"dhref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_tmp_dh_callback","","Like [`SslContextBuilder::set_tmp_dh_callback`].",98,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_tmp_ecdh","","Like [`SslContextBuilder::set_tmp_ecdh`].",98,{"inputs":[{"name":"self"},{"name":"eckeyref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"current_cipher","","Returns the current cipher if the session is active.",98,{"inputs":[{"name":"self"}],"output":{"generics":["sslcipherref"],"name":"option"}}],[11,"state_string","","Returns a short string describing the state of the session.",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"state_string_long","","Returns a longer string describing the state of the session.",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_hostname","","Sets the host name to be sent to the server for Server Name Indication (SNI).",98,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"peer_certificate","","Returns the peer's certificate, if present.",98,{"inputs":[{"name":"self"}],"output":{"generics":["x509"],"name":"option"}}],[11,"peer_cert_chain","","Returns the certificate chain of the peer, if present.",98,{"inputs":[{"name":"self"}],"output":{"generics":["stackref"],"name":"option"}}],[11,"certificate","","Like [`SslContext::certificate`].",98,{"inputs":[{"name":"self"}],"output":{"generics":["x509ref"],"name":"option"}}],[11,"private_key","","Like [`SslContext::private_key`].",98,{"inputs":[{"name":"self"}],"output":{"generics":["pkeyref"],"name":"option"}}],[11,"version","","Returns a string describing the protocol version of the session.",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"selected_npn_protocol","","Returns the protocol selected by performing Next Protocol Negotiation, if any.",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS record.",98,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"compression","","Returns the compression method currently in use.",98,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"servername","","Returns the servername sent by the client via Server Name Indication (SNI).",98,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",98,{"inputs":[{"name":"self"},{"name":"sslcontextref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"ssl_context","","Returns the context corresponding to the current connection.",98,{"inputs":[{"name":"self"}],"output":{"name":"sslcontextref"}}],[11,"verify_result","","Returns the certificate verification result.",98,{"inputs":[{"name":"self"}],"output":{"generics":["x509verifyerror"],"name":"option"}}],[11,"session","","Returns a shared reference to the SSL session.",98,{"inputs":[{"name":"self"}],"output":{"generics":["sslsessionref"],"name":"option"}}],[11,"set_session","","Sets the session to be used.",98,{"inputs":[{"name":"self"},{"name":"sslsessionref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"session_reused","","Determines if the session provided to `set_session` was successfully reused.",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_status_type","","Sets the status response a client wishes the server to reply with.",98,{"inputs":[{"name":"self"},{"name":"statustype"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"ocsp_status","","Returns the server's OCSP response, if present.",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",98,null],[11,"is_server","","Determines if this `Ssl` is configured for server-side or client-side use.",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ex_data","","Sets the extra data at the specified index.",98,{"inputs":[{"name":"self"},{"generics":["ssl"],"name":"index"},{"name":"t"}],"output":null}],[11,"ex_data","","Returns a reference to the extra data at the specified index.",98,{"inputs":[{"name":"self"},{"generics":["ssl"],"name":"index"}],"output":{"name":"option"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Ssl`.",97,{"inputs":[{"name":"sslcontext"}],"output":{"generics":["ssl","errorstack"],"name":"result"}}],[11,"connect","","Initiates a client-side TLS handshake.",97,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"accept","","Initiates a server-side TLS handshake.",97,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a shared reference to the inner stream.",99,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",99,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",99,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"error","","Returns the underlying error which interrupted this handshake.",99,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"into_error","","Consumes `self`, returning its error.",99,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"handshake","","Restarts the handshake process.",99,{"inputs":[{"name":"self"}],"output":{"generics":["sslstream","handshakeerror"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",100,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",100,null],[11,"shutdown","","Shuts down the session.",100,{"inputs":[{"name":"self"}],"output":{"generics":["shutdownresult","error"],"name":"result"}}],[11,"get_ref","","Returns a shared reference to the underlying stream.",100,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",100,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"ssl","","Returns a shared reference to the `Ssl` object associated with this stream.",100,{"inputs":[{"name":"self"}],"output":{"name":"sslref"}}],[11,"read","","",100,null],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"shutdownresult"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"shutdownresult"}],"output":{"name":"bool"}}],[0,"stack","openssl","",null,null],[3,"Stack","openssl::stack","An owned stack of `T`.",null,null],[3,"IntoIter","","",null,null],[3,"StackRef","","",null,null],[3,"Iter","","An iterator over the stack's contents.",null,null],[3,"IterMut","","A mutable iterator over the stack's contents.",null,null],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",null,null],[16,"StackType","","The C stack type for this element.",101,null],[11,"new","","",102,{"inputs":[],"output":{"generics":["stack","errorstack"],"name":"result"}}],[11,"drop","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",102,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"as_ref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"borrow","","",102,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"from_ptr","","",102,null],[11,"as_ptr","","",102,null],[11,"deref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"deref_mut","","",102,{"inputs":[{"name":"self"}],"output":{"name":"stackref"}}],[11,"drop","","",103,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",103,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"len","","Returns the number of items in the stack",104,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","",104,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","",104,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"get","","Returns a reference to the element at the given index in the stack or `None` if the index is out of bounds",104,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the element at the given index in the stack or `None` if the index is out of bounds",104,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"push","","Pushes a value onto the top of the stack.",104,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"pop","","Removes the last element from the stack and returns it.",104,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","",104,null],[11,"index_mut","","",104,null],[11,"next","","",105,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",106,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[0,"string","openssl","",null,null],[3,"OpensslString","openssl::string","",null,null],[3,"OpensslStringRef","","",null,null],[11,"from_ptr","","",107,null],[11,"as_ptr","","",107,null],[11,"drop","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",107,{"inputs":[{"name":"self"}],"output":{"name":"opensslstringref"}}],[11,"deref_mut","","",107,{"inputs":[{"name":"self"}],"output":{"name":"opensslstringref"}}],[11,"borrow","","",107,{"inputs":[{"name":"self"}],"output":{"name":"opensslstringref"}}],[11,"as_ref","","",107,{"inputs":[{"name":"self"}],"output":{"name":"opensslstringref"}}],[11,"from_raw_parts","","",107,null],[11,"from_null_terminated","","",107,null],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",108,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"symm","openssl","High level interface to certain symmetric ciphers.",null,null],[3,"Cipher","openssl::symm","Represents a particular cipher algorithm.",null,null],[3,"Crypter","","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",109,null],[13,"Decrypt","","",109,null],[5,"encrypt","","Encrypts data in one go, and returns the encrypted data.",null,null],[5,"decrypt","","Decrypts data in one go, and returns the decrypted data.",null,null],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",null,null],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",null,null],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"cipher"}}],[11,"aes_128_ecb","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cbc","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_xts","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_ctr","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb1","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb128","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb8","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_gcm","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_ecb","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cbc","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_xts","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_ctr","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb1","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb128","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb8","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_gcm","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_cbc","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_ecb","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_cfb64","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_ofb","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"des_cbc","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"des_ecb","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"rc4","","",110,{"inputs":[],"output":{"name":"cipher"}}],[11,"from_ptr","","",110,null],[11,"as_ptr","","",110,null],[11,"key_len","","Returns the length of keys used with this cipher.",110,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the cipher does not use an IV.",110,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"block_size","","Returns the block size of the cipher.",110,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `Crypter`.  The initialisation vector, `iv`, is not necesarry for certain types of `Cipher`.",111,null],[11,"pad","","Enables or disables padding.",111,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",111,null],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the cipher.",111,null],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted bytes into `output`.",111,null],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data to `output`.",111,null],[11,"get_tag","","Retrieves the authentication tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",111,null],[11,"drop","","",111,{"inputs":[{"name":"self"}],"output":null}],[0,"types","openssl","",null,null],[8,"OpenSslType","openssl::types","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",112,null],[16,"Ref","","The type representing a reference to this type.",112,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",112,null],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",112,null],[8,"OpenSslTypeRef","","A trait implemented by types which reference borrowed foreign types.",null,null],[16,"CType","","The raw C type.",113,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",113,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",113,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",113,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, \"OpenSSL 0.9.5a 1 Apr 2000\".",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form \"compiler: ...\" if available or \"compiler: information not available\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form \"built on: ...\" if available or \"built on: date not available\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The \"Configure\" target of the library build in the form \"platform: ...\" if available or \"platform: information not available\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form \"OPENSSLDIR: \"...\"\" if available or \"OPENSSLDIR: N/A\" otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[0,"x509","openssl","",null,null],[3,"X509FileType","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509StoreContextRef","","",null,null],[3,"X509Generator","","",null,null],[3,"X509Builder","","A builder type which can create `X509` objects.",null,null],[3,"X509","","",null,null],[3,"X509Ref","","",null,null],[3,"X509v3Context","","A context object required to construct certain X509 extension values.",null,null],[3,"X509Extension","","",null,null],[3,"X509ExtensionRef","","",null,null],[3,"X509NameBuilder","","",null,null],[3,"X509Name","","",null,null],[3,"X509NameRef","","",null,null],[3,"X509NameEntries","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509NameEntryRef","","",null,null],[3,"X509ReqBuilder","","",null,null],[3,"X509Req","","",null,null],[3,"X509ReqRef","","",null,null],[3,"X509VerifyError","","",null,null],[3,"GeneralName","","",null,null],[3,"GeneralNameRef","","",null,null],[3,"X509Algorithm","","",null,null],[3,"X509AlgorithmRef","","",null,null],[0,"extension","","",null,null],[3,"BasicConstraints","openssl::x509::extension","",null,null],[3,"KeyUsage","","",null,null],[3,"ExtendedKeyUsage","","",null,null],[3,"SubjectKeyIdentifier","","",null,null],[3,"AuthorityKeyIdentifier","","",null,null],[3,"SubjectAlternativeName","","",null,null],[4,"ExtensionType","","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",114,null],[13,"ExtKeyUsage","","",114,null],[13,"SubjectAltName","","",114,null],[13,"IssuerAltName","","",114,null],[13,"OtherNid","","",114,null],[13,"OtherStr","","",114,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",115,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",115,null],[13,"SubjectAltName","","Subject Alternative Names",115,null],[13,"IssuerAltName","","Issuer Alternative Names",115,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",115,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",115,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",116,null],[13,"NonRepudiation","","",116,null],[13,"KeyEncipherment","","",116,null],[13,"DataEncipherment","","",116,null],[13,"KeyAgreement","","",116,null],[13,"KeyCertSign","","",116,null],[13,"CRLSign","","",116,null],[13,"EncipherOnly","","",116,null],[13,"DecipherOnly","","",116,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",117,null],[13,"ClientAuth","","",117,null],[13,"CodeSigning","","",117,null],[13,"EmailProtection","","",117,null],[13,"TimeStamping","","",117,null],[13,"MsCodeInd","","",117,null],[13,"MsCodeCom","","",117,null],[13,"MsCtlSign","","",117,null],[13,"MsSgc","","",117,null],[13,"MsEfs","","",117,null],[13,"NsSgc","","",117,null],[13,"Other","","An arbitrary key usage by OID.",117,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",118,null],[13,"Email","","",118,null],[13,"DNS","","",118,null],[13,"Directory","","",118,null],[13,"URI","","",118,null],[13,"IPAddress","","",118,null],[13,"RegisteredID","","",118,null],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"extensiontype"}}],[11,"hash","","",114,null],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"extension"}}],[11,"get_type","","",115,{"inputs":[{"name":"self"}],"output":{"name":"extensiontype"}}],[11,"get_nid","","",114,{"inputs":[{"name":"self"}],"output":{"generics":["nid"],"name":"option"}}],[11,"get_name","","",114,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"to_string","","",115,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"keyusageoption"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"extkeyusageoption"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"altnameoption"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","",119,{"inputs":[],"output":{"name":"basicconstraints"}}],[11,"critical","","",119,{"inputs":[{"name":"self"}],"output":{"name":"basicconstraints"}}],[11,"ca","","",119,{"inputs":[{"name":"self"}],"output":{"name":"basicconstraints"}}],[11,"pathlen","","",119,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"basicconstraints"}}],[11,"build","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new","","",120,{"inputs":[],"output":{"name":"keyusage"}}],[11,"critical","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"digital_signature","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"non_repudiation","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"key_encipherment","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"data_encipherment","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"key_agreement","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"key_cert_sign","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"crl_sign","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"encipher_only","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"decipher_only","","",120,{"inputs":[{"name":"self"}],"output":{"name":"keyusage"}}],[11,"build","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new","","",121,{"inputs":[],"output":{"name":"extendedkeyusage"}}],[11,"critical","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"server_auth","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"client_auth","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"code_signing","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"time_stamping","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_code_ind","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_code_com","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_ctl_sign","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_sgc","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ms_efs","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"ns_sgc","","",121,{"inputs":[{"name":"self"}],"output":{"name":"extendedkeyusage"}}],[11,"other","","",121,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"extendedkeyusage"}}],[11,"build","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new","","",122,{"inputs":[],"output":{"name":"subjectkeyidentifier"}}],[11,"critical","","",122,{"inputs":[{"name":"self"}],"output":{"name":"subjectkeyidentifier"}}],[11,"build","","",122,{"inputs":[{"name":"self"},{"name":"x509v3context"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new","","",123,{"inputs":[],"output":{"name":"authoritykeyidentifier"}}],[11,"critical","","",123,{"inputs":[{"name":"self"}],"output":{"name":"authoritykeyidentifier"}}],[11,"keyid","","",123,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"authoritykeyidentifier"}}],[11,"issuer","","",123,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"authoritykeyidentifier"}}],[11,"build","","",123,{"inputs":[{"name":"self"},{"name":"x509v3context"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new","","",124,{"inputs":[],"output":{"name":"subjectalternativename"}}],[11,"critical","","",124,{"inputs":[{"name":"self"}],"output":{"name":"subjectalternativename"}}],[11,"email","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"uri","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"dns","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"rid","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"ip","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"dir_name","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"other_name","","",124,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"subjectalternativename"}}],[11,"build","","",124,{"inputs":[{"name":"self"},{"name":"x509v3context"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[0,"store","openssl::x509","",null,null],[3,"X509StoreBuilder","openssl::x509::store","",null,null],[3,"X509StoreBuilderRef","","",null,null],[3,"X509Store","","",null,null],[3,"X509StoreRef","","",null,null],[11,"from_ptr","","",125,null],[11,"as_ptr","","",125,null],[11,"drop","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"deref_mut","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"borrow","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"as_ref","","",125,{"inputs":[{"name":"self"}],"output":{"name":"x509storebuilderref"}}],[11,"new","","Returns a builder for a certificate store.",125,{"inputs":[],"output":{"generics":["x509storebuilder","errorstack"],"name":"result"}}],[11,"build","","Constructs the `X509Store`.",125,{"inputs":[{"name":"self"}],"output":{"name":"x509store"}}],[11,"add_cert","","Adds a certificate to the certificate store.",126,{"inputs":[{"name":"self"},{"name":"x509"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_default_paths","","Load certificates from their default locations.",126,{"inputs":[{"name":"self"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"from_ptr","","",127,null],[11,"as_ptr","","",127,null],[11,"drop","","",127,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",127,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[11,"deref_mut","","",127,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[11,"borrow","","",127,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[11,"as_ref","","",127,{"inputs":[{"name":"self"}],"output":{"name":"x509storeref"}}],[17,"X509_FILETYPE_PEM","openssl::x509","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[11,"as_raw","","",128,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_ptr","","",129,null],[11,"as_ptr","","",129,null],[11,"drop","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",129,{"inputs":[{"name":"self"}],"output":{"name":"x509storecontextref"}}],[11,"deref_mut","","",129,{"inputs":[{"name":"self"}],"output":{"name":"x509storecontextref"}}],[11,"borrow","","",129,{"inputs":[{"name":"self"}],"output":{"name":"x509storecontextref"}}],[11,"as_ref","","",129,{"inputs":[{"name":"self"}],"output":{"name":"x509storecontextref"}}],[11,"error","","",130,{"inputs":[{"name":"self"}],"output":{"generics":["x509verifyerror"],"name":"option"}}],[11,"current_cert","","",130,{"inputs":[{"name":"self"}],"output":{"generics":["x509ref"],"name":"option"}}],[11,"error_depth","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"chain","","",130,{"inputs":[{"name":"self"}],"output":{"generics":["stackref"],"name":"option"}}],[11,"ssl","","Returns a reference to the `Ssl` associated with this context.",130,{"inputs":[{"name":"self"}],"output":{"generics":["option","errorstack"],"name":"result"}}],[11,"new","","Creates a new generator with the following defaults:",131,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",131,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"add_name","","Add attribute to the name of the certificate",131,{"inputs":[{"name":"self"},{"name":"string"},{"name":"string"}],"output":{"name":"x509generator"}}],[11,"add_names","","Add multiple attributes to the name of the certificate",131,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"x509generator"}}],[11,"add_extension","","Add an extension to a certificate",131,{"inputs":[{"name":"self"},{"name":"extension"}],"output":{"name":"x509generator"}}],[11,"add_extensions","","Add multiple extensions to a certificate",131,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"x509generator"}}],[11,"set_sign_hash","","",131,{"inputs":[{"name":"self"},{"name":"messagedigest"}],"output":{"name":"x509generator"}}],[11,"sign","","Sets the certificate public-key, then self-sign and return it",131,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"generics":["x509","errorstack"],"name":"result"}}],[11,"request","","Obtain a certificate signing request (CSR)",131,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"generics":["x509req","errorstack"],"name":"result"}}],[11,"new","","Creates a new builder.",132,{"inputs":[],"output":{"generics":["x509builder","errorstack"],"name":"result"}}],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",132,{"inputs":[{"name":"self"},{"name":"asn1timeref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",132,{"inputs":[{"name":"self"},{"name":"asn1timeref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_version","","Sets the version of the certificate.",132,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_serial_number","","Sets the serial number of the certificate.",132,{"inputs":[{"name":"self"},{"name":"asn1integerref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_issuer_name","","Sets the issuer name of the certificate.",132,{"inputs":[{"name":"self"},{"name":"x509nameref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_subject_name","","Sets the subject name of the certificate.",132,{"inputs":[{"name":"self"},{"name":"x509nameref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_pubkey","","Sets the public key associated with the certificate.",132,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"x509v3_context","","Returns a context object which is needed to create certain X509 extension values.",132,{"inputs":[{"name":"self"},{"generics":["x509ref"],"name":"option"},{"generics":["confref"],"name":"option"}],"output":{"name":"x509v3context"}}],[11,"append_extension","","Adds an X509 extension value to the certificate.",132,{"inputs":[{"name":"self"},{"name":"x509extension"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"sign","","Signs the certificate with a private key.",132,{"inputs":[{"name":"self"},{"name":"pkeyref"},{"name":"messagedigest"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"build","","Consumes the builder, returning the certificate.",132,{"inputs":[{"name":"self"}],"output":{"name":"x509"}}],[11,"from_ptr","","",133,null],[11,"as_ptr","","",133,null],[11,"drop","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",133,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"deref_mut","","",133,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"borrow","","",133,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"as_ref","","",133,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"subject_name","","",134,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"subject_alt_names","","Returns this certificate's SAN entries, if they exist.",134,{"inputs":[{"name":"self"}],"output":{"generics":["stack"],"name":"option"}}],[11,"public_key","","",134,{"inputs":[{"name":"self"}],"output":{"generics":["pkey","errorstack"],"name":"result"}}],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",134,{"inputs":[{"name":"self"},{"name":"messagedigest"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"not_after","","Returns the certificate's Not After validity period.",134,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"not_before","","Returns the certificate's Not Before validity period.",134,{"inputs":[{"name":"self"}],"output":{"name":"asn1timeref"}}],[11,"signature","","Returns the certificate's signature",134,{"inputs":[{"name":"self"}],"output":{"name":"asn1bitstringref"}}],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",134,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the certificate's Authority Information Access field.",134,{"inputs":[{"name":"self"}],"output":{"generics":["stack","errorstack"],"name":"result"}}],[11,"issued","","Checks that this certificate issued `subject`.",134,{"inputs":[{"name":"self"},{"name":"x509ref"}],"output":{"generics":["x509verifyerror"],"name":"result"}}],[11,"to_pem","","Serializes this value to PEM.",134,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"to_der","","Serializes this value to DER.",134,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"to_owned","","",134,{"inputs":[{"name":"self"}],"output":{"name":"x509"}}],[11,"builder","","Returns a new builder.",133,{"inputs":[],"output":{"generics":["x509builder","errorstack"],"name":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",133,null],[11,"from_der","","Deserializes a value from DER-formatted data.",133,null],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",133,null],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"x509"}}],[11,"as_ref","","",134,{"inputs":[{"name":"self"}],"output":{"name":"x509ref"}}],[11,"as_ptr","","",135,null],[11,"from_ptr","","",136,null],[11,"as_ptr","","",136,null],[11,"drop","","",136,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",136,{"inputs":[{"name":"self"}],"output":{"name":"x509extensionref"}}],[11,"deref_mut","","",136,{"inputs":[{"name":"self"}],"output":{"name":"x509extensionref"}}],[11,"borrow","","",136,{"inputs":[{"name":"self"}],"output":{"name":"x509extensionref"}}],[11,"as_ref","","",136,{"inputs":[{"name":"self"}],"output":{"name":"x509extensionref"}}],[11,"new","","Constructs an X509 extension value. See `man x509v3_config` for information on supported names and their value formats.",136,{"inputs":[{"generics":["confref"],"name":"option"},{"generics":["x509v3context"],"name":"option"},{"name":"str"},{"name":"str"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new_nid","","Constructs an X509 extension value. See `man x509v3_config` for information on supported extensions and their value formats.",136,{"inputs":[{"generics":["confref"],"name":"option"},{"generics":["x509v3context"],"name":"option"},{"name":"nid"},{"name":"str"}],"output":{"generics":["x509extension","errorstack"],"name":"result"}}],[11,"new","","",137,{"inputs":[],"output":{"generics":["x509namebuilder","errorstack"],"name":"result"}}],[11,"append_entry_by_text","","",137,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"append_entry_by_nid","","",137,{"inputs":[{"name":"self"},{"name":"nid"},{"name":"str"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"build","","",137,{"inputs":[{"name":"self"}],"output":{"name":"x509name"}}],[11,"from_ptr","","",138,null],[11,"as_ptr","","",138,null],[11,"drop","","",138,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",138,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"deref_mut","","",138,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"borrow","","",138,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"as_ref","","",138,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"builder","","Returns a new builder.",138,{"inputs":[],"output":{"generics":["x509namebuilder","errorstack"],"name":"result"}}],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted certificates.",138,{"inputs":[{"name":"p"}],"output":{"generics":["stack","errorstack"],"name":"result"}}],[11,"entries_by_nid","","",139,{"inputs":[{"name":"self"},{"name":"nid"}],"output":{"name":"x509nameentries"}}],[11,"next","","",140,{"inputs":[{"name":"self"}],"output":{"generics":["x509nameentryref"],"name":"option"}}],[11,"from_ptr","","",141,null],[11,"as_ptr","","",141,null],[11,"drop","","",141,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",141,{"inputs":[{"name":"self"}],"output":{"name":"x509nameentryref"}}],[11,"deref_mut","","",141,{"inputs":[{"name":"self"}],"output":{"name":"x509nameentryref"}}],[11,"borrow","","",141,{"inputs":[{"name":"self"}],"output":{"name":"x509nameentryref"}}],[11,"as_ref","","",141,{"inputs":[{"name":"self"}],"output":{"name":"x509nameentryref"}}],[11,"data","","",142,{"inputs":[{"name":"self"}],"output":{"name":"asn1stringref"}}],[11,"new","","",143,{"inputs":[],"output":{"generics":["x509reqbuilder","errorstack"],"name":"result"}}],[11,"set_version","","",143,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_subject_name","","",143,{"inputs":[{"name":"self"},{"name":"x509nameref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"set_pubkey","","",143,{"inputs":[{"name":"self"},{"name":"pkeyref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"x509v3_context","","",143,{"inputs":[{"name":"self"},{"generics":["confref"],"name":"option"}],"output":{"name":"x509v3context"}}],[11,"add_extensions","","",143,{"inputs":[{"name":"self"},{"name":"stackref"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"sign","","",143,{"inputs":[{"name":"self"},{"name":"pkeyref"},{"name":"messagedigest"}],"output":{"generics":["errorstack"],"name":"result"}}],[11,"build","","",143,{"inputs":[{"name":"self"}],"output":{"name":"x509req"}}],[11,"from_ptr","","",144,null],[11,"as_ptr","","",144,null],[11,"drop","","",144,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",144,{"inputs":[{"name":"self"}],"output":{"name":"x509reqref"}}],[11,"deref_mut","","",144,{"inputs":[{"name":"self"}],"output":{"name":"x509reqref"}}],[11,"borrow","","",144,{"inputs":[{"name":"self"}],"output":{"name":"x509reqref"}}],[11,"as_ref","","",144,{"inputs":[{"name":"self"}],"output":{"name":"x509reqref"}}],[11,"builder","","",144,{"inputs":[],"output":{"generics":["x509reqbuilder","errorstack"],"name":"result"}}],[11,"from_pem","","Reads CSR from PEM",144,null],[11,"from_der","","Deserializes a value from DER-formatted data.",144,null],[11,"to_pem","","Serializes this value to PEM.",145,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"to_der","","Serializes this value to DER.",145,{"inputs":[{"name":"self"}],"output":{"generics":["vec","errorstack"],"name":"result"}}],[11,"version","","",145,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"subject_name","","",145,{"inputs":[{"name":"self"}],"output":{"name":"x509nameref"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",146,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_raw","","Creates an `X509VerifyError` from a raw error number.",146,{"inputs":[{"name":"c_long"}],"output":{"generics":["x509verifyerror"],"name":"option"}}],[11,"as_raw","","",146,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"error_string","","",146,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_ptr","","",147,null],[11,"as_ptr","","",147,null],[11,"drop","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",147,{"inputs":[{"name":"self"}],"output":{"name":"generalnameref"}}],[11,"deref_mut","","",147,{"inputs":[{"name":"self"}],"output":{"name":"generalnameref"}}],[11,"borrow","","",147,{"inputs":[{"name":"self"}],"output":{"name":"generalnameref"}}],[11,"as_ref","","",147,{"inputs":[{"name":"self"}],"output":{"name":"generalnameref"}}],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",148,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",148,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_ptr","","",149,null],[11,"as_ptr","","",149,null],[11,"drop","","",149,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",149,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"deref_mut","","",149,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"borrow","","",149,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"as_ref","","",149,{"inputs":[{"name":"self"}],"output":{"name":"x509algorithmref"}}],[11,"object","","Returns the ASN.1 OID of this algorithm.",150,{"inputs":[{"name":"self"}],"output":{"name":"asn1objectref"}}]],"paths":[[3,"KeyError"],[3,"AesKey"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1Time"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1StringRef"],[3,"Asn1Integer"],[3,"Asn1IntegerRef"],[3,"Asn1BitString"],[3,"Asn1BitStringRef"],[3,"Asn1Object"],[3,"Asn1ObjectRef"],[3,"BigNumContext"],[3,"BigNum"],[3,"BigNumRef"],[3,"CmsContentInfo"],[3,"CmsContentInfoRef"],[3,"ConfMethod"],[3,"Conf"],[3,"Dh"],[3,"DhRef"],[3,"Dsa"],[3,"DsaRef"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPoint"],[3,"EcPointRef"],[3,"EcKey"],[3,"EcKeyRef"],[3,"EcKeyBuilder"],[3,"EcKeyBuilderRef"],[3,"ErrorStack"],[3,"Error"],[3,"Index"],[3,"MessageDigest"],[3,"Hasher"],[3,"DigestBytes"],[3,"Nid"],[3,"Status"],[3,"Flag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponse"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"OcspOneReq"],[3,"ParsedPkcs12"],[3,"Pkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"PKey"],[3,"PKeyRef"],[3,"PKeyCtx"],[3,"PKeyCtxRef"],[3,"Padding"],[3,"Rsa"],[3,"RsaRef"],[3,"Signer"],[3,"Verifier"],[3,"Sha1"],[3,"Sha224"],[3,"Sha256"],[3,"Sha384"],[3,"Sha512"],[3,"CipherBits"],[4,"Error"],[4,"HandshakeError"],[4,"SniError"],[4,"ShutdownResult"],[3,"RetryError"],[3,"SslConnectorBuilder"],[3,"SslConnector"],[3,"ConnectConfiguration"],[3,"SslAcceptorBuilder"],[3,"SslAcceptor"],[3,"SslOption"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"StatusType"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipher"],[3,"SslCipherRef"],[3,"SslSession"],[3,"SslSessionRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[8,"Stackable"],[3,"Stack"],[3,"IntoIter"],[3,"StackRef"],[3,"Iter"],[3,"IterMut"],[3,"OpensslString"],[3,"OpensslStringRef"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[8,"OpenSslType"],[8,"OpenSslTypeRef"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509Store"],[3,"X509FileType"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Generator"],[3,"X509Builder"],[3,"X509"],[3,"X509Ref"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyError"],[3,"GeneralName"],[3,"GeneralNameRef"],[3,"X509Algorithm"],[3,"X509AlgorithmRef"]]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"stack_st_ASN1_OBJECT","openssl_sys","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",1,null],[3,"stack_st_X509_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_X509_ATTRIBUTE","","",null,null],[12,"stack","","",3,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",4,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",5,null],[3,"stack_st_void","","",null,null],[12,"stack","","",6,null],[3,"stack_st_SSL_CIPHER","","",null,null],[12,"stack","","",7,null],[3,"stack_st_OPENSSL_STRING","","",null,null],[12,"stack","","",8,null],[3,"_STACK","","",null,null],[12,"num","","",9,null],[12,"data","","",9,null],[12,"sorted","","",9,null],[12,"num_alloc","","",9,null],[12,"comp","","",9,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",10,null],[12,"name","","",10,null],[12,"bwrite","","",10,null],[12,"bread","","",10,null],[12,"bputs","","",10,null],[12,"bgets","","",10,null],[12,"ctrl","","",10,null],[12,"create","","",10,null],[12,"destroy","","",10,null],[12,"callback_ctrl","","",10,null],[3,"RSA","","",null,null],[12,"pad","","",11,null],[12,"version","","",11,null],[12,"meth","","",11,null],[12,"engine","","",11,null],[12,"n","","",11,null],[12,"e","","",11,null],[12,"d","","",11,null],[12,"p","","",11,null],[12,"q","","",11,null],[12,"dmp1","","",11,null],[12,"dmq1","","",11,null],[12,"iqmp","","",11,null],[12,"ex_data","","",11,null],[12,"references","","",11,null],[12,"flags","","",11,null],[12,"_method_mod_n","","",11,null],[12,"_method_mod_p","","",11,null],[12,"_method_mod_q","","",11,null],[12,"bignum_data","","",11,null],[12,"blinding","","",11,null],[12,"mt_blinding","","",11,null],[3,"DSA","","",null,null],[12,"pad","","",12,null],[12,"version","","",12,null],[12,"write_params","","",12,null],[12,"p","","",12,null],[12,"q","","",12,null],[12,"g","","",12,null],[12,"pub_key","","",12,null],[12,"priv_key","","",12,null],[12,"kinv","","",12,null],[12,"r","","",12,null],[12,"flags","","",12,null],[12,"method_mont_p","","",12,null],[12,"references","","",12,null],[12,"ex_data","","",12,null],[12,"meth","","",12,null],[12,"engine","","",12,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",13,null],[12,"save_type","","",13,null],[12,"references","","",13,null],[12,"ameth","","",13,null],[12,"engine","","",13,null],[12,"pkey","","",13,null],[12,"save_parameters","","",13,null],[12,"attributes","","",13,null],[3,"BIO","","",null,null],[12,"method","","",14,null],[12,"callback","","",14,null],[12,"cb_arg","","",14,null],[12,"init","","",14,null],[12,"shutdown","","",14,null],[12,"flags","","",14,null],[12,"retry_reason","","",14,null],[12,"num","","",14,null],[12,"ptr","","",14,null],[12,"next_bio","","",14,null],[12,"prev_bio","","",14,null],[12,"references","","",14,null],[12,"num_read","","",14,null],[12,"num_write","","",14,null],[12,"ex_data","","",14,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",15,null],[12,"dummy","","",15,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",16,null],[12,"block_size","","",16,null],[12,"key_len","","",16,null],[12,"iv_len","","",16,null],[12,"flags","","",16,null],[12,"init","","",16,null],[12,"do_cipher","","",16,null],[12,"cleanup","","",16,null],[12,"ctx_size","","",16,null],[12,"set_asn1_parameters","","",16,null],[12,"get_asn1_parameters","","",16,null],[12,"ctrl","","",16,null],[12,"app_data","","",16,null],[3,"HMAC_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",17,null],[12,"top","","",17,null],[12,"dmax","","",17,null],[12,"neg","","",17,null],[12,"flags","","",17,null],[3,"DH","","",null,null],[12,"pad","","",18,null],[12,"version","","",18,null],[12,"p","","",18,null],[12,"g","","",18,null],[12,"length","","",18,null],[12,"pub_key","","",18,null],[12,"priv_key","","",18,null],[12,"flags","","",18,null],[12,"method_mont_p","","",18,null],[12,"q","","",18,null],[12,"j","","",18,null],[12,"seed","","",18,null],[12,"seedlen","","",18,null],[12,"counter","","",18,null],[12,"references","","",18,null],[12,"ex_data","","",18,null],[12,"meth","","",18,null],[12,"engine","","",18,null],[3,"X509","","",null,null],[12,"cert_info","","",19,null],[12,"sig_alg","","",19,null],[12,"signature","","",19,null],[12,"valid","","",19,null],[12,"references","","",19,null],[12,"name","","",19,null],[12,"ex_data","","",19,null],[12,"ex_pathlen","","",19,null],[12,"ex_pcpathlen","","",19,null],[12,"ex_flags","","",19,null],[12,"ex_kusage","","",19,null],[12,"ex_xkusage","","",19,null],[12,"ex_nscert","","",19,null],[3,"X509_CINF","","",null,null],[12,"validity","","",20,null],[12,"extensions","","",20,null],[3,"X509_ALGOR","","",null,null],[12,"algorithm","","",21,null],[3,"ASN1_ENCODING","","",null,null],[12,"enc","","",22,null],[12,"len","","",22,null],[12,"modified","","",22,null],[3,"X509_VAL","","",null,null],[12,"notBefore","","",23,null],[12,"notAfter","","",23,null],[3,"X509_REQ_INFO","","",null,null],[12,"enc","","",24,null],[12,"version","","",24,null],[12,"subject","","",24,null],[12,"attributes","","",24,null],[3,"X509_REQ","","",null,null],[12,"req_info","","",25,null],[3,"SSL","","",null,null],[12,"server","","",26,null],[3,"SSL_CTX","","",null,null],[12,"references","","",27,null],[3,"SSL_SESSION","","",null,null],[12,"master_key_length","","",28,null],[12,"master_key","","",28,null],[12,"references","","",28,null],[3,"SRP_CTX","","",null,null],[3,"AES_KEY","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",29,null],[12,"d","","",29,null],[3,"X509V3_CTX","","",null,null],[3,"SHA_CTX","","",null,null],[12,"h0","","",30,null],[12,"h1","","",30,null],[12,"h2","","",30,null],[12,"h3","","",30,null],[12,"h4","","",30,null],[12,"Nl","","",30,null],[12,"Nh","","",30,null],[12,"data","","",30,null],[12,"num","","",30,null],[3,"SHA256_CTX","","",null,null],[12,"h","","",31,null],[12,"Nl","","",31,null],[12,"Nh","","",31,null],[12,"data","","",31,null],[12,"num","","",31,null],[12,"md_len","","",31,null],[3,"SHA512_CTX","","",null,null],[12,"h","","",32,null],[12,"Nl","","",32,null],[12,"Nh","","",32,null],[12,"num","","",32,null],[12,"md_len","","",32,null],[4,"PKCS12","","",null,null],[4,"ASN1_INTEGER","","",null,null],[4,"ASN1_GENERALIZEDTIME","","",null,null],[4,"ASN1_STRING","","",null,null],[4,"ASN1_BIT_STRING","","",null,null],[4,"ASN1_TIME","","",null,null],[4,"ASN1_TYPE","","",null,null],[4,"ASN1_OBJECT","","",null,null],[4,"BN_CTX","","",null,null],[4,"BN_GENCB","","",null,null],[4,"CMS_ContentInfo","","",null,null],[4,"CONF","","",null,null],[4,"CONF_METHOD","","",null,null],[4,"COMP_METHOD","","",null,null],[4,"EC_KEY","","",null,null],[4,"EC_GROUP","","",null,null],[4,"EC_METHOD","","",null,null],[4,"EC_POINT","","",null,null],[4,"ENGINE","","",null,null],[4,"EVP_CIPHER_CTX","","",null,null],[4,"EVP_MD","","",null,null],[4,"EVP_PKEY_CTX","","",null,null],[4,"OCSP_BASICRESP","","",null,null],[4,"OCSP_CERTID","","",null,null],[4,"OCSP_RESPONSE","","",null,null],[4,"OCSP_REQUEST","","",null,null],[4,"OCSP_ONEREQ","","",null,null],[4,"SSL_CIPHER","","",null,null],[4,"SSL_METHOD","","",null,null],[4,"X509_CRL","","",null,null],[4,"X509_EXTENSION","","",null,null],[4,"X509_NAME","","",null,null],[4,"X509_NAME_ENTRY","","",null,null],[4,"X509_STORE","","",null,null],[4,"X509_STORE_CTX","","",null,null],[4,"bio_st","","",null,null],[4,"DH_METHOD","","",null,null],[4,"RSA_METHOD","","",null,null],[4,"BN_MONT_CTX","","",null,null],[4,"BN_BLINDING","","",null,null],[4,"DSA_METHOD","","",null,null],[4,"EVP_PKEY_ASN1_METHOD","","",null,null],[4,"point_conversion_form_t","","",null,null],[13,"POINT_CONVERSION_COMPRESSED","","",33,null],[13,"POINT_CONVERSION_UNCOMPRESSED","","",33,null],[13,"POINT_CONVERSION_HYBRID","","",33,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"SSL_session_reused","","",null,null],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"EVP_PKEY_CTX_set_rsa_padding","","",null,null],[5,"EVP_PKEY_CTX_get_rsa_padding","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_set_tmp_ecdh","","",null,null],[5,"SSL_set_tmp_dh","","",null,null],[5,"SSL_set_tmp_ecdh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_set_tlsext_status_type","","",null,null],[5,"SSL_CTX_set_tlsext_status_cb","","",null,null],[5,"SSL_CTX_set_tlsext_status_arg","","",null,null],[5,"SSL_CTX_get_extra_chain_certs","","",null,null],[5,"SSL_get_tlsext_status_ocsp_resp","","",null,null],[5,"SSL_set_tlsext_status_ocsp_resp","","",null,null],[5,"ERR_GET_LIB","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"ERR_GET_FUNC","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"ERR_GET_REASON","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"BIO_new","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"get_rfc2409_prime_768","","",null,null],[5,"get_rfc2409_prime_1024","","",null,null],[5,"get_rfc3526_prime_1536","","",null,null],[5,"get_rfc3526_prime_2048","","",null,null],[5,"get_rfc3526_prime_3072","","",null,null],[5,"get_rfc3526_prime_4096","","",null,null],[5,"get_rfc3526_prime_6144","","",null,null],[5,"get_rfc3526_prime_8192","","",null,null],[5,"CRYPTO_malloc","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"OCSP_cert_to_id","","",null,null],[5,"PKCS12_create","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"TLSv1_1_method","","",null,null],[5,"TLSv1_2_method","","",null,null],[5,"DTLSv1_method","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_tmp_ecdh_callback","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_tmp_ecdh_callback","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_get_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_NAME_add_entry_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"X509_STORE_CTX_get_chain","","",null,null],[5,"X509V3_EXT_nconf_nid","","",null,null],[5,"X509V3_EXT_nconf","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"CRYPTO_add_lock","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_bits","","",null,null],[5,"sk_new_null","","",null,null],[5,"sk_num","","",null,null],[5,"sk_value","","",null,null],[5,"sk_free","","",null,null],[5,"sk_push","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[5,"AES_set_encrypt_key","","",null,null],[5,"AES_set_decrypt_key","","",null,null],[5,"AES_ige_encrypt","","",null,null],[5,"ASN1_INTEGER_get","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_GENERALIZEDTIME_free","","",null,null],[5,"ASN1_GENERALIZEDTIME_print","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"ASN1_BIT_STRING_free","","",null,null],[5,"ASN1_OBJECT_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear","","",null,null],[5,"BN_free","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"BN_to_ASN1_INTEGER","","",null,null],[5,"NCONF_default","","",null,null],[5,"NCONF_new","","",null,null],[5,"NCONF_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_new","","",null,null],[5,"DH_free","","",null,null],[5,"EC_KEY_new","","",null,null],[5,"EC_KEY_new_by_curve_name","","",null,null],[5,"EC_KEY_dup","","",null,null],[5,"EC_KEY_up_ref","","",null,null],[5,"EC_KEY_set_group","","",null,null],[5,"EC_KEY_get0_group","","",null,null],[5,"EC_KEY_set_public_key","","",null,null],[5,"EC_KEY_get0_public_key","","",null,null],[5,"EC_KEY_set_private_key","","",null,null],[5,"EC_KEY_get0_private_key","","",null,null],[5,"EC_KEY_generate_key","","",null,null],[5,"EC_KEY_check_key","","",null,null],[5,"EC_KEY_free","","",null,null],[5,"EC_KEY_set_public_key_affine_coordinates","","",null,null],[5,"EC_GF2m_simple_method","","",null,null],[5,"EC_GROUP_new","","",null,null],[5,"EC_GROUP_new_curve_GFp","","",null,null],[5,"EC_GROUP_new_curve_GF2m","","",null,null],[5,"EC_GROUP_new_by_curve_name","","",null,null],[5,"EC_GROUP_get_curve_GFp","","",null,null],[5,"EC_GROUP_get_curve_GF2m","","",null,null],[5,"EC_GROUP_get_degree","","",null,null],[5,"EC_GROUP_get_order","","",null,null],[5,"EC_GROUP_set_asn1_flag","","",null,null],[5,"EC_GROUP_free","","",null,null],[5,"EC_POINT_new","","",null,null],[5,"EC_POINT_add","","",null,null],[5,"EC_POINT_mul","","",null,null],[5,"EC_POINT_invert","","",null,null],[5,"EC_POINT_point2oct","","",null,null],[5,"EC_POINT_oct2point","","",null,null],[5,"EC_POINT_cmp","","",null,null],[5,"EC_POINT_free","","",null,null],[5,"EC_POINT_get_affine_coordinates_GFp","","",null,null],[5,"EC_POINT_get_affine_coordinates_GF2m","","",null,null],[5,"ERR_peek_last_error","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_get_error_line_data","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_clear_error","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_xts","","",null,null],[5,"EVP_aes_128_ctr","","",null,null],[5,"EVP_aes_128_gcm","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_xts","","",null,null],[5,"EVP_aes_256_ctr","","",null,null],[5,"EVP_aes_256_gcm","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_bf_cbc","","",null,null],[5,"EVP_bf_ecb","","",null,null],[5,"EVP_bf_cfb64","","",null,null],[5,"EVP_bf_ofb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_ctrl","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_DigestSignInit","","",null,null],[5,"EVP_DigestSignFinal","","",null,null],[5,"EVP_DigestVerifyInit","","",null,null],[5,"EVP_DigestVerifyFinal","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_get1_DSA","","",null,null],[5,"EVP_PKEY_get1_DH","","",null,null],[5,"EVP_PKEY_get1_EC_KEY","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"EVP_PKEY_new_mac_key","","",null,null],[5,"EVP_PKEY_derive_init","","",null,null],[5,"EVP_PKEY_derive_set_peer","","",null,null],[5,"EVP_PKEY_derive","","",null,null],[5,"d2i_PKCS8PrivateKey_bio","","",null,null],[5,"EVP_PKEY_CTX_new","","",null,null],[5,"EVP_PKEY_CTX_free","","",null,null],[5,"EVP_PKEY_CTX_ctrl","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"OBJ_obj2nid","","",null,null],[5,"OBJ_obj2txt","","",null,null],[5,"OCSP_BASICRESP_new","","",null,null],[5,"OCSP_BASICRESP_free","","",null,null],[5,"OCSP_basic_verify","","",null,null],[5,"OCSP_resp_find_status","","",null,null],[5,"OCSP_check_validity","","",null,null],[5,"OCSP_CERTID_free","","",null,null],[5,"OCSP_RESPONSE_new","","",null,null],[5,"OCSP_RESPONSE_free","","",null,null],[5,"i2d_OCSP_RESPONSE","","",null,null],[5,"d2i_OCSP_RESPONSE","","",null,null],[5,"OCSP_response_create","","",null,null],[5,"OCSP_response_status","","",null,null],[5,"OCSP_response_get1_basic","","",null,null],[5,"OCSP_REQUEST_new","","",null,null],[5,"OCSP_REQUEST_free","","",null,null],[5,"i2d_OCSP_REQUEST","","",null,null],[5,"d2i_OCSP_REQUEST","","",null,null],[5,"OCSP_request_add0_id","","",null,null],[5,"OCSP_ONEREQ_free","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DHparams","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PKCS8PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PEM_write_bio_ECPrivateKey","","",null,null],[5,"PEM_read_bio_ECPrivateKey","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"PKCS5_PBKDF2_HMAC","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RAND_status","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SHA1","","",null,null],[5,"SHA224","","",null,null],[5,"SHA256","","",null,null],[5,"SHA384","","",null,null],[5,"SHA512","","",null,null],[5,"SHA1_Init","","",null,null],[5,"SHA1_Update","","",null,null],[5,"SHA1_Final","","",null,null],[5,"SHA256_Init","","",null,null],[5,"SHA256_Update","","",null,null],[5,"SHA256_Final","","",null,null],[5,"SHA224_Init","","",null,null],[5,"SHA224_Update","","",null,null],[5,"SHA224_Final","","",null,null],[5,"SHA384_Init","","",null,null],[5,"SHA384_Update","","",null,null],[5,"SHA384_Final","","",null,null],[5,"SHA512_Init","","",null,null],[5,"SHA512_Update","","",null,null],[5,"SHA512_Final","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_peer_cert_chain","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_get_verify_result","","",null,null],[5,"SSL_shutdown","","",null,null],[5,"SSL_get_certificate","","",null,null],[5,"SSL_get_privatekey","","",null,null],[5,"SSL_load_client_CA_file","","",null,null],[5,"SSL_set_tmp_dh_callback","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_client_CA_list","","",null,null],[5,"SSL_CTX_get_cert_store","","",null,null],[5,"SSL_CTX_set_tmp_dh_callback","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_set_next_protos_advertised_cb","","",null,null],[5,"SSL_CTX_set_next_proto_select_cb","","",null,null],[5,"SSL_CTX_set_psk_client_callback","","",null,null],[5,"SSL_select_next_proto","","",null,null],[5,"SSL_get0_next_proto_negotiated","","",null,null],[5,"SSL_get_session","","",null,null],[5,"SSL_set_session","","",null,null],[5,"SSL_SESSION_free","","",null,null],[5,"SSL_SESSION_get_id","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_subject_name","","",null,null],[5,"X509_set_serialNumber","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_verify_cert_error_string","","",null,null],[5,"X509_get1_ocsp","","",null,null],[5,"X509_check_issued","","",null,null],[5,"X509_ALGOR_free","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_new","","",null,null],[5,"X509_NAME_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_ENTRY_free","","",null,null],[5,"ASN1_STRING_free","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_INTEGER_free","","",null,null],[5,"X509_STORE_new","","",null,null],[5,"X509_STORE_free","","",null,null],[5,"X509_STORE_add_cert","","",null,null],[5,"X509_STORE_set_default_paths","","",null,null],[5,"X509_STORE_CTX_free","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_set_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509V3_set_nconf","","",null,null],[5,"X509_REQ_new","","",null,null],[5,"X509_REQ_set_version","","",null,null],[5,"X509_REQ_set_subject_name","","",null,null],[5,"X509_REQ_set_pubkey","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_DHparams","","",null,null],[5,"i2d_DHparams","","",null,null],[5,"d2i_DSAPublicKey","","",null,null],[5,"i2d_DSAPublicKey","","",null,null],[5,"d2i_DSAPrivateKey","","",null,null],[5,"i2d_DSAPrivateKey","","",null,null],[5,"d2i_DSA_PUBKEY","","",null,null],[5,"i2d_DSA_PUBKEY","","",null,null],[5,"d2i_ECPrivateKey","","",null,null],[5,"i2d_ECPrivateKey","","",null,null],[5,"d2i_X509","","",null,null],[5,"d2i_X509_REQ","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_X509_REQ","","",null,null],[5,"d2i_AutoPrivateKey","","",null,null],[5,"d2i_PUBKEY","","",null,null],[5,"i2d_PUBKEY_bio","","",null,null],[5,"i2d_PrivateKey_bio","","",null,null],[5,"i2d_PUBKEY","","",null,null],[5,"i2d_PrivateKey","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPublicKey","","",null,null],[5,"d2i_RSAPublicKey","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"i2d_PKCS12_bio","","",null,null],[5,"i2d_PKCS12","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_Final","","",null,null],[5,"CMS_decrypt","","",null,null],[5,"SMIME_read_CMS","","",null,null],[5,"CMS_ContentInfo_free","","",null,null],[5,"FIPS_mode_set","","",null,null],[5,"FIPS_mode","","",null,null],[6,"bio_info_cb","","",null,null],[6,"GEN_SESSION_CB","","",null,null],[6,"tls_session_ticket_ext_cb_fn","","",null,null],[6,"tls_session_secret_cb_fn","","",null,null],[6,"BN_ULONG","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[6,"SHA_LONG","","",null,null],[6,"SHA_LONG64","","",null,null],[17,"SSL_CTRL_GET_SESSION_REUSED","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_MAX_SSL_SESSION_ID_LENGTH","","",null,null],[17,"SSL_MAX_SID_CTX_LENGTH","","",null,null],[17,"SSL_MAX_KEY_ARG_LENGTH","","",null,null],[17,"SSL_MAX_MASTER_KEY_LENGTH","","",null,null],[17,"SSL_MAX_KRB5_PRINCIPAL_LENGTH","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"CRYPTO_LOCK_X509","","",null,null],[17,"CRYPTO_LOCK_SSL_CTX","","",null,null],[17,"CRYPTO_LOCK_SSL_SESSION","","",null,null],[17,"X509_V_ERR_INVALID_CALL","","",null,null],[17,"X509_V_ERR_STORE_LOOKUP","","",null,null],[17,"X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION","","",null,null],[17,"AES_ENCRYPT","","",null,null],[17,"AES_DECRYPT","","",null,null],[17,"AES_MAXNR","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"ERR_TXT_MALLOCED","","",null,null],[17,"ERR_TXT_STRING","","",null,null],[17,"ERR_LIB_PEM","","",null,null],[17,"PEM_R_NO_START_LINE","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"EVP_PKEY_HMAC","","",null,null],[17,"EVP_PKEY_DSA","","",null,null],[17,"EVP_PKEY_DH","","",null,null],[17,"EVP_PKEY_EC","","",null,null],[17,"EVP_PKEY_ALG_CTRL","","",null,null],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",null,null],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",null,null],[17,"EVP_CTRL_GCM_SET_IVLEN","","",null,null],[17,"EVP_CTRL_GCM_GET_TAG","","",null,null],[17,"EVP_CTRL_GCM_SET_TAG","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_undef","","",null,null],[17,"NID_itu_t","","",null,null],[17,"NID_ccitt","","",null,null],[17,"NID_iso","","",null,null],[17,"NID_joint_iso_itu_t","","",null,null],[17,"NID_joint_iso_ccitt","","",null,null],[17,"NID_member_body","","",null,null],[17,"NID_identified_organization","","",null,null],[17,"NID_hmac_md5","","",null,null],[17,"NID_hmac_sha1","","",null,null],[17,"NID_certicom_arc","","",null,null],[17,"NID_international_organizations","","",null,null],[17,"NID_wap","","",null,null],[17,"NID_wap_wsg","","",null,null],[17,"NID_selected_attribute_types","","",null,null],[17,"NID_clearance","","",null,null],[17,"NID_ISO_US","","",null,null],[17,"NID_X9_57","","",null,null],[17,"NID_X9cm","","",null,null],[17,"NID_dsa","","",null,null],[17,"NID_dsaWithSHA1","","",null,null],[17,"NID_ansi_X9_62","","",null,null],[17,"NID_X9_62_prime_field","","",null,null],[17,"NID_X9_62_characteristic_two_field","","",null,null],[17,"NID_X9_62_id_characteristic_two_basis","","",null,null],[17,"NID_X9_62_onBasis","","",null,null],[17,"NID_X9_62_tpBasis","","",null,null],[17,"NID_X9_62_ppBasis","","",null,null],[17,"NID_X9_62_id_ecPublicKey","","",null,null],[17,"NID_X9_62_c2pnb163v1","","",null,null],[17,"NID_X9_62_c2pnb163v2","","",null,null],[17,"NID_X9_62_c2pnb163v3","","",null,null],[17,"NID_X9_62_c2pnb176v1","","",null,null],[17,"NID_X9_62_c2tnb191v1","","",null,null],[17,"NID_X9_62_c2tnb191v2","","",null,null],[17,"NID_X9_62_c2tnb191v3","","",null,null],[17,"NID_X9_62_c2onb191v4","","",null,null],[17,"NID_X9_62_c2onb191v5","","",null,null],[17,"NID_X9_62_c2pnb208w1","","",null,null],[17,"NID_X9_62_c2tnb239v1","","",null,null],[17,"NID_X9_62_c2tnb239v2","","",null,null],[17,"NID_X9_62_c2tnb239v3","","",null,null],[17,"NID_X9_62_c2onb239v4","","",null,null],[17,"NID_X9_62_c2onb239v5","","",null,null],[17,"NID_X9_62_c2pnb272w1","","",null,null],[17,"NID_X9_62_c2pnb304w1","","",null,null],[17,"NID_X9_62_c2tnb359v1","","",null,null],[17,"NID_X9_62_c2pnb368w1","","",null,null],[17,"NID_X9_62_c2tnb431r1","","",null,null],[17,"NID_X9_62_prime192v1","","",null,null],[17,"NID_X9_62_prime192v2","","",null,null],[17,"NID_X9_62_prime192v3","","",null,null],[17,"NID_X9_62_prime239v1","","",null,null],[17,"NID_X9_62_prime239v2","","",null,null],[17,"NID_X9_62_prime239v3","","",null,null],[17,"NID_X9_62_prime256v1","","",null,null],[17,"NID_ecdsa_with_SHA1","","",null,null],[17,"NID_ecdsa_with_Recommended","","",null,null],[17,"NID_ecdsa_with_Specified","","",null,null],[17,"NID_ecdsa_with_SHA224","","",null,null],[17,"NID_ecdsa_with_SHA256","","",null,null],[17,"NID_ecdsa_with_SHA384","","",null,null],[17,"NID_ecdsa_with_SHA512","","",null,null],[17,"NID_secp112r1","","",null,null],[17,"NID_secp112r2","","",null,null],[17,"NID_secp128r1","","",null,null],[17,"NID_secp128r2","","",null,null],[17,"NID_secp160k1","","",null,null],[17,"NID_secp160r1","","",null,null],[17,"NID_secp160r2","","",null,null],[17,"NID_secp192k1","","",null,null],[17,"NID_secp224k1","","",null,null],[17,"NID_secp224r1","","",null,null],[17,"NID_secp256k1","","",null,null],[17,"NID_secp384r1","","",null,null],[17,"NID_secp521r1","","",null,null],[17,"NID_sect113r1","","",null,null],[17,"NID_sect113r2","","",null,null],[17,"NID_sect131r1","","",null,null],[17,"NID_sect131r2","","",null,null],[17,"NID_sect163k1","","",null,null],[17,"NID_sect163r1","","",null,null],[17,"NID_sect163r2","","",null,null],[17,"NID_sect193r1","","",null,null],[17,"NID_sect193r2","","",null,null],[17,"NID_sect233k1","","",null,null],[17,"NID_sect233r1","","",null,null],[17,"NID_sect239k1","","",null,null],[17,"NID_sect283k1","","",null,null],[17,"NID_sect283r1","","",null,null],[17,"NID_sect409k1","","",null,null],[17,"NID_sect409r1","","",null,null],[17,"NID_sect571k1","","",null,null],[17,"NID_sect571r1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls3","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls4","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls5","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls6","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls7","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls8","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls9","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls10","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls11","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls12","","",null,null],[17,"NID_cast5_cbc","","",null,null],[17,"NID_cast5_ecb","","",null,null],[17,"NID_cast5_cfb64","","",null,null],[17,"NID_cast5_ofb64","","",null,null],[17,"NID_pbeWithMD5AndCast5_CBC","","",null,null],[17,"NID_id_PasswordBasedMAC","","",null,null],[17,"NID_id_DHBasedMac","","",null,null],[17,"NID_rsadsi","","",null,null],[17,"NID_pkcs","","",null,null],[17,"NID_pkcs1","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_md2WithRSAEncryption","","",null,null],[17,"NID_md4WithRSAEncryption","","",null,null],[17,"NID_md5WithRSAEncryption","","",null,null],[17,"NID_sha1WithRSAEncryption","","",null,null],[17,"NID_rsaesOaep","","",null,null],[17,"NID_mgf1","","",null,null],[17,"NID_rsassaPss","","",null,null],[17,"NID_sha256WithRSAEncryption","","",null,null],[17,"NID_sha384WithRSAEncryption","","",null,null],[17,"NID_sha512WithRSAEncryption","","",null,null],[17,"NID_sha224WithRSAEncryption","","",null,null],[17,"NID_pkcs3","","",null,null],[17,"NID_dhKeyAgreement","","",null,null],[17,"NID_pkcs5","","",null,null],[17,"NID_pbeWithMD2AndDES_CBC","","",null,null],[17,"NID_pbeWithMD5AndDES_CBC","","",null,null],[17,"NID_pbeWithMD2AndRC2_CBC","","",null,null],[17,"NID_pbeWithMD5AndRC2_CBC","","",null,null],[17,"NID_pbeWithSHA1AndDES_CBC","","",null,null],[17,"NID_pbeWithSHA1AndRC2_CBC","","",null,null],[17,"NID_id_pbkdf2","","",null,null],[17,"NID_pbes2","","",null,null],[17,"NID_pbmac1","","",null,null],[17,"NID_pkcs7","","",null,null],[17,"NID_pkcs7_data","","",null,null],[17,"NID_pkcs7_signed","","",null,null],[17,"NID_pkcs7_enveloped","","",null,null],[17,"NID_pkcs7_signedAndEnveloped","","",null,null],[17,"NID_pkcs7_digest","","",null,null],[17,"NID_pkcs7_encrypted","","",null,null],[17,"NID_pkcs9","","",null,null],[17,"NID_pkcs9_emailAddress","","",null,null],[17,"NID_pkcs9_unstructuredName","","",null,null],[17,"NID_pkcs9_contentType","","",null,null],[17,"NID_pkcs9_messageDigest","","",null,null],[17,"NID_pkcs9_signingTime","","",null,null],[17,"NID_pkcs9_countersignature","","",null,null],[17,"NID_pkcs9_challengePassword","","",null,null],[17,"NID_pkcs9_unstructuredAddress","","",null,null],[17,"NID_pkcs9_extCertAttributes","","",null,null],[17,"NID_ext_req","","",null,null],[17,"NID_SMIMECapabilities","","",null,null],[17,"NID_SMIME","","",null,null],[17,"NID_id_smime_mod","","",null,null],[17,"NID_id_smime_ct","","",null,null],[17,"NID_id_smime_aa","","",null,null],[17,"NID_id_smime_alg","","",null,null],[17,"NID_id_smime_cd","","",null,null],[17,"NID_id_smime_spq","","",null,null],[17,"NID_id_smime_cti","","",null,null],[17,"NID_id_smime_mod_cms","","",null,null],[17,"NID_id_smime_mod_ess","","",null,null],[17,"NID_id_smime_mod_oid","","",null,null],[17,"NID_id_smime_mod_msg_v3","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_88","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_97","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",null,null],[17,"NID_id_smime_ct_receipt","","",null,null],[17,"NID_id_smime_ct_authData","","",null,null],[17,"NID_id_smime_ct_publishCert","","",null,null],[17,"NID_id_smime_ct_TSTInfo","","",null,null],[17,"NID_id_smime_ct_TDTInfo","","",null,null],[17,"NID_id_smime_ct_contentInfo","","",null,null],[17,"NID_id_smime_ct_DVCSRequestData","","",null,null],[17,"NID_id_smime_ct_DVCSResponseData","","",null,null],[17,"NID_id_smime_ct_compressedData","","",null,null],[17,"NID_id_ct_asciiTextWithCRLF","","",null,null],[17,"NID_id_smime_aa_receiptRequest","","",null,null],[17,"NID_id_smime_aa_securityLabel","","",null,null],[17,"NID_id_smime_aa_mlExpandHistory","","",null,null],[17,"NID_id_smime_aa_contentHint","","",null,null],[17,"NID_id_smime_aa_msgSigDigest","","",null,null],[17,"NID_id_smime_aa_encapContentType","","",null,null],[17,"NID_id_smime_aa_contentIdentifier","","",null,null],[17,"NID_id_smime_aa_macValue","","",null,null],[17,"NID_id_smime_aa_equivalentLabels","","",null,null],[17,"NID_id_smime_aa_contentReference","","",null,null],[17,"NID_id_smime_aa_encrypKeyPref","","",null,null],[17,"NID_id_smime_aa_signingCertificate","","",null,null],[17,"NID_id_smime_aa_smimeEncryptCerts","","",null,null],[17,"NID_id_smime_aa_timeStampToken","","",null,null],[17,"NID_id_smime_aa_ets_sigPolicyId","","",null,null],[17,"NID_id_smime_aa_ets_commitmentType","","",null,null],[17,"NID_id_smime_aa_ets_signerLocation","","",null,null],[17,"NID_id_smime_aa_ets_signerAttr","","",null,null],[17,"NID_id_smime_aa_ets_otherSigCert","","",null,null],[17,"NID_id_smime_aa_ets_contentTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_CertificateRefs","","",null,null],[17,"NID_id_smime_aa_ets_RevocationRefs","","",null,null],[17,"NID_id_smime_aa_ets_certValues","","",null,null],[17,"NID_id_smime_aa_ets_revocationValues","","",null,null],[17,"NID_id_smime_aa_ets_escTimeStamp","","",null,null],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",null,null],[17,"NID_id_smime_aa_signatureType","","",null,null],[17,"NID_id_smime_aa_dvcs_dvc","","",null,null],[17,"NID_id_smime_alg_ESDHwith3DES","","",null,null],[17,"NID_id_smime_alg_ESDHwithRC2","","",null,null],[17,"NID_id_smime_alg_3DESwrap","","",null,null],[17,"NID_id_smime_alg_RC2wrap","","",null,null],[17,"NID_id_smime_alg_ESDH","","",null,null],[17,"NID_id_smime_alg_CMS3DESwrap","","",null,null],[17,"NID_id_smime_alg_CMSRC2wrap","","",null,null],[17,"NID_id_alg_PWRI_KEK","","",null,null],[17,"NID_id_smime_cd_ldap","","",null,null],[17,"NID_id_smime_spq_ets_sqt_uri","","",null,null],[17,"NID_id_smime_spq_ets_sqt_unotice","","",null,null],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",null,null],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",null,null],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",null,null],[17,"NID_id_smime_cti_ets_proofOfSender","","",null,null],[17,"NID_id_smime_cti_ets_proofOfApproval","","",null,null],[17,"NID_id_smime_cti_ets_proofOfCreation","","",null,null],[17,"NID_friendlyName","","",null,null],[17,"NID_localKeyID","","",null,null],[17,"NID_ms_csp_name","","",null,null],[17,"NID_LocalKeySet","","",null,null],[17,"NID_x509Certificate","","",null,null],[17,"NID_sdsiCertificate","","",null,null],[17,"NID_x509Crl","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",null,null],[17,"NID_keyBag","","",null,null],[17,"NID_pkcs8ShroudedKeyBag","","",null,null],[17,"NID_certBag","","",null,null],[17,"NID_crlBag","","",null,null],[17,"NID_secretBag","","",null,null],[17,"NID_safeContentsBag","","",null,null],[17,"NID_md2","","",null,null],[17,"NID_md4","","",null,null],[17,"NID_md5","","",null,null],[17,"NID_md5_sha1","","",null,null],[17,"NID_hmacWithMD5","","",null,null],[17,"NID_hmacWithSHA1","","",null,null],[17,"NID_hmacWithSHA224","","",null,null],[17,"NID_hmacWithSHA256","","",null,null],[17,"NID_hmacWithSHA384","","",null,null],[17,"NID_hmacWithSHA512","","",null,null],[17,"NID_rc2_cbc","","",null,null],[17,"NID_rc2_ecb","","",null,null],[17,"NID_rc2_cfb64","","",null,null],[17,"NID_rc2_ofb64","","",null,null],[17,"NID_rc2_40_cbc","","",null,null],[17,"NID_rc2_64_cbc","","",null,null],[17,"NID_rc4","","",null,null],[17,"NID_rc4_40","","",null,null],[17,"NID_des_ede3_cbc","","",null,null],[17,"NID_rc5_cbc","","",null,null],[17,"NID_rc5_ecb","","",null,null],[17,"NID_rc5_cfb64","","",null,null],[17,"NID_rc5_ofb64","","",null,null],[17,"NID_ms_ext_req","","",null,null],[17,"NID_ms_code_ind","","",null,null],[17,"NID_ms_code_com","","",null,null],[17,"NID_ms_ctl_sign","","",null,null],[17,"NID_ms_sgc","","",null,null],[17,"NID_ms_efs","","",null,null],[17,"NID_ms_smartcard_login","","",null,null],[17,"NID_ms_upn","","",null,null],[17,"NID_idea_cbc","","",null,null],[17,"NID_idea_ecb","","",null,null],[17,"NID_idea_cfb64","","",null,null],[17,"NID_idea_ofb64","","",null,null],[17,"NID_bf_cbc","","",null,null],[17,"NID_bf_ecb","","",null,null],[17,"NID_bf_cfb64","","",null,null],[17,"NID_bf_ofb64","","",null,null],[17,"NID_id_pkix","","",null,null],[17,"NID_id_pkix_mod","","",null,null],[17,"NID_id_pe","","",null,null],[17,"NID_id_qt","","",null,null],[17,"NID_id_kp","","",null,null],[17,"NID_id_it","","",null,null],[17,"NID_id_pkip","","",null,null],[17,"NID_id_alg","","",null,null],[17,"NID_id_cmc","","",null,null],[17,"NID_id_on","","",null,null],[17,"NID_id_pda","","",null,null],[17,"NID_id_aca","","",null,null],[17,"NID_id_qcs","","",null,null],[17,"NID_id_cct","","",null,null],[17,"NID_id_ppl","","",null,null],[17,"NID_id_ad","","",null,null],[17,"NID_id_pkix1_explicit_88","","",null,null],[17,"NID_id_pkix1_implicit_88","","",null,null],[17,"NID_id_pkix1_explicit_93","","",null,null],[17,"NID_id_pkix1_implicit_93","","",null,null],[17,"NID_id_mod_crmf","","",null,null],[17,"NID_id_mod_cmc","","",null,null],[17,"NID_id_mod_kea_profile_88","","",null,null],[17,"NID_id_mod_kea_profile_93","","",null,null],[17,"NID_id_mod_cmp","","",null,null],[17,"NID_id_mod_qualified_cert_88","","",null,null],[17,"NID_id_mod_qualified_cert_93","","",null,null],[17,"NID_id_mod_attribute_cert","","",null,null],[17,"NID_id_mod_timestamp_protocol","","",null,null],[17,"NID_id_mod_ocsp","","",null,null],[17,"NID_id_mod_dvcs","","",null,null],[17,"NID_id_mod_cmp2000","","",null,null],[17,"NID_info_access","","",null,null],[17,"NID_biometricInfo","","",null,null],[17,"NID_qcStatements","","",null,null],[17,"NID_ac_auditEntity","","",null,null],[17,"NID_ac_targeting","","",null,null],[17,"NID_aaControls","","",null,null],[17,"NID_sbgp_ipAddrBlock","","",null,null],[17,"NID_sbgp_autonomousSysNum","","",null,null],[17,"NID_sbgp_routerIdentifier","","",null,null],[17,"NID_ac_proxying","","",null,null],[17,"NID_sinfo_access","","",null,null],[17,"NID_proxyCertInfo","","",null,null],[17,"NID_id_qt_cps","","",null,null],[17,"NID_id_qt_unotice","","",null,null],[17,"NID_textNotice","","",null,null],[17,"NID_server_auth","","",null,null],[17,"NID_client_auth","","",null,null],[17,"NID_code_sign","","",null,null],[17,"NID_email_protect","","",null,null],[17,"NID_ipsecEndSystem","","",null,null],[17,"NID_ipsecTunnel","","",null,null],[17,"NID_ipsecUser","","",null,null],[17,"NID_time_stamp","","",null,null],[17,"NID_OCSP_sign","","",null,null],[17,"NID_dvcs","","",null,null],[17,"NID_id_it_caProtEncCert","","",null,null],[17,"NID_id_it_signKeyPairTypes","","",null,null],[17,"NID_id_it_encKeyPairTypes","","",null,null],[17,"NID_id_it_preferredSymmAlg","","",null,null],[17,"NID_id_it_caKeyUpdateInfo","","",null,null],[17,"NID_id_it_currentCRL","","",null,null],[17,"NID_id_it_unsupportedOIDs","","",null,null],[17,"NID_id_it_subscriptionRequest","","",null,null],[17,"NID_id_it_subscriptionResponse","","",null,null],[17,"NID_id_it_keyPairParamReq","","",null,null],[17,"NID_id_it_keyPairParamRep","","",null,null],[17,"NID_id_it_revPassphrase","","",null,null],[17,"NID_id_it_implicitConfirm","","",null,null],[17,"NID_id_it_confirmWaitTime","","",null,null],[17,"NID_id_it_origPKIMessage","","",null,null],[17,"NID_id_it_suppLangTags","","",null,null],[17,"NID_id_regCtrl","","",null,null],[17,"NID_id_regInfo","","",null,null],[17,"NID_id_regCtrl_regToken","","",null,null],[17,"NID_id_regCtrl_authenticator","","",null,null],[17,"NID_id_regCtrl_pkiPublicationInfo","","",null,null],[17,"NID_id_regCtrl_pkiArchiveOptions","","",null,null],[17,"NID_id_regCtrl_oldCertID","","",null,null],[17,"NID_id_regCtrl_protocolEncrKey","","",null,null],[17,"NID_id_regInfo_utf8Pairs","","",null,null],[17,"NID_id_regInfo_certReq","","",null,null],[17,"NID_id_alg_des40","","",null,null],[17,"NID_id_alg_noSignature","","",null,null],[17,"NID_id_alg_dh_sig_hmac_sha1","","",null,null],[17,"NID_id_alg_dh_pop","","",null,null],[17,"NID_id_cmc_statusInfo","","",null,null],[17,"NID_id_cmc_identification","","",null,null],[17,"NID_id_cmc_identityProof","","",null,null],[17,"NID_id_cmc_dataReturn","","",null,null],[17,"NID_id_cmc_transactionId","","",null,null],[17,"NID_id_cmc_senderNonce","","",null,null],[17,"NID_id_cmc_recipientNonce","","",null,null],[17,"NID_id_cmc_addExtensions","","",null,null],[17,"NID_id_cmc_encryptedPOP","","",null,null],[17,"NID_id_cmc_decryptedPOP","","",null,null],[17,"NID_id_cmc_lraPOPWitness","","",null,null],[17,"NID_id_cmc_getCert","","",null,null],[17,"NID_id_cmc_getCRL","","",null,null],[17,"NID_id_cmc_revokeRequest","","",null,null],[17,"NID_id_cmc_regInfo","","",null,null],[17,"NID_id_cmc_responseInfo","","",null,null],[17,"NID_id_cmc_queryPending","","",null,null],[17,"NID_id_cmc_popLinkRandom","","",null,null],[17,"NID_id_cmc_popLinkWitness","","",null,null],[17,"NID_id_cmc_confirmCertAcceptance","","",null,null],[17,"NID_id_on_personalData","","",null,null],[17,"NID_id_on_permanentIdentifier","","",null,null],[17,"NID_id_pda_dateOfBirth","","",null,null],[17,"NID_id_pda_placeOfBirth","","",null,null],[17,"NID_id_pda_gender","","",null,null],[17,"NID_id_pda_countryOfCitizenship","","",null,null],[17,"NID_id_pda_countryOfResidence","","",null,null],[17,"NID_id_aca_authenticationInfo","","",null,null],[17,"NID_id_aca_accessIdentity","","",null,null],[17,"NID_id_aca_chargingIdentity","","",null,null],[17,"NID_id_aca_group","","",null,null],[17,"NID_id_aca_role","","",null,null],[17,"NID_id_aca_encAttrs","","",null,null],[17,"NID_id_qcs_pkixQCSyntax_v1","","",null,null],[17,"NID_id_cct_crs","","",null,null],[17,"NID_id_cct_PKIData","","",null,null],[17,"NID_id_cct_PKIResponse","","",null,null],[17,"NID_id_ppl_anyLanguage","","",null,null],[17,"NID_id_ppl_inheritAll","","",null,null],[17,"NID_Independent","","",null,null],[17,"NID_ad_OCSP","","",null,null],[17,"NID_ad_ca_issuers","","",null,null],[17,"NID_ad_timeStamping","","",null,null],[17,"NID_ad_dvcs","","",null,null],[17,"NID_caRepository","","",null,null],[17,"NID_id_pkix_OCSP_basic","","",null,null],[17,"NID_id_pkix_OCSP_Nonce","","",null,null],[17,"NID_id_pkix_OCSP_CrlID","","",null,null],[17,"NID_id_pkix_OCSP_acceptableResponses","","",null,null],[17,"NID_id_pkix_OCSP_noCheck","","",null,null],[17,"NID_id_pkix_OCSP_archiveCutoff","","",null,null],[17,"NID_id_pkix_OCSP_serviceLocator","","",null,null],[17,"NID_id_pkix_OCSP_extendedStatus","","",null,null],[17,"NID_id_pkix_OCSP_valid","","",null,null],[17,"NID_id_pkix_OCSP_path","","",null,null],[17,"NID_id_pkix_OCSP_trustRoot","","",null,null],[17,"NID_algorithm","","",null,null],[17,"NID_md5WithRSA","","",null,null],[17,"NID_des_ecb","","",null,null],[17,"NID_des_cbc","","",null,null],[17,"NID_des_ofb64","","",null,null],[17,"NID_des_cfb64","","",null,null],[17,"NID_rsaSignature","","",null,null],[17,"NID_dsa_2","","",null,null],[17,"NID_dsaWithSHA","","",null,null],[17,"NID_shaWithRSAEncryption","","",null,null],[17,"NID_des_ede_ecb","","",null,null],[17,"NID_des_ede3_ecb","","",null,null],[17,"NID_des_ede_cbc","","",null,null],[17,"NID_des_ede_cfb64","","",null,null],[17,"NID_des_ede3_cfb64","","",null,null],[17,"NID_des_ede_ofb64","","",null,null],[17,"NID_des_ede3_ofb64","","",null,null],[17,"NID_desx_cbc","","",null,null],[17,"NID_sha","","",null,null],[17,"NID_sha1","","",null,null],[17,"NID_dsaWithSHA1_2","","",null,null],[17,"NID_sha1WithRSA","","",null,null],[17,"NID_ripemd160","","",null,null],[17,"NID_ripemd160WithRSA","","",null,null],[17,"NID_sxnet","","",null,null],[17,"NID_X500","","",null,null],[17,"NID_X509","","",null,null],[17,"NID_commonName","","",null,null],[17,"NID_surname","","",null,null],[17,"NID_serialNumber","","",null,null],[17,"NID_countryName","","",null,null],[17,"NID_localityName","","",null,null],[17,"NID_stateOrProvinceName","","",null,null],[17,"NID_streetAddress","","",null,null],[17,"NID_organizationName","","",null,null],[17,"NID_organizationalUnitName","","",null,null],[17,"NID_title","","",null,null],[17,"NID_description","","",null,null],[17,"NID_searchGuide","","",null,null],[17,"NID_businessCategory","","",null,null],[17,"NID_postalAddress","","",null,null],[17,"NID_postalCode","","",null,null],[17,"NID_postOfficeBox","","",null,null],[17,"NID_physicalDeliveryOfficeName","","",null,null],[17,"NID_telephoneNumber","","",null,null],[17,"NID_telexNumber","","",null,null],[17,"NID_teletexTerminalIdentifier","","",null,null],[17,"NID_facsimileTelephoneNumber","","",null,null],[17,"NID_x121Address","","",null,null],[17,"NID_internationaliSDNNumber","","",null,null],[17,"NID_registeredAddress","","",null,null],[17,"NID_destinationIndicator","","",null,null],[17,"NID_preferredDeliveryMethod","","",null,null],[17,"NID_presentationAddress","","",null,null],[17,"NID_supportedApplicationContext","","",null,null],[17,"NID_member","","",null,null],[17,"NID_owner","","",null,null],[17,"NID_roleOccupant","","",null,null],[17,"NID_seeAlso","","",null,null],[17,"NID_userPassword","","",null,null],[17,"NID_userCertificate","","",null,null],[17,"NID_cACertificate","","",null,null],[17,"NID_authorityRevocationList","","",null,null],[17,"NID_certificateRevocationList","","",null,null],[17,"NID_crossCertificatePair","","",null,null],[17,"NID_name","","",null,null],[17,"NID_givenName","","",null,null],[17,"NID_initials","","",null,null],[17,"NID_generationQualifier","","",null,null],[17,"NID_x500UniqueIdentifier","","",null,null],[17,"NID_dnQualifier","","",null,null],[17,"NID_enhancedSearchGuide","","",null,null],[17,"NID_protocolInformation","","",null,null],[17,"NID_distinguishedName","","",null,null],[17,"NID_uniqueMember","","",null,null],[17,"NID_houseIdentifier","","",null,null],[17,"NID_supportedAlgorithms","","",null,null],[17,"NID_deltaRevocationList","","",null,null],[17,"NID_dmdName","","",null,null],[17,"NID_pseudonym","","",null,null],[17,"NID_role","","",null,null],[17,"NID_X500algorithms","","",null,null],[17,"NID_rsa","","",null,null],[17,"NID_mdc2WithRSA","","",null,null],[17,"NID_mdc2","","",null,null],[17,"NID_id_ce","","",null,null],[17,"NID_subject_directory_attributes","","",null,null],[17,"NID_subject_key_identifier","","",null,null],[17,"NID_key_usage","","",null,null],[17,"NID_private_key_usage_period","","",null,null],[17,"NID_subject_alt_name","","",null,null],[17,"NID_issuer_alt_name","","",null,null],[17,"NID_basic_constraints","","",null,null],[17,"NID_crl_number","","",null,null],[17,"NID_crl_reason","","",null,null],[17,"NID_invalidity_date","","",null,null],[17,"NID_delta_crl","","",null,null],[17,"NID_issuing_distribution_point","","",null,null],[17,"NID_certificate_issuer","","",null,null],[17,"NID_name_constraints","","",null,null],[17,"NID_crl_distribution_points","","",null,null],[17,"NID_certificate_policies","","",null,null],[17,"NID_any_policy","","",null,null],[17,"NID_policy_mappings","","",null,null],[17,"NID_authority_key_identifier","","",null,null],[17,"NID_policy_constraints","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_freshest_crl","","",null,null],[17,"NID_inhibit_any_policy","","",null,null],[17,"NID_target_information","","",null,null],[17,"NID_no_rev_avail","","",null,null],[17,"NID_anyExtendedKeyUsage","","",null,null],[17,"NID_netscape","","",null,null],[17,"NID_netscape_cert_extension","","",null,null],[17,"NID_netscape_data_type","","",null,null],[17,"NID_netscape_cert_type","","",null,null],[17,"NID_netscape_base_url","","",null,null],[17,"NID_netscape_revocation_url","","",null,null],[17,"NID_netscape_ca_revocation_url","","",null,null],[17,"NID_netscape_renewal_url","","",null,null],[17,"NID_netscape_ca_policy_url","","",null,null],[17,"NID_netscape_ssl_server_name","","",null,null],[17,"NID_netscape_comment","","",null,null],[17,"NID_netscape_cert_sequence","","",null,null],[17,"NID_ns_sgc","","",null,null],[17,"NID_org","","",null,null],[17,"NID_dod","","",null,null],[17,"NID_iana","","",null,null],[17,"NID_Directory","","",null,null],[17,"NID_Management","","",null,null],[17,"NID_Experimental","","",null,null],[17,"NID_Private","","",null,null],[17,"NID_Security","","",null,null],[17,"NID_SNMPv2","","",null,null],[17,"NID_Mail","","",null,null],[17,"NID_Enterprises","","",null,null],[17,"NID_dcObject","","",null,null],[17,"NID_mime_mhs","","",null,null],[17,"NID_mime_mhs_headings","","",null,null],[17,"NID_mime_mhs_bodies","","",null,null],[17,"NID_id_hex_partial_message","","",null,null],[17,"NID_id_hex_multipart_message","","",null,null],[17,"NID_zlib_compression","","",null,null],[17,"NID_aes_128_ecb","","",null,null],[17,"NID_aes_128_cbc","","",null,null],[17,"NID_aes_128_ofb128","","",null,null],[17,"NID_aes_128_cfb128","","",null,null],[17,"NID_id_aes128_wrap","","",null,null],[17,"NID_aes_128_gcm","","",null,null],[17,"NID_aes_128_ccm","","",null,null],[17,"NID_id_aes128_wrap_pad","","",null,null],[17,"NID_aes_192_ecb","","",null,null],[17,"NID_aes_192_cbc","","",null,null],[17,"NID_aes_192_ofb128","","",null,null],[17,"NID_aes_192_cfb128","","",null,null],[17,"NID_id_aes192_wrap","","",null,null],[17,"NID_aes_192_gcm","","",null,null],[17,"NID_aes_192_ccm","","",null,null],[17,"NID_id_aes192_wrap_pad","","",null,null],[17,"NID_aes_256_ecb","","",null,null],[17,"NID_aes_256_cbc","","",null,null],[17,"NID_aes_256_ofb128","","",null,null],[17,"NID_aes_256_cfb128","","",null,null],[17,"NID_id_aes256_wrap","","",null,null],[17,"NID_aes_256_gcm","","",null,null],[17,"NID_aes_256_ccm","","",null,null],[17,"NID_id_aes256_wrap_pad","","",null,null],[17,"NID_aes_128_cfb1","","",null,null],[17,"NID_aes_192_cfb1","","",null,null],[17,"NID_aes_256_cfb1","","",null,null],[17,"NID_aes_128_cfb8","","",null,null],[17,"NID_aes_192_cfb8","","",null,null],[17,"NID_aes_256_cfb8","","",null,null],[17,"NID_aes_128_ctr","","",null,null],[17,"NID_aes_192_ctr","","",null,null],[17,"NID_aes_256_ctr","","",null,null],[17,"NID_aes_128_xts","","",null,null],[17,"NID_aes_256_xts","","",null,null],[17,"NID_des_cfb1","","",null,null],[17,"NID_des_cfb8","","",null,null],[17,"NID_des_ede3_cfb1","","",null,null],[17,"NID_des_ede3_cfb8","","",null,null],[17,"NID_sha256","","",null,null],[17,"NID_sha384","","",null,null],[17,"NID_sha512","","",null,null],[17,"NID_sha224","","",null,null],[17,"NID_dsa_with_SHA224","","",null,null],[17,"NID_dsa_with_SHA256","","",null,null],[17,"NID_hold_instruction_code","","",null,null],[17,"NID_hold_instruction_none","","",null,null],[17,"NID_hold_instruction_call_issuer","","",null,null],[17,"NID_hold_instruction_reject","","",null,null],[17,"NID_data","","",null,null],[17,"NID_pss","","",null,null],[17,"NID_ucl","","",null,null],[17,"NID_pilot","","",null,null],[17,"NID_pilotAttributeType","","",null,null],[17,"NID_pilotAttributeSyntax","","",null,null],[17,"NID_pilotObjectClass","","",null,null],[17,"NID_pilotGroups","","",null,null],[17,"NID_iA5StringSyntax","","",null,null],[17,"NID_caseIgnoreIA5StringSyntax","","",null,null],[17,"NID_pilotObject","","",null,null],[17,"NID_pilotPerson","","",null,null],[17,"NID_account","","",null,null],[17,"NID_document","","",null,null],[17,"NID_room","","",null,null],[17,"NID_documentSeries","","",null,null],[17,"NID_Domain","","",null,null],[17,"NID_rFC822localPart","","",null,null],[17,"NID_dNSDomain","","",null,null],[17,"NID_domainRelatedObject","","",null,null],[17,"NID_friendlyCountry","","",null,null],[17,"NID_simpleSecurityObject","","",null,null],[17,"NID_pilotOrganization","","",null,null],[17,"NID_pilotDSA","","",null,null],[17,"NID_qualityLabelledData","","",null,null],[17,"NID_userId","","",null,null],[17,"NID_textEncodedORAddress","","",null,null],[17,"NID_rfc822Mailbox","","",null,null],[17,"NID_info","","",null,null],[17,"NID_favouriteDrink","","",null,null],[17,"NID_roomNumber","","",null,null],[17,"NID_photo","","",null,null],[17,"NID_userClass","","",null,null],[17,"NID_host","","",null,null],[17,"NID_manager","","",null,null],[17,"NID_documentIdentifier","","",null,null],[17,"NID_documentTitle","","",null,null],[17,"NID_documentVersion","","",null,null],[17,"NID_documentAuthor","","",null,null],[17,"NID_documentLocation","","",null,null],[17,"NID_homeTelephoneNumber","","",null,null],[17,"NID_secretary","","",null,null],[17,"NID_otherMailbox","","",null,null],[17,"NID_lastModifiedTime","","",null,null],[17,"NID_lastModifiedBy","","",null,null],[17,"NID_domainComponent","","",null,null],[17,"NID_aRecord","","",null,null],[17,"NID_pilotAttributeType27","","",null,null],[17,"NID_mXRecord","","",null,null],[17,"NID_nSRecord","","",null,null],[17,"NID_sOARecord","","",null,null],[17,"NID_cNAMERecord","","",null,null],[17,"NID_associatedDomain","","",null,null],[17,"NID_associatedName","","",null,null],[17,"NID_homePostalAddress","","",null,null],[17,"NID_personalTitle","","",null,null],[17,"NID_mobileTelephoneNumber","","",null,null],[17,"NID_pagerTelephoneNumber","","",null,null],[17,"NID_friendlyCountryName","","",null,null],[17,"NID_organizationalStatus","","",null,null],[17,"NID_janetMailbox","","",null,null],[17,"NID_mailPreferenceOption","","",null,null],[17,"NID_buildingName","","",null,null],[17,"NID_dSAQuality","","",null,null],[17,"NID_singleLevelQuality","","",null,null],[17,"NID_subtreeMinimumQuality","","",null,null],[17,"NID_subtreeMaximumQuality","","",null,null],[17,"NID_personalSignature","","",null,null],[17,"NID_dITRedirect","","",null,null],[17,"NID_audio","","",null,null],[17,"NID_documentPublisher","","",null,null],[17,"NID_id_set","","",null,null],[17,"NID_set_ctype","","",null,null],[17,"NID_set_msgExt","","",null,null],[17,"NID_set_attr","","",null,null],[17,"NID_set_policy","","",null,null],[17,"NID_set_certExt","","",null,null],[17,"NID_set_brand","","",null,null],[17,"NID_setct_PANData","","",null,null],[17,"NID_setct_PANToken","","",null,null],[17,"NID_setct_PANOnly","","",null,null],[17,"NID_setct_OIData","","",null,null],[17,"NID_setct_PI","","",null,null],[17,"NID_setct_PIData","","",null,null],[17,"NID_setct_PIDataUnsigned","","",null,null],[17,"NID_setct_HODInput","","",null,null],[17,"NID_setct_AuthResBaggage","","",null,null],[17,"NID_setct_AuthRevReqBaggage","","",null,null],[17,"NID_setct_AuthRevResBaggage","","",null,null],[17,"NID_setct_CapTokenSeq","","",null,null],[17,"NID_setct_PInitResData","","",null,null],[17,"NID_setct_PI_TBS","","",null,null],[17,"NID_setct_PResData","","",null,null],[17,"NID_setct_AuthReqTBS","","",null,null],[17,"NID_setct_AuthResTBS","","",null,null],[17,"NID_setct_AuthResTBSX","","",null,null],[17,"NID_setct_AuthTokenTBS","","",null,null],[17,"NID_setct_CapTokenData","","",null,null],[17,"NID_setct_CapTokenTBS","","",null,null],[17,"NID_setct_AcqCardCodeMsg","","",null,null],[17,"NID_setct_AuthRevReqTBS","","",null,null],[17,"NID_setct_AuthRevResData","","",null,null],[17,"NID_setct_AuthRevResTBS","","",null,null],[17,"NID_setct_CapReqTBS","","",null,null],[17,"NID_setct_CapReqTBSX","","",null,null],[17,"NID_setct_CapResData","","",null,null],[17,"NID_setct_CapRevReqTBS","","",null,null],[17,"NID_setct_CapRevReqTBSX","","",null,null],[17,"NID_setct_CapRevResData","","",null,null],[17,"NID_setct_CredReqTBS","","",null,null],[17,"NID_setct_CredReqTBSX","","",null,null],[17,"NID_setct_CredResData","","",null,null],[17,"NID_setct_CredRevReqTBS","","",null,null],[17,"NID_setct_CredRevReqTBSX","","",null,null],[17,"NID_setct_CredRevResData","","",null,null],[17,"NID_setct_PCertReqData","","",null,null],[17,"NID_setct_PCertResTBS","","",null,null],[17,"NID_setct_BatchAdminReqData","","",null,null],[17,"NID_setct_BatchAdminResData","","",null,null],[17,"NID_setct_CardCInitResTBS","","",null,null],[17,"NID_setct_MeAqCInitResTBS","","",null,null],[17,"NID_setct_RegFormResTBS","","",null,null],[17,"NID_setct_CertReqData","","",null,null],[17,"NID_setct_CertReqTBS","","",null,null],[17,"NID_setct_CertResData","","",null,null],[17,"NID_setct_CertInqReqTBS","","",null,null],[17,"NID_setct_ErrorTBS","","",null,null],[17,"NID_setct_PIDualSignedTBE","","",null,null],[17,"NID_setct_PIUnsignedTBE","","",null,null],[17,"NID_setct_AuthReqTBE","","",null,null],[17,"NID_setct_AuthResTBE","","",null,null],[17,"NID_setct_AuthResTBEX","","",null,null],[17,"NID_setct_AuthTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBEX","","",null,null],[17,"NID_setct_AcqCardCodeMsgTBE","","",null,null],[17,"NID_setct_AuthRevReqTBE","","",null,null],[17,"NID_setct_AuthRevResTBE","","",null,null],[17,"NID_setct_AuthRevResTBEB","","",null,null],[17,"NID_setct_CapReqTBE","","",null,null],[17,"NID_setct_CapReqTBEX","","",null,null],[17,"NID_setct_CapResTBE","","",null,null],[17,"NID_setct_CapRevReqTBE","","",null,null],[17,"NID_setct_CapRevReqTBEX","","",null,null],[17,"NID_setct_CapRevResTBE","","",null,null],[17,"NID_setct_CredReqTBE","","",null,null],[17,"NID_setct_CredReqTBEX","","",null,null],[17,"NID_setct_CredResTBE","","",null,null],[17,"NID_setct_CredRevReqTBE","","",null,null],[17,"NID_setct_CredRevReqTBEX","","",null,null],[17,"NID_setct_CredRevResTBE","","",null,null],[17,"NID_setct_BatchAdminReqTBE","","",null,null],[17,"NID_setct_BatchAdminResTBE","","",null,null],[17,"NID_setct_RegFormReqTBE","","",null,null],[17,"NID_setct_CertReqTBE","","",null,null],[17,"NID_setct_CertReqTBEX","","",null,null],[17,"NID_setct_CertResTBE","","",null,null],[17,"NID_setct_CRLNotificationTBS","","",null,null],[17,"NID_setct_CRLNotificationResTBS","","",null,null],[17,"NID_setct_BCIDistributionTBS","","",null,null],[17,"NID_setext_genCrypt","","",null,null],[17,"NID_setext_miAuth","","",null,null],[17,"NID_setext_pinSecure","","",null,null],[17,"NID_setext_pinAny","","",null,null],[17,"NID_setext_track2","","",null,null],[17,"NID_setext_cv","","",null,null],[17,"NID_set_policy_root","","",null,null],[17,"NID_setCext_hashedRoot","","",null,null],[17,"NID_setCext_certType","","",null,null],[17,"NID_setCext_merchData","","",null,null],[17,"NID_setCext_cCertRequired","","",null,null],[17,"NID_setCext_tunneling","","",null,null],[17,"NID_setCext_setExt","","",null,null],[17,"NID_setCext_setQualf","","",null,null],[17,"NID_setCext_PGWYcapabilities","","",null,null],[17,"NID_setCext_TokenIdentifier","","",null,null],[17,"NID_setCext_Track2Data","","",null,null],[17,"NID_setCext_TokenType","","",null,null],[17,"NID_setCext_IssuerCapabilities","","",null,null],[17,"NID_setAttr_Cert","","",null,null],[17,"NID_setAttr_PGWYcap","","",null,null],[17,"NID_setAttr_TokenType","","",null,null],[17,"NID_setAttr_IssCap","","",null,null],[17,"NID_set_rootKeyThumb","","",null,null],[17,"NID_set_addPolicy","","",null,null],[17,"NID_setAttr_Token_EMV","","",null,null],[17,"NID_setAttr_Token_B0Prime","","",null,null],[17,"NID_setAttr_IssCap_CVM","","",null,null],[17,"NID_setAttr_IssCap_T2","","",null,null],[17,"NID_setAttr_IssCap_Sig","","",null,null],[17,"NID_setAttr_GenCryptgrm","","",null,null],[17,"NID_setAttr_T2Enc","","",null,null],[17,"NID_setAttr_T2cleartxt","","",null,null],[17,"NID_setAttr_TokICCsig","","",null,null],[17,"NID_setAttr_SecDevSig","","",null,null],[17,"NID_set_brand_IATA_ATA","","",null,null],[17,"NID_set_brand_Diners","","",null,null],[17,"NID_set_brand_AmericanExpress","","",null,null],[17,"NID_set_brand_JCB","","",null,null],[17,"NID_set_brand_Visa","","",null,null],[17,"NID_set_brand_MasterCard","","",null,null],[17,"NID_set_brand_Novus","","",null,null],[17,"NID_des_cdmf","","",null,null],[17,"NID_rsaOAEPEncryptionSET","","",null,null],[17,"NID_ipsec3","","",null,null],[17,"NID_ipsec4","","",null,null],[17,"NID_whirlpool","","",null,null],[17,"NID_cryptopro","","",null,null],[17,"NID_cryptocom","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",null,null],[17,"NID_id_GostR3411_94","","",null,null],[17,"NID_id_HMACGostR3411_94","","",null,null],[17,"NID_id_GostR3410_2001","","",null,null],[17,"NID_id_GostR3410_94","","",null,null],[17,"NID_id_Gost28147_89","","",null,null],[17,"NID_gost89_cnt","","",null,null],[17,"NID_id_Gost28147_89_MAC","","",null,null],[17,"NID_id_GostR3411_94_prf","","",null,null],[17,"NID_id_GostR3410_2001DH","","",null,null],[17,"NID_id_GostR3410_94DH","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",null,null],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",null,null],[17,"NID_id_GostR3411_94_TestParamSet","","",null,null],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",null,null],[17,"NID_id_Gost28147_89_TestParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_TestParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_TestParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_a","","",null,null],[17,"NID_id_GostR3410_94_aBis","","",null,null],[17,"NID_id_GostR3410_94_b","","",null,null],[17,"NID_id_GostR3410_94_bBis","","",null,null],[17,"NID_id_Gost28147_89_cc","","",null,null],[17,"NID_id_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",null,null],[17,"NID_camellia_128_cbc","","",null,null],[17,"NID_camellia_192_cbc","","",null,null],[17,"NID_camellia_256_cbc","","",null,null],[17,"NID_id_camellia128_wrap","","",null,null],[17,"NID_id_camellia192_wrap","","",null,null],[17,"NID_id_camellia256_wrap","","",null,null],[17,"NID_camellia_128_ecb","","",null,null],[17,"NID_camellia_128_ofb128","","",null,null],[17,"NID_camellia_128_cfb128","","",null,null],[17,"NID_camellia_192_ecb","","",null,null],[17,"NID_camellia_192_ofb128","","",null,null],[17,"NID_camellia_192_cfb128","","",null,null],[17,"NID_camellia_256_ecb","","",null,null],[17,"NID_camellia_256_ofb128","","",null,null],[17,"NID_camellia_256_cfb128","","",null,null],[17,"NID_camellia_128_cfb1","","",null,null],[17,"NID_camellia_192_cfb1","","",null,null],[17,"NID_camellia_256_cfb1","","",null,null],[17,"NID_camellia_128_cfb8","","",null,null],[17,"NID_camellia_192_cfb8","","",null,null],[17,"NID_camellia_256_cfb8","","",null,null],[17,"NID_kisa","","",null,null],[17,"NID_seed_ecb","","",null,null],[17,"NID_seed_cbc","","",null,null],[17,"NID_seed_cfb128","","",null,null],[17,"NID_seed_ofb128","","",null,null],[17,"NID_hmac","","",null,null],[17,"NID_cmac","","",null,null],[17,"NID_rc4_hmac_md5","","",null,null],[17,"NID_aes_128_cbc_hmac_sha1","","",null,null],[17,"NID_aes_192_cbc_hmac_sha1","","",null,null],[17,"NID_aes_256_cbc_hmac_sha1","","",null,null],[17,"OCSP_NOCERTS","","",null,null],[17,"OCSP_NOINTERN","","",null,null],[17,"OCSP_NOSIGS","","",null,null],[17,"OCSP_NOCHAIN","","",null,null],[17,"OCSP_NOVERIFY","","",null,null],[17,"OCSP_NOEXPLICIT","","",null,null],[17,"OCSP_NOCASIGN","","",null,null],[17,"OCSP_NODELEGATED","","",null,null],[17,"OCSP_NOCHECKS","","",null,null],[17,"OCSP_TRUSTOTHER","","",null,null],[17,"OCSP_RESPID_KEY","","",null,null],[17,"OCSP_NOTIME","","",null,null],[17,"V_OCSP_CERTSTATUS_GOOD","","",null,null],[17,"V_OCSP_CERTSTATUS_REVOKED","","",null,null],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",null,null],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",null,null],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",null,null],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",null,null],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",null,null],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",null,null],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",null,null],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",null,null],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",null,null],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",null,null],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"OPENSSL_EC_NAMED_CURVE","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"PKCS12_DEFAULT_ITER","","",null,null],[17,"RSA_F4","","",null,null],[17,"RSA_PKCS1_PADDING","","",null,null],[17,"RSA_SSLV23_PADDING","","",null,null],[17,"RSA_NO_PADDING","","",null,null],[17,"RSA_PKCS1_OAEP_PADDING","","",null,null],[17,"RSA_X931_PADDING","","",null,null],[17,"SHA_LBLOCK","","",null,null],[17,"TLS1_AD_UNRECOGNIZED_NAME","","",null,null],[17,"SSL_AD_UNRECOGNIZED_NAME","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_SET_TMP_ECDH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",null,null],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_FILETYPE_PEM","","",null,null],[17,"SSL_FILETYPE_ASN1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"TLSEXT_STATUSTYPE_ocsp","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"OPENSSL_NPN_UNSUPPORTED","","",null,null],[17,"OPENSSL_NPN_NEGOTIATED","","",null,null],[17,"OPENSSL_NPN_NO_OVERLAP","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_OK","","",null,null],[17,"X509_V_ERR_UNSPECIFIED","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"point_conversion_form_t"}}]],"paths":[[3,"stack_st_ASN1_OBJECT"],[3,"stack_st_X509"],[3,"stack_st_X509_NAME"],[3,"stack_st_X509_ATTRIBUTE"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"stack_st_SSL_CIPHER"],[3,"stack_st_OPENSSL_STRING"],[3,"_STACK"],[3,"BIO_METHOD"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"BIGNUM"],[3,"DH"],[3,"X509"],[3,"X509_CINF"],[3,"X509_ALGOR"],[3,"ASN1_ENCODING"],[3,"X509_VAL"],[3,"X509_REQ_INFO"],[3,"X509_REQ"],[3,"SSL"],[3,"SSL_CTX"],[3,"SSL_SESSION"],[3,"GENERAL_NAME"],[3,"SHA_CTX"],[3,"SHA256_CTX"],[3,"SHA512_CTX"],[4,"point_conversion_form_t"]]};
searchIndex["organelle"] = {"doc":"Organelle - reactive architecture for emergent AI systems","items":[[3,"Axon","organelle","provides core convenience functions with little boilerplate",null,null],[3,"Sheath","","soma used to wrap a Axon and a soma specialized with Neuron",null,null],[3,"Organelle","","a special soma designed to contain a network of interconnected somas",null,null],[3,"Error","","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[3,"Effector","","the effector is a soma's method of communicating between other somas",null,null],[4,"Dendrite","","defines dendrites on how connections can be made",null,null],[13,"RequireOne","","require one connection with the specified role",1,null],[13,"Variadic","","require any number of connections with the specified role",1,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",2,null],[13,"Io","","glue for io::Error",2,null],[13,"Canceled","","glue for futures::Canceled",2,null],[13,"SomaError","","a soma returned an error when called into",2,null],[4,"Impulse","","a set of protocol messages to be relayed throughout the network",null,null],[13,"Init","","initializes a soma with an effector to use",3,null],[13,"AddInput","","add an input Handle with connection role",3,null],[13,"AddOutput","","add an output Handle with connection role",3,null],[13,"Start","","notifies soma that organelle has begun execution",3,null],[13,"Payload","","internal use only - used to track source and destination of message",3,null],[13,"Signal","","updates the soma with a user-defined message from source soma Handle",3,null],[13,"Stop","","tells the organelle to stop executing",3,null],[13,"Err","","stop the organelle because of an error",3,null],[11,"new","","create a new organelle with input and output somas",4,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"add_soma","","add a new soma to the organelle and initialize it",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handle"}}],[11,"connect","","connect input to output and update them accordingly",4,null],[11,"get_main_handle","","get the main soma's handle",4,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"update","","",4,{"inputs":[{"name":"self"},{"name":"impulse"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"dendrite"}}],[11,"new","","new axon with dendrites and default user-defined state",5,{"inputs":[{"generics":["dendrite"],"name":"vec"},{"generics":["dendrite"],"name":"vec"}],"output":{"name":"result"}}],[11,"update","","update the axon's inputs and outputs, then verify dendrites",5,{"inputs":[{"name":"self"},{"name":"impulse"}],"output":{"generics":["option"],"name":"result"}}],[11,"effector","","get the effector assigned to this soma",5,{"inputs":[{"name":"self"}],"output":{"generics":["effector"],"name":"result"}}],[11,"send_req_input","","convenience function for sending messages by role",5,{"inputs":[{"name":"self"},{"name":"y"},{"name":"s"}],"output":{"name":"result"}}],[11,"send_req_output","","convenience function for sending messages by role",5,{"inputs":[{"name":"self"},{"name":"y"},{"name":"s"}],"output":{"name":"result"}}],[11,"req_input","","get a RequireOne input",5,{"inputs":[{"name":"self"},{"name":"y"}],"output":{"generics":["handle"],"name":"result"}}],[11,"var_input","","get a Variadic input",5,{"inputs":[{"name":"self"},{"name":"y"}],"output":{"generics":["vec"],"name":"result"}}],[11,"req_output","","get a RequireOne output",5,{"inputs":[{"name":"self"},{"name":"y"}],"output":{"generics":["handle"],"name":"result"}}],[11,"var_output","","get a Variadic output",5,{"inputs":[{"name":"self"},{"name":"y"}],"output":{"generics":["vec"],"name":"result"}}],[11,"new","","wrap a nucleus and constrain the axon",6,{"inputs":[{"name":"n"},{"generics":["dendrite"],"name":"vec"},{"generics":["dendrite"],"name":"vec"}],"output":{"name":"result"}}],[11,"update","","",6,{"inputs":[{"name":"self"},{"name":"impulse"}],"output":{"name":"result"}}],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[6,"Handle","","handle to a soma within the organelle",null,null],[8,"Neuron","","a specialized soma meant to ensure the Axon is always handled correctly",null,null],[16,"Signal","","a message that was not handled by the Axon",7,null],[16,"Synapse","","the role a connection between somas takes",7,null],[10,"update","","update the nucleus with the Axon and soma message",7,{"inputs":[{"name":"self"},{"name":"axon"},{"name":"impulse"}],"output":{"name":"result"}}],[8,"Signal","","defines the collection of traits necessary to act as a soma message",null,null],[8,"Soma","","defines an interface for a soma of any type",null,null],[16,"Signal","","user-defined message to be passed between somas",8,null],[16,"Synapse","","user-defined roles for connections",8,null],[11,"update","","apply any changes to the soma's state as a result of _msg",8,{"inputs":[{"name":"self"},{"name":"impulse"}],"output":{"name":"result"}}],[11,"run","","spin up an event loop and run soma",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Synapse","","defines the collection of traits necessary to act as a soma role",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",0,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",0,null],[11,"with_chain","","",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",0,null],[11,"iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",0,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",0,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",0,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",0,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"canceled"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"this_soma","","get the Handle associated with the soma that owns this effector",10,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"send","","send a message to dest soma",10,{"inputs":[{"name":"self"},{"name":"handle"},{"name":"s"}],"output":null}],[11,"send_in_order","","send a batch of messages in order to dest soma",10,{"inputs":[{"name":"self"},{"name":"handle"},{"name":"vec"}],"output":null}],[11,"stop","","stop the organelle",10,{"inputs":[{"name":"self"}],"output":null}],[11,"error","","stop the organelle because of an error",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":null}],[11,"spawn","","spawn a future on the reactor",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"reactor","","get a reactor handle",10,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"remote","","get a reactor remote",10,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"update","","apply any changes to the soma's state as a result of _msg",8,{"inputs":[{"name":"self"},{"name":"impulse"}],"output":{"name":"result"}}],[11,"run","","spin up an event loop and run soma",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[3,"Error"],[4,"Dendrite"],[4,"ErrorKind"],[4,"Impulse"],[3,"Organelle"],[3,"Axon"],[3,"Sheath"],[8,"Neuron"],[8,"Soma"],[8,"ResultExt"],[3,"Effector"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the request.  For example, a forward slash indicates a path.  In order for that charcter to exist outside of a path separator, that charcter would need to be encoded.","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"inputs":[{"name":"u8"}],"output":{"name":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"e"}],"output":{"name":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",0,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"simple_encode_set"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"query_encode_set"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"default_encode_set"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"path_segment_encode_set"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",4,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"userinfo_encode_set"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"percentencode"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"size_hint","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"percentdecode"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"size_hint","","",7,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",7,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"option"}}],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",7,{"inputs":[{"name":"self"}],"output":{"generics":["cow","utf8error"],"name":"result"}}],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",7,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"cow"}}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"]]};
searchIndex["protobuf"] = {"doc":"","items":[[3,"UnknownFields","protobuf","",null,null],[12,"fields","","",0,null],[3,"UnknownFieldsIter","","",null,null],[3,"UnknownValues","","",null,null],[12,"fixed32","","",1,null],[12,"fixed64","","",1,null],[12,"varint","","",1,null],[12,"length_delimited","","",1,null],[3,"UnknownValuesIter","","",null,null],[3,"CachedSize","","Cached size field used in generated code. It is always equal to itself to simplify generated code. (Generated code can use `#[derive(Eq)]`).",null,null],[4,"UnknownValue","","",null,null],[13,"Fixed32","","",2,null],[13,"Fixed64","","",2,null],[13,"Varint","","",2,null],[13,"LengthDelimited","","",2,null],[4,"UnknownValueRef","","",null,null],[13,"Fixed32","","",3,null],[13,"Fixed64","","",3,null],[13,"Varint","","",3,null],[13,"LengthDelimited","","",3,null],[0,"descriptor","","",null,null],[3,"FileDescriptorSet","protobuf::descriptor","",null,null],[3,"FileDescriptorProto","","",null,null],[3,"DescriptorProto","","",null,null],[3,"DescriptorProto_ExtensionRange","","",null,null],[3,"DescriptorProto_ReservedRange","","",null,null],[3,"FieldDescriptorProto","","",null,null],[3,"OneofDescriptorProto","","",null,null],[3,"EnumDescriptorProto","","",null,null],[3,"EnumValueDescriptorProto","","",null,null],[3,"ServiceDescriptorProto","","",null,null],[3,"MethodDescriptorProto","","",null,null],[3,"FileOptions","","",null,null],[3,"MessageOptions","","",null,null],[3,"FieldOptions","","",null,null],[3,"OneofOptions","","",null,null],[3,"EnumOptions","","",null,null],[3,"EnumValueOptions","","",null,null],[3,"ServiceOptions","","",null,null],[3,"MethodOptions","","",null,null],[3,"UninterpretedOption","","",null,null],[3,"UninterpretedOption_NamePart","","",null,null],[3,"SourceCodeInfo","","",null,null],[3,"SourceCodeInfo_Location","","",null,null],[3,"GeneratedCodeInfo","","",null,null],[3,"GeneratedCodeInfo_Annotation","","",null,null],[4,"FieldDescriptorProto_Type","","",null,null],[13,"TYPE_DOUBLE","","",4,null],[13,"TYPE_FLOAT","","",4,null],[13,"TYPE_INT64","","",4,null],[13,"TYPE_UINT64","","",4,null],[13,"TYPE_INT32","","",4,null],[13,"TYPE_FIXED64","","",4,null],[13,"TYPE_FIXED32","","",4,null],[13,"TYPE_BOOL","","",4,null],[13,"TYPE_STRING","","",4,null],[13,"TYPE_GROUP","","",4,null],[13,"TYPE_MESSAGE","","",4,null],[13,"TYPE_BYTES","","",4,null],[13,"TYPE_UINT32","","",4,null],[13,"TYPE_ENUM","","",4,null],[13,"TYPE_SFIXED32","","",4,null],[13,"TYPE_SFIXED64","","",4,null],[13,"TYPE_SINT32","","",4,null],[13,"TYPE_SINT64","","",4,null],[4,"FieldDescriptorProto_Label","","",null,null],[13,"LABEL_OPTIONAL","","",5,null],[13,"LABEL_REQUIRED","","",5,null],[13,"LABEL_REPEATED","","",5,null],[4,"FileOptions_OptimizeMode","","",null,null],[13,"SPEED","","",6,null],[13,"CODE_SIZE","","",6,null],[13,"LITE_RUNTIME","","",6,null],[4,"FieldOptions_CType","","",null,null],[13,"STRING","","",7,null],[13,"CORD","","",7,null],[13,"STRING_PIECE","","",7,null],[4,"FieldOptions_JSType","","",null,null],[13,"JS_NORMAL","","",8,null],[13,"JS_STRING","","",8,null],[13,"JS_NUMBER","","",8,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"filedescriptorset"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"filedescriptorset"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"filedescriptorset"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"new","","",9,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"default_instance","","",9,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"clear_file","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"set_file","","",9,{"inputs":[{"name":"self"},{"generics":["filedescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_file","","",9,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_file","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["filedescriptorproto"],"name":"repeatedfield"}}],[11,"get_file","","",9,null],[11,"is_initialized","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",9,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",9,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",9,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",9,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",9,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",9,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",9,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",9,{"inputs":[],"output":{"name":"filedescriptorset"}}],[11,"descriptor_static","","",9,{"inputs":[{"generics":["filedescriptorset"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"filedescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"filedescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"filedescriptorproto"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"new","","",10,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"default_instance","","",10,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"clear_name","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",10,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_package","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"has_package","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_package","","",10,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_package","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_package","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_package","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_dependency","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_dependency","","",10,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_dependency","","",10,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_dependency","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_dependency","","",10,null],[11,"clear_public_dependency","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_public_dependency","","",10,{"inputs":[{"name":"self"},{"generics":["i32"],"name":"vec"}],"output":null}],[11,"mut_public_dependency","","",10,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_public_dependency","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"vec"}}],[11,"get_public_dependency","","",10,null],[11,"clear_weak_dependency","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_weak_dependency","","",10,{"inputs":[{"name":"self"},{"generics":["i32"],"name":"vec"}],"output":null}],[11,"mut_weak_dependency","","",10,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_weak_dependency","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"vec"}}],[11,"get_weak_dependency","","",10,null],[11,"clear_message_type","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_message_type","","",10,{"inputs":[{"name":"self"},{"generics":["descriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_message_type","","",10,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_message_type","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["descriptorproto"],"name":"repeatedfield"}}],[11,"get_message_type","","",10,null],[11,"clear_enum_type","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enum_type","","",10,{"inputs":[{"name":"self"},{"generics":["enumdescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_enum_type","","",10,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_enum_type","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["enumdescriptorproto"],"name":"repeatedfield"}}],[11,"get_enum_type","","",10,null],[11,"clear_service","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_service","","",10,{"inputs":[{"name":"self"},{"generics":["servicedescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_service","","",10,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_service","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["servicedescriptorproto"],"name":"repeatedfield"}}],[11,"get_service","","",10,null],[11,"clear_extension","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"set_extension","","",10,{"inputs":[{"name":"self"},{"generics":["fielddescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_extension","","",10,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_extension","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["fielddescriptorproto"],"name":"repeatedfield"}}],[11,"get_extension","","",10,null],[11,"clear_options","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",10,{"inputs":[{"name":"self"},{"name":"fileoptions"}],"output":null}],[11,"mut_options","","",10,{"inputs":[{"name":"self"}],"output":{"name":"fileoptions"}}],[11,"take_options","","",10,{"inputs":[{"name":"self"}],"output":{"name":"fileoptions"}}],[11,"get_options","","",10,{"inputs":[{"name":"self"}],"output":{"name":"fileoptions"}}],[11,"clear_source_code_info","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"has_source_code_info","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_source_code_info","","",10,{"inputs":[{"name":"self"},{"name":"sourcecodeinfo"}],"output":null}],[11,"mut_source_code_info","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sourcecodeinfo"}}],[11,"take_source_code_info","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sourcecodeinfo"}}],[11,"get_source_code_info","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sourcecodeinfo"}}],[11,"clear_syntax","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"has_syntax","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_syntax","","",10,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_syntax","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_syntax","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_syntax","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",10,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",10,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",10,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",10,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",10,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",10,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",10,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",10,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"descriptor_static","","",10,{"inputs":[{"generics":["filedescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"descriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"descriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"descriptorproto"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"new","","",11,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"default_instance","","",11,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"clear_name","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",11,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_field","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_field","","",11,{"inputs":[{"name":"self"},{"generics":["fielddescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_field","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_field","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["fielddescriptorproto"],"name":"repeatedfield"}}],[11,"get_field","","",11,null],[11,"clear_extension","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_extension","","",11,{"inputs":[{"name":"self"},{"generics":["fielddescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_extension","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_extension","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["fielddescriptorproto"],"name":"repeatedfield"}}],[11,"get_extension","","",11,null],[11,"clear_nested_type","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_nested_type","","",11,{"inputs":[{"name":"self"},{"generics":["descriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_nested_type","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_nested_type","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["descriptorproto"],"name":"repeatedfield"}}],[11,"get_nested_type","","",11,null],[11,"clear_enum_type","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enum_type","","",11,{"inputs":[{"name":"self"},{"generics":["enumdescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_enum_type","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_enum_type","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["enumdescriptorproto"],"name":"repeatedfield"}}],[11,"get_enum_type","","",11,null],[11,"clear_extension_range","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_extension_range","","",11,{"inputs":[{"name":"self"},{"generics":["descriptorproto_extensionrange"],"name":"repeatedfield"}],"output":null}],[11,"mut_extension_range","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_extension_range","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["descriptorproto_extensionrange"],"name":"repeatedfield"}}],[11,"get_extension_range","","",11,null],[11,"clear_oneof_decl","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_oneof_decl","","",11,{"inputs":[{"name":"self"},{"generics":["oneofdescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_oneof_decl","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_oneof_decl","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["oneofdescriptorproto"],"name":"repeatedfield"}}],[11,"get_oneof_decl","","",11,null],[11,"clear_options","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",11,{"inputs":[{"name":"self"},{"name":"messageoptions"}],"output":null}],[11,"mut_options","","",11,{"inputs":[{"name":"self"}],"output":{"name":"messageoptions"}}],[11,"take_options","","",11,{"inputs":[{"name":"self"}],"output":{"name":"messageoptions"}}],[11,"get_options","","",11,{"inputs":[{"name":"self"}],"output":{"name":"messageoptions"}}],[11,"clear_reserved_range","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_reserved_range","","",11,{"inputs":[{"name":"self"},{"generics":["descriptorproto_reservedrange"],"name":"repeatedfield"}],"output":null}],[11,"mut_reserved_range","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_reserved_range","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["descriptorproto_reservedrange"],"name":"repeatedfield"}}],[11,"get_reserved_range","","",11,null],[11,"clear_reserved_name","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"set_reserved_name","","",11,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_reserved_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_reserved_name","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_reserved_name","","",11,null],[11,"is_initialized","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",11,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",11,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",11,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",11,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",11,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",11,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",11,{"inputs":[],"output":{"name":"descriptorproto"}}],[11,"descriptor_static","","",11,{"inputs":[{"generics":["descriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"descriptorproto_extensionrange"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"descriptorproto_extensionrange"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"descriptorproto_extensionrange"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"new","","",12,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"default_instance","","",12,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"clear_start","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"has_start","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_start","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_start","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_end","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"has_end","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_end","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_end","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",12,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",12,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",12,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",12,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",12,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",12,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",12,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",12,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",12,{"inputs":[],"output":{"name":"descriptorproto_extensionrange"}}],[11,"descriptor_static","","",12,{"inputs":[{"generics":["descriptorproto_extensionrange"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"descriptorproto_reservedrange"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"descriptorproto_reservedrange"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"descriptorproto_reservedrange"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"descriptorproto_reservedrange"}}],[11,"new","","",13,{"inputs":[],"output":{"name":"descriptorproto_reservedrange"}}],[11,"default_instance","","",13,{"inputs":[],"output":{"name":"descriptorproto_reservedrange"}}],[11,"clear_start","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_start","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_start","","",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_start","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_end","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_end","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_end","","",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_end","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",13,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",13,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",13,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",13,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",13,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",13,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",13,{"inputs":[],"output":{"name":"descriptorproto_reservedrange"}}],[11,"descriptor_static","","",13,{"inputs":[{"generics":["descriptorproto_reservedrange"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"fielddescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"fielddescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fielddescriptorproto"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"new","","",14,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"default_instance","","",14,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"clear_name","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",14,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_number","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_number","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_number","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_number","","",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_label","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_label","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_label","","",14,{"inputs":[{"name":"self"},{"name":"fielddescriptorproto_label"}],"output":null}],[11,"get_label","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fielddescriptorproto_label"}}],[11,"clear_field_type","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",14,{"inputs":[{"name":"self"},{"name":"fielddescriptorproto_type"}],"output":null}],[11,"get_field_type","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fielddescriptorproto_type"}}],[11,"clear_type_name","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_type_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_type_name","","",14,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_type_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_type_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_type_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_extendee","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_extendee","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_extendee","","",14,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_extendee","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_extendee","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_extendee","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_default_value","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_default_value","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_default_value","","",14,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_default_value","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_default_value","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_default_value","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_oneof_index","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_oneof_index","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_oneof_index","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_oneof_index","","",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_json_name","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_json_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_json_name","","",14,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_json_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_json_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_json_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_options","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",14,{"inputs":[{"name":"self"},{"name":"fieldoptions"}],"output":null}],[11,"mut_options","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions"}}],[11,"take_options","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions"}}],[11,"get_options","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions"}}],[11,"is_initialized","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",14,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",14,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",14,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",14,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",14,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",14,{"inputs":[],"output":{"name":"fielddescriptorproto"}}],[11,"descriptor_static","","",14,{"inputs":[{"generics":["fielddescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"fielddescriptorproto_type"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"fielddescriptorproto_type"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"value","","",4,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",4,{"inputs":[{"name":"i32"}],"output":{"generics":["fielddescriptorproto_type"],"name":"option"}}],[11,"values","","",4,null],[11,"enum_descriptor_static","","",4,{"inputs":[{"generics":["fielddescriptorproto_type"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"fielddescriptorproto_label"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"fielddescriptorproto_label"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"value","","",5,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",5,{"inputs":[{"name":"i32"}],"output":{"generics":["fielddescriptorproto_label"],"name":"option"}}],[11,"values","","",5,null],[11,"enum_descriptor_static","","",5,{"inputs":[{"generics":["fielddescriptorproto_label"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"oneofdescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"oneofdescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"oneofdescriptorproto"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"new","","",15,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"default_instance","","",15,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"clear_name","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",15,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_options","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",15,{"inputs":[{"name":"self"},{"name":"oneofoptions"}],"output":null}],[11,"mut_options","","",15,{"inputs":[{"name":"self"}],"output":{"name":"oneofoptions"}}],[11,"take_options","","",15,{"inputs":[{"name":"self"}],"output":{"name":"oneofoptions"}}],[11,"get_options","","",15,{"inputs":[{"name":"self"}],"output":{"name":"oneofoptions"}}],[11,"is_initialized","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",15,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",15,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",15,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",15,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",15,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",15,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",15,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",15,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",15,{"inputs":[],"output":{"name":"oneofdescriptorproto"}}],[11,"descriptor_static","","",15,{"inputs":[{"generics":["oneofdescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"enumdescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"enumdescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"enumdescriptorproto"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"default_instance","","",16,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"clear_name","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",16,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_value","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",16,{"inputs":[{"name":"self"},{"generics":["enumvaluedescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_value","","",16,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_value","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["enumvaluedescriptorproto"],"name":"repeatedfield"}}],[11,"get_value","","",16,null],[11,"clear_options","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",16,{"inputs":[{"name":"self"},{"name":"enumoptions"}],"output":null}],[11,"mut_options","","",16,{"inputs":[{"name":"self"}],"output":{"name":"enumoptions"}}],[11,"take_options","","",16,{"inputs":[{"name":"self"}],"output":{"name":"enumoptions"}}],[11,"get_options","","",16,{"inputs":[{"name":"self"}],"output":{"name":"enumoptions"}}],[11,"is_initialized","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",16,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",16,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",16,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",16,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",16,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",16,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",16,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",16,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"enumdescriptorproto"}}],[11,"descriptor_static","","",16,{"inputs":[{"generics":["enumdescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",16,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"enumvaluedescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"enumvaluedescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"enumvaluedescriptorproto"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"new","","",17,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"default_instance","","",17,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"clear_name","","",17,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",17,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_number","","",17,{"inputs":[{"name":"self"}],"output":null}],[11,"has_number","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_number","","",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_number","","",17,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_options","","",17,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",17,{"inputs":[{"name":"self"},{"name":"enumvalueoptions"}],"output":null}],[11,"mut_options","","",17,{"inputs":[{"name":"self"}],"output":{"name":"enumvalueoptions"}}],[11,"take_options","","",17,{"inputs":[{"name":"self"}],"output":{"name":"enumvalueoptions"}}],[11,"get_options","","",17,{"inputs":[{"name":"self"}],"output":{"name":"enumvalueoptions"}}],[11,"is_initialized","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",17,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",17,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",17,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",17,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",17,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",17,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",17,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",17,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",17,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",17,{"inputs":[],"output":{"name":"enumvaluedescriptorproto"}}],[11,"descriptor_static","","",17,{"inputs":[{"generics":["enumvaluedescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",17,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",17,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"servicedescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"servicedescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"servicedescriptorproto"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"default_instance","","",18,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"clear_name","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",18,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",18,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",18,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",18,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_method","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"set_method","","",18,{"inputs":[{"name":"self"},{"generics":["methoddescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_method","","",18,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_method","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["methoddescriptorproto"],"name":"repeatedfield"}}],[11,"get_method","","",18,null],[11,"clear_options","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",18,{"inputs":[{"name":"self"},{"name":"serviceoptions"}],"output":null}],[11,"mut_options","","",18,{"inputs":[{"name":"self"}],"output":{"name":"serviceoptions"}}],[11,"take_options","","",18,{"inputs":[{"name":"self"}],"output":{"name":"serviceoptions"}}],[11,"get_options","","",18,{"inputs":[{"name":"self"}],"output":{"name":"serviceoptions"}}],[11,"is_initialized","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",18,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",18,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",18,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",18,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",18,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",18,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",18,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",18,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"servicedescriptorproto"}}],[11,"descriptor_static","","",18,{"inputs":[{"generics":["servicedescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"methoddescriptorproto"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"methoddescriptorproto"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"methoddescriptorproto"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"new","","",19,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"default_instance","","",19,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"clear_name","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",19,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",19,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_input_type","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"has_input_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_input_type","","",19,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_input_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_input_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_input_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_output_type","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"has_output_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_output_type","","",19,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_output_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_output_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_output_type","","",19,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_options","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",19,{"inputs":[{"name":"self"},{"name":"methodoptions"}],"output":null}],[11,"mut_options","","",19,{"inputs":[{"name":"self"}],"output":{"name":"methodoptions"}}],[11,"take_options","","",19,{"inputs":[{"name":"self"}],"output":{"name":"methodoptions"}}],[11,"get_options","","",19,{"inputs":[{"name":"self"}],"output":{"name":"methodoptions"}}],[11,"clear_client_streaming","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"has_client_streaming","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_client_streaming","","",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_client_streaming","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_server_streaming","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"has_server_streaming","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_server_streaming","","",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_server_streaming","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",19,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",19,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",19,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",19,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",19,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",19,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",19,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",19,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",19,{"inputs":[],"output":{"name":"methoddescriptorproto"}}],[11,"descriptor_static","","",19,{"inputs":[{"generics":["methoddescriptorproto"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"fileoptions"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"fileoptions"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"fileoptions"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"new","","",20,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"default_instance","","",20,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"clear_java_package","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_java_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_java_package","","",20,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_java_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_java_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_java_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_java_outer_classname","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_java_outer_classname","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_java_outer_classname","","",20,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_java_outer_classname","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_java_outer_classname","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_java_outer_classname","","",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_java_multiple_files","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_java_multiple_files","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_java_multiple_files","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_java_multiple_files","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_java_generate_equals_and_hash","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_java_generate_equals_and_hash","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_java_generate_equals_and_hash","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_java_generate_equals_and_hash","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_java_string_check_utf8","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_java_string_check_utf8","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_java_string_check_utf8","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_java_string_check_utf8","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_optimize_for","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_optimize_for","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_optimize_for","","",20,{"inputs":[{"name":"self"},{"name":"fileoptions_optimizemode"}],"output":null}],[11,"get_optimize_for","","",20,{"inputs":[{"name":"self"}],"output":{"name":"fileoptions_optimizemode"}}],[11,"clear_go_package","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_go_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_go_package","","",20,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_go_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_go_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_go_package","","",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_cc_generic_services","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cc_generic_services","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cc_generic_services","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_cc_generic_services","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_java_generic_services","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_java_generic_services","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_java_generic_services","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_java_generic_services","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_py_generic_services","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_py_generic_services","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_py_generic_services","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_py_generic_services","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_deprecated","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_cc_enable_arenas","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cc_enable_arenas","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cc_enable_arenas","","",20,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_cc_enable_arenas","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_objc_class_prefix","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_objc_class_prefix","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_objc_class_prefix","","",20,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_objc_class_prefix","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_objc_class_prefix","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_objc_class_prefix","","",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_csharp_namespace","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"has_csharp_namespace","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_csharp_namespace","","",20,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_csharp_namespace","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_csharp_namespace","","",20,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_csharp_namespace","","",20,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_uninterpreted_option","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",20,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",20,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",20,null],[11,"is_initialized","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",20,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",20,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",20,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",20,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",20,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",20,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",20,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",20,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",20,{"inputs":[],"output":{"name":"fileoptions"}}],[11,"descriptor_static","","",20,{"inputs":[{"generics":["fileoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"fileoptions_optimizemode"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"fileoptions_optimizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"value","","",6,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",6,{"inputs":[{"name":"i32"}],"output":{"generics":["fileoptions_optimizemode"],"name":"option"}}],[11,"values","","",6,null],[11,"enum_descriptor_static","","",6,{"inputs":[{"generics":["fileoptions_optimizemode"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"messageoptions"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"messageoptions"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"messageoptions"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"new","","",21,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"default_instance","","",21,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"clear_message_set_wire_format","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"has_message_set_wire_format","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_message_set_wire_format","","",21,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_message_set_wire_format","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_no_standard_descriptor_accessor","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"has_no_standard_descriptor_accessor","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_no_standard_descriptor_accessor","","",21,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_no_standard_descriptor_accessor","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_deprecated","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",21,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_map_entry","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_entry","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_entry","","",21,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_map_entry","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_uninterpreted_option","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",21,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",21,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",21,null],[11,"is_initialized","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",21,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",21,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",21,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",21,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",21,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",21,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",21,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",21,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",21,{"inputs":[],"output":{"name":"messageoptions"}}],[11,"descriptor_static","","",21,{"inputs":[{"generics":["messageoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"fieldoptions"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"fieldoptions"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"new","","",22,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"default_instance","","",22,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"clear_ctype","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ctype","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ctype","","",22,{"inputs":[{"name":"self"},{"name":"fieldoptions_ctype"}],"output":null}],[11,"get_ctype","","",22,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions_ctype"}}],[11,"clear_packed","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_packed","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_packed","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_packed","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_jstype","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_jstype","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_jstype","","",22,{"inputs":[{"name":"self"},{"name":"fieldoptions_jstype"}],"output":null}],[11,"get_jstype","","",22,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions_jstype"}}],[11,"clear_lazy","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_lazy","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_lazy","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_lazy","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_deprecated","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_weak","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_weak","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_weak","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_weak","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_uninterpreted_option","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",22,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",22,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",22,null],[11,"is_initialized","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",22,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",22,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",22,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",22,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",22,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",22,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",22,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",22,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",22,{"inputs":[],"output":{"name":"fieldoptions"}}],[11,"descriptor_static","","",22,{"inputs":[{"generics":["fieldoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",22,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions_ctype"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"fieldoptions_ctype"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"value","","",7,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",7,{"inputs":[{"name":"i32"}],"output":{"generics":["fieldoptions_ctype"],"name":"option"}}],[11,"values","","",7,null],[11,"enum_descriptor_static","","",7,{"inputs":[{"generics":["fieldoptions_ctype"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"fieldoptions_jstype"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"fieldoptions_jstype"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"value","","",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",8,{"inputs":[{"name":"i32"}],"output":{"generics":["fieldoptions_jstype"],"name":"option"}}],[11,"values","","",8,null],[11,"enum_descriptor_static","","",8,{"inputs":[{"generics":["fieldoptions_jstype"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"oneofoptions"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"oneofoptions"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"oneofoptions"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"oneofoptions"}}],[11,"new","","",23,{"inputs":[],"output":{"name":"oneofoptions"}}],[11,"default_instance","","",23,{"inputs":[],"output":{"name":"oneofoptions"}}],[11,"clear_uninterpreted_option","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",23,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",23,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",23,null],[11,"is_initialized","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",23,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",23,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",23,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",23,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",23,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",23,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",23,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",23,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",23,{"inputs":[],"output":{"name":"oneofoptions"}}],[11,"descriptor_static","","",23,{"inputs":[{"generics":["oneofoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"enumoptions"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"enumoptions"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"enumoptions"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"new","","",24,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"default_instance","","",24,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"clear_allow_alias","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"has_allow_alias","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_allow_alias","","",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_allow_alias","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_deprecated","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_uninterpreted_option","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",24,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",24,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",24,null],[11,"is_initialized","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",24,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",24,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",24,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",24,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",24,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",24,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",24,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",24,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",24,{"inputs":[],"output":{"name":"enumoptions"}}],[11,"descriptor_static","","",24,{"inputs":[{"generics":["enumoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",24,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"enumvalueoptions"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"enumvalueoptions"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"enumvalueoptions"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"new","","",25,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"default_instance","","",25,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"clear_deprecated","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",25,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_uninterpreted_option","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",25,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",25,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",25,null],[11,"is_initialized","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",25,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",25,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",25,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",25,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",25,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",25,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",25,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",25,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",25,{"inputs":[],"output":{"name":"enumvalueoptions"}}],[11,"descriptor_static","","",25,{"inputs":[{"generics":["enumvalueoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"serviceoptions"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"serviceoptions"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"serviceoptions"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"new","","",26,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"default_instance","","",26,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"clear_deprecated","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",26,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_uninterpreted_option","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",26,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",26,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",26,null],[11,"is_initialized","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",26,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",26,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",26,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",26,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",26,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",26,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",26,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",26,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",26,{"inputs":[],"output":{"name":"serviceoptions"}}],[11,"descriptor_static","","",26,{"inputs":[{"generics":["serviceoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",26,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"methodoptions"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"methodoptions"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"methodoptions"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"new","","",27,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"default_instance","","",27,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"clear_deprecated","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"has_deprecated","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_deprecated","","",27,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_deprecated","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_uninterpreted_option","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"set_uninterpreted_option","","",27,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption"],"name":"repeatedfield"}],"output":null}],[11,"mut_uninterpreted_option","","",27,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_uninterpreted_option","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption"],"name":"repeatedfield"}}],[11,"get_uninterpreted_option","","",27,null],[11,"is_initialized","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",27,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",27,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",27,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",27,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",27,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",27,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",27,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",27,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",27,{"inputs":[],"output":{"name":"methodoptions"}}],[11,"descriptor_static","","",27,{"inputs":[{"generics":["methodoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",27,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"uninterpretedoption"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"uninterpretedoption"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"uninterpretedoption"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"new","","",28,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"default_instance","","",28,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"clear_name","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",28,{"inputs":[{"name":"self"},{"generics":["uninterpretedoption_namepart"],"name":"repeatedfield"}],"output":null}],[11,"mut_name","","",28,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_name","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["uninterpretedoption_namepart"],"name":"repeatedfield"}}],[11,"get_name","","",28,null],[11,"clear_identifier_value","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_identifier_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_identifier_value","","",28,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_identifier_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_identifier_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_identifier_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_positive_int_value","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_positive_int_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_positive_int_value","","",28,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_positive_int_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_negative_int_value","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_negative_int_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_negative_int_value","","",28,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"get_negative_int_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"clear_double_value","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_double_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_double_value","","",28,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"get_double_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"clear_string_value","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_string_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_string_value","","",28,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_string_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_string_value","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_string_value","","",28,null],[11,"clear_aggregate_value","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_aggregate_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_aggregate_value","","",28,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_aggregate_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_aggregate_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_aggregate_value","","",28,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",28,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",28,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",28,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",28,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",28,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",28,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",28,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",28,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",28,{"inputs":[],"output":{"name":"uninterpretedoption"}}],[11,"descriptor_static","","",28,{"inputs":[{"generics":["uninterpretedoption"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",28,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"uninterpretedoption_namepart"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"uninterpretedoption_namepart"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"uninterpretedoption_namepart"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"new","","",29,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"default_instance","","",29,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"clear_name_part","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name_part","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name_part","","",29,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name_part","","",29,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name_part","","",29,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name_part","","",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_is_extension","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_extension","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_extension","","",29,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_extension","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",29,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",29,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",29,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",29,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",29,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",29,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",29,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",29,{"inputs":[],"output":{"name":"uninterpretedoption_namepart"}}],[11,"descriptor_static","","",29,{"inputs":[{"generics":["uninterpretedoption_namepart"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"sourcecodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"sourcecodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"sourcecodeinfo"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"new","","",30,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"default_instance","","",30,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"clear_location","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"set_location","","",30,{"inputs":[{"name":"self"},{"generics":["sourcecodeinfo_location"],"name":"repeatedfield"}],"output":null}],[11,"mut_location","","",30,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_location","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["sourcecodeinfo_location"],"name":"repeatedfield"}}],[11,"get_location","","",30,null],[11,"is_initialized","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",30,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",30,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",30,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",30,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",30,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",30,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",30,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",30,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",30,{"inputs":[],"output":{"name":"sourcecodeinfo"}}],[11,"descriptor_static","","",30,{"inputs":[{"generics":["sourcecodeinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",30,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"sourcecodeinfo_location"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"sourcecodeinfo_location"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"sourcecodeinfo_location"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"default_instance","","",31,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"clear_path","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"set_path","","",31,{"inputs":[{"name":"self"},{"generics":["i32"],"name":"vec"}],"output":null}],[11,"mut_path","","",31,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_path","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"vec"}}],[11,"get_path","","",31,null],[11,"clear_span","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"set_span","","",31,{"inputs":[{"name":"self"},{"generics":["i32"],"name":"vec"}],"output":null}],[11,"mut_span","","",31,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_span","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"vec"}}],[11,"get_span","","",31,null],[11,"clear_leading_comments","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"has_leading_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_leading_comments","","",31,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_leading_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_leading_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_leading_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_trailing_comments","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"has_trailing_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_trailing_comments","","",31,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_trailing_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_trailing_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_trailing_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_leading_detached_comments","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"set_leading_detached_comments","","",31,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_leading_detached_comments","","",31,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_leading_detached_comments","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_leading_detached_comments","","",31,null],[11,"is_initialized","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",31,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",31,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",31,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",31,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",31,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",31,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",31,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",31,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"sourcecodeinfo_location"}}],[11,"descriptor_static","","",31,{"inputs":[{"generics":["sourcecodeinfo_location"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",31,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"generatedcodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"generatedcodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"generatedcodeinfo"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"generatedcodeinfo"}}],[11,"new","","",32,{"inputs":[],"output":{"name":"generatedcodeinfo"}}],[11,"default_instance","","",32,{"inputs":[],"output":{"name":"generatedcodeinfo"}}],[11,"clear_annotation","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"set_annotation","","",32,{"inputs":[{"name":"self"},{"generics":["generatedcodeinfo_annotation"],"name":"repeatedfield"}],"output":null}],[11,"mut_annotation","","",32,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_annotation","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["generatedcodeinfo_annotation"],"name":"repeatedfield"}}],[11,"get_annotation","","",32,null],[11,"is_initialized","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",32,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",32,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",32,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",32,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",32,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",32,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",32,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",32,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",32,{"inputs":[],"output":{"name":"generatedcodeinfo"}}],[11,"descriptor_static","","",32,{"inputs":[{"generics":["generatedcodeinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",32,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"generatedcodeinfo_annotation"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"generatedcodeinfo_annotation"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"generatedcodeinfo_annotation"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"generatedcodeinfo_annotation"}}],[11,"new","","",33,{"inputs":[],"output":{"name":"generatedcodeinfo_annotation"}}],[11,"default_instance","","",33,{"inputs":[],"output":{"name":"generatedcodeinfo_annotation"}}],[11,"clear_path","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"set_path","","",33,{"inputs":[{"name":"self"},{"generics":["i32"],"name":"vec"}],"output":null}],[11,"mut_path","","",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_path","","",33,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"vec"}}],[11,"get_path","","",33,null],[11,"clear_source_file","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"has_source_file","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_source_file","","",33,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_source_file","","",33,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_source_file","","",33,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_source_file","","",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_begin","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"has_begin","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_begin","","",33,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_begin","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_end","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"has_end","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_end","","",33,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_end","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",33,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",33,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",33,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",33,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",33,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",33,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",33,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",33,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",33,{"inputs":[],"output":{"name":"generatedcodeinfo_annotation"}}],[11,"descriptor_static","","",33,{"inputs":[{"generics":["generatedcodeinfo_annotation"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"plugin","protobuf","",null,null],[3,"CodeGeneratorRequest","protobuf::plugin","",null,null],[3,"CodeGeneratorResponse","","",null,null],[3,"CodeGeneratorResponse_File","","",null,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"codegeneratorrequest"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"codegeneratorrequest"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"codegeneratorrequest"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"new","","",34,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"default_instance","","",34,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"clear_file_to_generate","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"set_file_to_generate","","",34,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_file_to_generate","","",34,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_file_to_generate","","",34,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_file_to_generate","","",34,null],[11,"clear_parameter","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"has_parameter","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_parameter","","",34,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_parameter","","",34,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_parameter","","",34,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_parameter","","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_proto_file","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"set_proto_file","","",34,{"inputs":[{"name":"self"},{"generics":["filedescriptorproto"],"name":"repeatedfield"}],"output":null}],[11,"mut_proto_file","","",34,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_proto_file","","",34,{"inputs":[{"name":"self"}],"output":{"generics":["filedescriptorproto"],"name":"repeatedfield"}}],[11,"get_proto_file","","",34,null],[11,"is_initialized","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",34,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",34,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",34,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",34,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",34,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",34,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",34,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",34,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",34,{"inputs":[],"output":{"name":"codegeneratorrequest"}}],[11,"descriptor_static","","",34,{"inputs":[{"generics":["codegeneratorrequest"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"codegeneratorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"codegeneratorresponse"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"codegeneratorresponse"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"new","","",35,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"default_instance","","",35,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"clear_error","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",35,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_error","","",35,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_error","","",35,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_error","","",35,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_file","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"set_file","","",35,{"inputs":[{"name":"self"},{"generics":["codegeneratorresponse_file"],"name":"repeatedfield"}],"output":null}],[11,"mut_file","","",35,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_file","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["codegeneratorresponse_file"],"name":"repeatedfield"}}],[11,"get_file","","",35,null],[11,"is_initialized","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",35,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",35,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",35,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",35,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",35,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",35,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",35,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",35,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",35,{"inputs":[],"output":{"name":"codegeneratorresponse"}}],[11,"descriptor_static","","",35,{"inputs":[{"generics":["codegeneratorresponse"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",35,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"codegeneratorresponse_file"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"codegeneratorresponse_file"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"codegeneratorresponse_file"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"new","","",36,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"default_instance","","",36,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"clear_name","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",36,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_insertion_point","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"has_insertion_point","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_insertion_point","","",36,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_insertion_point","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_insertion_point","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_insertion_point","","",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_content","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"has_content","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_content","","",36,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_content","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_content","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_content","","",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",36,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",36,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",36,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",36,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",36,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",36,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",36,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",36,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",36,{"inputs":[],"output":{"name":"codegeneratorresponse_file"}}],[11,"descriptor_static","","",36,{"inputs":[{"generics":["codegeneratorresponse_file"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",36,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"core","protobuf","",null,null],[5,"message_down_cast","protobuf::core","",null,{"inputs":[{"name":"message"}],"output":{"name":"m"}}],[5,"parse_from","","",null,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[5,"parse_from_reader","","",null,{"inputs":[{"name":"read"}],"output":{"name":"protobufresult"}}],[5,"parse_from_bytes","","",null,null],[5,"parse_length_delimited_from","","",null,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[5,"parse_length_delimited_from_reader","","",null,{"inputs":[{"name":"read"}],"output":{"name":"protobufresult"}}],[5,"parse_length_delimited_from_bytes","","",null,null],[8,"Message","","",null,null],[10,"descriptor","","",37,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[10,"is_initialized","","",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"merge_from","","",37,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[10,"write_to_with_cached_sizes","","",37,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[10,"compute_size","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_cached_size","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to","","",37,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"write_length_delimited_to","","",37,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"write_length_delimited_to_vec","","",37,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"merge_from_bytes","","",37,null],[11,"check_initialized","","",37,{"inputs":[{"name":"self"}],"output":{"name":"protobufresult"}}],[11,"write_to_writer","","",37,{"inputs":[{"name":"self"},{"name":"write"}],"output":{"name":"protobufresult"}}],[11,"write_to_vec","","",37,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"write_to_bytes","","",37,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"protobufresult"}}],[11,"write_length_delimited_to_writer","","",37,{"inputs":[{"name":"self"},{"name":"write"}],"output":{"name":"protobufresult"}}],[11,"write_length_delimited_to_bytes","","",37,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"protobufresult"}}],[10,"get_unknown_fields","","",37,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[10,"mut_unknown_fields","","",37,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"type_id","","",37,{"inputs":[{"name":"self"}],"output":{"name":"typeid"}}],[10,"as_any","","",37,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",37,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",37,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[8,"MessageStatic","","",null,null],[10,"new","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"descriptor_static","","",38,{"inputs":[{"name":"option"}],"output":{"name":"messagedescriptor"}}],[8,"ProtobufEnum","","",null,null],[10,"value","","",39,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"from_i32","","",39,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"values","","",39,null],[11,"descriptor","","",39,{"inputs":[{"name":"self"}],"output":{"name":"enumvaluedescriptor"}}],[11,"enum_descriptor","","",39,{"inputs":[{"name":"self"}],"output":{"name":"enumdescriptor"}}],[11,"enum_descriptor_static","","",39,{"inputs":[{"name":"option"}],"output":{"name":"enumdescriptor"}}],[0,"rt","protobuf","",null,null],[5,"compute_raw_varint64_size","protobuf::rt","",null,{"inputs":[{"name":"u64"}],"output":{"name":"u32"}}],[5,"compute_raw_varint32_size","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"vec_packed_varint_data_size","","",null,null],[5,"vec_packed_varint_zigzag_data_size","","",null,null],[5,"vec_packed_enum_data_size","","",null,null],[5,"vec_packed_varint_size","","",null,null],[5,"vec_packed_varint_zigzag_size","","",null,null],[5,"vec_packed_enum_size","","",null,null],[5,"tag_size","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"value_size_no_tag","","",null,{"inputs":[{"name":"t"},{"name":"wiretype"}],"output":{"name":"u32"}}],[5,"value_size","","",null,{"inputs":[{"name":"u32"},{"name":"t"},{"name":"wiretype"}],"output":{"name":"u32"}}],[5,"value_varint_zigzag_size_no_tag","","Length of value when encoded with zigzag encoding",null,{"inputs":[{"name":"t"}],"output":{"name":"u32"}}],[5,"value_varint_zigzag_size","","Length of value when encoding with zigzag encoding with tag",null,{"inputs":[{"name":"u32"},{"name":"t"}],"output":{"name":"u32"}}],[5,"enum_size","","",null,{"inputs":[{"name":"u32"},{"name":"e"}],"output":{"name":"u32"}}],[5,"bytes_size_no_tag","","",null,null],[5,"bytes_size","","",null,null],[5,"string_size_no_tag","","",null,{"inputs":[{"name":"str"}],"output":{"name":"u32"}}],[5,"string_size","","",null,{"inputs":[{"name":"u32"},{"name":"str"}],"output":{"name":"u32"}}],[5,"unknown_fields_size","","",null,{"inputs":[{"name":"unknownfields"}],"output":{"name":"u32"}}],[5,"read_repeated_int32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_int64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_uint32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_uint64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sint32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sint64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_fixed32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_fixed64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sfixed32_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_sfixed64_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_double_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_float_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_bool_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_enum_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_string_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"repeatedfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_string_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"singularfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_proto3_string_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"string"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_bytes_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"repeatedfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_bytes_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"singularfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_proto3_bytes_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[5,"read_repeated_message_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"repeatedfield"}],"output":{"name":"protobufresult"}}],[5,"read_singular_message_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"singularptrfield"}],"output":{"name":"protobufresult"}}],[5,"read_unknown_or_skip_group","","",null,{"inputs":[{"name":"u32"},{"name":"wiretype"},{"name":"codedinputstream"},{"name":"unknownfields"}],"output":{"name":"protobufresult"}}],[5,"unexpected_wire_type","","Create an error for unexpected wire type.",null,{"inputs":[{"name":"wiretype"}],"output":{"name":"protobuferror"}}],[5,"compute_map_size","","",null,{"inputs":[{"name":"u32"},{"name":"hashmap"}],"output":{"name":"u32"}}],[5,"write_map_with_cached_sizes","","",null,{"inputs":[{"name":"u32"},{"name":"hashmap"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[5,"read_map_into","","",null,{"inputs":[{"name":"wiretype"},{"name":"codedinputstream"},{"name":"hashmap"}],"output":{"name":"protobufresult"}}],[8,"ProtobufVarint","","",null,null],[10,"len_varint","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[8,"ProtobufVarintZigzag","","",null,null],[10,"len_varint_zigzag","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[0,"lazy","protobuf","",null,null],[3,"Lazy","protobuf::lazy","",null,null],[12,"lock","","",42,null],[12,"ptr","","",42,null],[17,"ONCE_INIT","","",null,null],[11,"get","","",42,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[0,"code_writer","protobuf","",null,null],[3,"CodeWriter","protobuf::code_writer","",null,null],[4,"Visibility","","",null,null],[13,"Public","","",43,null],[13,"Default","","",43,null],[11,"new","","",44,{"inputs":[{"name":"write"}],"output":{"name":"codewriter"}}],[11,"write_line","","",44,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"write_generated","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"todo","","",44,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"unimplemented","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"indented","","",44,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"commented","","",44,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"pub_const","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[11,"lazy_static","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[11,"lazy_static_decl_get","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"f"}],"output":null}],[11,"lazy_static_decl_get_simple","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[11,"block","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"f"}],"output":null}],[11,"expr_block","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"stmt_block","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"unsafe_expr","","",44,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"impl_self_block","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"impl_for_block","","",44,{"inputs":[{"name":"self"},{"name":"s1"},{"name":"s2"},{"name":"f"}],"output":null}],[11,"unsafe_impl","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[11,"pub_struct","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"def_struct","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"pub_enum","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"pub_trait","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"field_entry","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[11,"field_decl","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[11,"pub_field_decl","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[11,"field_decl_vis","","",44,{"inputs":[{"name":"self"},{"name":"visibility"},{"name":"str"},{"name":"str"}],"output":null}],[11,"derive","","",44,null],[11,"allow","","",44,null],[11,"comment","","",44,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"fn_def","","",44,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"fn_block","","",44,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"str"},{"name":"f"}],"output":null}],[11,"pub_fn","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"def_fn","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"def_mod","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"pub_mod","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":null}],[11,"while_block","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"if_stmt","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"if_else_stmt","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"if_let_stmt","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"f"}],"output":null}],[11,"if_let_else_stmt","","",44,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"f"}],"output":null}],[11,"for_stmt","","",44,{"inputs":[{"name":"self"},{"name":"s1"},{"name":"s2"},{"name":"f"}],"output":null}],[11,"match_block","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"match_expr","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"case_block","","",44,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"case_expr","","",44,{"inputs":[{"name":"self"},{"name":"s1"},{"name":"s2"}],"output":null}],[11,"error_unexpected_wire_type","","",44,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"assert_wire_type","","",44,{"inputs":[{"name":"self"},{"name":"wiretype"}],"output":null}],[0,"codegen","protobuf","",null,null],[5,"gen","protobuf::codegen","",null,null],[5,"protoc_gen_rust_main","","",null,{"inputs":[],"output":null}],[0,"compiler_plugin","protobuf","",null,null],[3,"GenResult","protobuf::compiler_plugin","",null,null],[12,"name","","",45,null],[12,"content","","",45,null],[5,"plugin_main","","",null,null],[0,"repeated","protobuf","",null,null],[3,"RepeatedField","protobuf::repeated","",null,null],[11,"len","","",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clear","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",46,{"inputs":[],"output":{"name":"repeatedfield"}}],[11,"new","","",46,{"inputs":[],"output":{"name":"repeatedfield"}}],[11,"from_vec","","",46,{"inputs":[{"name":"vec"}],"output":{"name":"repeatedfield"}}],[11,"into_vec","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"capacity","","",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_mut_slice","","",46,null],[11,"slice","","",46,null],[11,"slice_mut","","",46,null],[11,"slice_from","","",46,null],[11,"slice_from_mut","","",46,null],[11,"slice_to","","",46,null],[11,"slice_to_mut","","",46,null],[11,"split_at","","",46,null],[11,"split_at_mut","","",46,null],[11,"tail","","",46,null],[11,"last","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"last_mut","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"init","","",46,null],[11,"push","","",46,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"insert","","",46,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"t"}],"output":null}],[11,"remove","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"truncate","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reverse","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",46,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"iter","","",46,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","",46,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"sort_by","","",46,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"as_ptr","","",46,null],[11,"as_mut_ptr","","",46,null],[11,"push_default","","",46,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"from_slice","","",46,null],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"from_iter","","",46,{"inputs":[{"name":"i"}],"output":{"name":"repeatedfield"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"repeatedfield"}],"output":{"name":"bool"}}],[11,"contains","","",46,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",46,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"as_ref","","",46,null],[11,"borrow","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"index","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"singular","protobuf","",null,null],[3,"SingularField","protobuf::singular","",null,null],[3,"SingularPtrField","","",null,null],[11,"some","","",47,{"inputs":[{"name":"t"}],"output":{"name":"singularfield"}}],[11,"is_some","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_none","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_option","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_mut","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut_ref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap","","",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap_or","","",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","",47,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","",47,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"singularptrfield"}}],[11,"iter","","",47,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"mut_iter","","",47,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"clear","","",47,{"inputs":[{"name":"self"}],"output":null}],[11,"none","","",47,{"inputs":[],"output":{"name":"singularfield"}}],[11,"from_option","","",47,{"inputs":[{"name":"option"}],"output":{"name":"singularfield"}}],[11,"take","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"some","","",48,{"inputs":[{"name":"t"}],"output":{"name":"singularptrfield"}}],[11,"none","","",48,{"inputs":[],"output":{"name":"singularptrfield"}}],[11,"from_option","","",48,{"inputs":[{"name":"option"}],"output":{"name":"singularptrfield"}}],[11,"is_some","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_none","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_option","","",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_mut","","",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut_ref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap","","",48,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap_or","","",48,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","",48,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"singularptrfield"}}],[11,"iter","","",48,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"mut_iter","","",48,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"take","","",48,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clear","","",48,{"inputs":[{"name":"self"}],"output":null}],[11,"unwrap_or_default","","",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set_default","","",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap_or_default","","",48,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set_default","","",48,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"singularfield"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"singularptrfield"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"singularfield"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"singularptrfield"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"singularfield"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"singularptrfield"}],"output":{"name":"bool"}}],[11,"hash","","",47,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"hash","","",48,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[0,"clear","protobuf","",null,null],[8,"Clear","protobuf::clear","anything that can be cleared",null,null],[10,"clear","","",49,{"inputs":[{"name":"self"}],"output":null}],[0,"reflect","protobuf","",null,null],[3,"FieldDescriptor","protobuf::reflect","",null,null],[3,"MessageDescriptor","","",null,null],[3,"EnumValueDescriptor","","",null,null],[3,"EnumDescriptor","","",null,null],[4,"ProtobufValueRef","","",null,null],[13,"U32","","",50,null],[13,"U64","","",50,null],[13,"I32","","",50,null],[13,"I64","","",50,null],[13,"F32","","",50,null],[13,"F64","","",50,null],[13,"Bool","","",50,null],[13,"String","","",50,null],[13,"Bytes","","",50,null],[13,"Enum","","",50,null],[13,"Message","","",50,null],[4,"ReflectFieldRef","","",null,null],[13,"Repeated","","",51,null],[13,"RepeatedOld","","",51,null],[13,"Map","","",51,null],[13,"Optional","","",51,null],[0,"accessor","","",null,null],[5,"make_singular_u32_accessor","protobuf::reflect::accessor","",null,null],[5,"make_singular_i32_accessor","","",null,null],[5,"make_singular_u64_accessor","","",null,null],[5,"make_singular_i64_accessor","","",null,null],[5,"make_singular_f32_accessor","","",null,null],[5,"make_singular_f64_accessor","","",null,null],[5,"make_singular_bool_accessor","","",null,null],[5,"make_singular_enum_accessor","","",null,null],[5,"make_singular_string_accessor","","",null,null],[5,"make_singular_bytes_accessor","","",null,null],[5,"make_singular_message_accessor","","",null,null],[5,"make_repeated_u32_accessor","","",null,null],[5,"make_repeated_i32_accessor","","",null,null],[5,"make_repeated_u64_accessor","","",null,null],[5,"make_repeated_i64_accessor","","",null,null],[5,"make_repeated_f32_accessor","","",null,null],[5,"make_repeated_f64_accessor","","",null,null],[5,"make_repeated_bool_accessor","","",null,null],[5,"make_repeated_string_accessor","","",null,null],[5,"make_repeated_bytes_accessor","","",null,null],[5,"make_repeated_enum_accessor","","",null,null],[5,"make_repeated_message_accessor","","",null,null],[5,"make_vec_accessor","","",null,null],[5,"make_repeated_field_accessor","","",null,null],[5,"make_option_accessor","","",null,null],[5,"make_has_get_set_clear_accessor","","",null,null],[5,"make_has_get_mut_clear_accessor","","",null,null],[5,"make_singular_field_accessor","","",null,null],[5,"make_singular_ptr_field_accessor","","",null,null],[5,"make_simple_field_accessor","","",null,null],[5,"make_map_accessor","","",null,null],[8,"FieldAccessor","","this trait should not be used directly, use `FieldDescriptor` instead",null,null],[10,"name_generic","","",52,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[10,"has_field_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[10,"len_field_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"usize"}}],[10,"get_message_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"message"}}],[10,"get_rep_message_item_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"},{"name":"usize"}],"output":{"name":"message"}}],[10,"get_enum_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"enumvaluedescriptor"}}],[10,"get_rep_enum_item_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"},{"name":"usize"}],"output":{"name":"enumvaluedescriptor"}}],[10,"get_str_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"str"}}],[10,"get_rep_str_generic","","",52,null],[10,"get_bytes_generic","","",52,null],[10,"get_rep_bytes_generic","","",52,null],[10,"get_u32_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"u32"}}],[10,"get_rep_u32_generic","","",52,null],[10,"get_u64_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"u64"}}],[10,"get_rep_u64_generic","","",52,null],[10,"get_i32_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"i32"}}],[10,"get_rep_i32_generic","","",52,null],[10,"get_i64_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"i64"}}],[10,"get_rep_i64_generic","","",52,null],[10,"get_bool_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[10,"get_rep_bool_generic","","",52,null],[10,"get_f32_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"f32"}}],[10,"get_rep_f32_generic","","",52,null],[10,"get_f64_generic","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"f64"}}],[10,"get_rep_f64_generic","","",52,null],[10,"get_reflect","","",52,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"reflectfieldref"}}],[11,"is_non_zero","protobuf::reflect","",50,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"ProtobufValue","","",null,null],[10,"as_ref","","",53,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"as_any","","",53,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"is_non_zero","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ref_copy","","",53,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"proto","","",54,{"inputs":[{"name":"self"}],"output":{"name":"fielddescriptorproto"}}],[11,"name","","",54,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_repeated","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_field","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"len_field","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"usize"}}],[11,"get_message","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"message"}}],[11,"get_rep_message_item","","",54,{"inputs":[{"name":"self"},{"name":"message"},{"name":"usize"}],"output":{"name":"message"}}],[11,"get_enum","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"enumvaluedescriptor"}}],[11,"get_rep_enum_item","","",54,{"inputs":[{"name":"self"},{"name":"message"},{"name":"usize"}],"output":{"name":"enumvaluedescriptor"}}],[11,"get_str","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"str"}}],[11,"get_rep_str","","",54,null],[11,"get_rep_str_item","","",54,{"inputs":[{"name":"self"},{"name":"message"},{"name":"usize"}],"output":{"name":"str"}}],[11,"get_bytes","","",54,null],[11,"get_rep_bytes","","",54,null],[11,"get_rep_bytes_item","","",54,null],[11,"get_u32","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"u32"}}],[11,"get_rep_u32","","",54,null],[11,"get_u64","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"u64"}}],[11,"get_rep_u64","","",54,null],[11,"get_i32","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"i32"}}],[11,"get_rep_i32","","",54,null],[11,"get_i64","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"i64"}}],[11,"get_rep_i64","","",54,null],[11,"get_bool","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"get_rep_bool","","",54,null],[11,"get_f32","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"f32"}}],[11,"get_rep_f32","","",54,null],[11,"get_f64","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"f64"}}],[11,"get_rep_f64","","",54,null],[11,"get_reflect","","",54,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"reflectfieldref"}}],[11,"get_rep_item","","",54,{"inputs":[{"name":"self"},{"name":"message"},{"name":"usize"}],"output":{"name":"protobufvalueref"}}],[11,"for_type","","",55,{"inputs":[],"output":{"name":"messagedescriptor"}}],[11,"new","","",55,{"inputs":[{"name":"str"},{"generics":["box"],"name":"vec"},{"name":"filedescriptorproto"}],"output":{"name":"messagedescriptor"}}],[11,"new_instance","","",55,{"inputs":[{"name":"self"}],"output":{"generics":["message"],"name":"box"}}],[11,"name","","",55,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"full_name","","",55,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fields","","",55,null],[11,"field_by_name","","",55,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"fielddescriptor"}}],[11,"field_by_number","","",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"fielddescriptor"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"enumvaluedescriptor"}}],[11,"name","","",56,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"value","","",56,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"name","","",57,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"for_type","","",57,{"inputs":[],"output":{"name":"enumdescriptor"}}],[11,"new","","",57,{"inputs":[{"name":"str"},{"name":"filedescriptorproto"}],"output":{"name":"enumdescriptor"}}],[11,"value_by_name","","",57,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"enumvaluedescriptor"}}],[11,"value_by_number","","",57,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"enumvaluedescriptor"}}],[0,"text_format","protobuf","",null,null],[5,"quote_escape_bytes","protobuf::text_format","",null,null],[5,"unescape_string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["u8"],"name":"vec"}}],[5,"print_to","","",null,{"inputs":[{"name":"message"},{"name":"string"}],"output":null}],[5,"print_to_string","","",null,{"inputs":[{"name":"message"}],"output":{"name":"string"}}],[5,"fmt","","",null,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","protobuf","",null,null],[3,"CodedInputStream","protobuf::stream","",null,null],[3,"CodedOutputStream","","",null,null],[5,"with_coded_output_stream_to_bytes","","",null,{"inputs":[{"name":"f"}],"output":{"generics":["vec"],"name":"protobufresult"}}],[0,"wire_format","","",null,null],[3,"Tag","protobuf::stream::wire_format","",null,null],[4,"WireType","","",null,null],[13,"WireTypeVarint","","",58,null],[13,"WireTypeFixed64","","",58,null],[13,"WireTypeLengthDelimited","","",58,null],[13,"WireTypeStartGroup","","",58,null],[13,"WireTypeEndGroup","","",58,null],[13,"WireTypeFixed32","","",58,null],[17,"TAG_TYPE_BITS","","",null,null],[17,"TAG_TYPE_MASK","","",null,null],[17,"FIELD_NUMBER_MAX","","",null,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"wiretype"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"wiretype"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",58,{"inputs":[{"name":"u32"}],"output":{"generics":["wiretype"],"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"tag"}}],[11,"value","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"new","","",59,{"inputs":[{"name":"u32"}],"output":{"generics":["tag"],"name":"option"}}],[11,"make","","",59,{"inputs":[{"name":"u32"},{"name":"wiretype"}],"output":{"name":"tag"}}],[11,"unpack","","",59,null],[11,"field_number","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[8,"WithCodedOutputStream","protobuf::stream","",null,null],[10,"with_coded_output_stream","","",60,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"protobufresult"}}],[8,"WithCodedInputStream","","",null,null],[10,"with_coded_input_stream","","",61,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"protobufresult"}}],[11,"new","","",62,{"inputs":[{"name":"read"}],"output":{"name":"codedinputstream"}}],[11,"from_buffered_reader","","",62,{"inputs":[{"name":"bufread"}],"output":{"name":"codedinputstream"}}],[11,"from_bytes","","",62,null],[11,"pos","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"bytes_until_limit","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",62,null],[11,"read_raw_byte","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"protobufresult"}}],[11,"push_limit","","",62,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"pop_limit","","",62,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"eof","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"protobufresult"}}],[11,"check_eof","","",62,{"inputs":[{"name":"self"}],"output":{"name":"protobufresult"}}],[11,"read_raw_varint64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"read_raw_varint32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"protobufresult"}}],[11,"read_raw_little_endian32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"protobufresult"}}],[11,"read_raw_little_endian64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"read_tag","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["tag"],"name":"protobufresult"}}],[11,"read_tag_unpack","","",62,{"inputs":[{"name":"self"}],"output":{"name":"protobufresult"}}],[11,"read_double","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"protobufresult"}}],[11,"read_float","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"protobufresult"}}],[11,"read_int64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"protobufresult"}}],[11,"read_int32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"protobufresult"}}],[11,"read_uint64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"read_uint32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"protobufresult"}}],[11,"read_sint64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"protobufresult"}}],[11,"read_sint32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"protobufresult"}}],[11,"read_fixed64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"read_fixed32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"protobufresult"}}],[11,"read_sfixed64","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"protobufresult"}}],[11,"read_sfixed32","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"protobufresult"}}],[11,"read_bool","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"protobufresult"}}],[11,"read_enum","","",62,{"inputs":[{"name":"self"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_double_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_float_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_int64_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_int32_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_uint64_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_uint32_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_sint64_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_sint32_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_fixed64_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_fixed32_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_sfixed64_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_sfixed32_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_bool_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_repeated_packed_enum_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_unknown","","",62,{"inputs":[{"name":"self"},{"name":"wiretype"}],"output":{"generics":["unknownvalue"],"name":"protobufresult"}}],[11,"skip_field","","",62,{"inputs":[{"name":"self"},{"name":"wiretype"}],"output":{"name":"protobufresult"}}],[11,"read_raw_bytes_into","","Read raw bytes into the supplied vector.  The vector will be resized as needed and overwritten.",62,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_raw_bytes","","Read exact number of bytes",62,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["vec"],"name":"protobufresult"}}],[11,"skip_raw_bytes","","",62,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"read_bytes","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"protobufresult"}}],[11,"read_bytes_into","","",62,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"protobufresult"}}],[11,"read_string","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"protobufresult"}}],[11,"read_string_into","","",62,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"protobufresult"}}],[11,"merge_message","","",62,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"protobufresult"}}],[11,"read_message","","",62,{"inputs":[{"name":"self"}],"output":{"name":"protobufresult"}}],[11,"new","","",63,{"inputs":[{"name":"write"}],"output":{"name":"codedoutputstream"}}],[11,"bytes","","`CodedOutputStream` which writes directly to bytes.",63,null],[11,"vec","","`CodedOutputStream` which writes directly to `Vec<u8>`.",63,{"inputs":[{"name":"vec"}],"output":{"name":"codedoutputstream"}}],[11,"check_eof","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"flush","","",63,{"inputs":[{"name":"self"}],"output":{"name":"protobufresult"}}],[11,"write_raw_byte","","",63,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"protobufresult"}}],[11,"write_raw_bytes","","",63,null],[11,"write_tag","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wiretype"}],"output":{"name":"protobufresult"}}],[11,"write_raw_varint32","","",63,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"write_raw_varint64","","",63,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"protobufresult"}}],[11,"write_raw_little_endian32","","",63,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"write_raw_little_endian64","","",63,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"protobufresult"}}],[11,"write_float_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"protobufresult"}}],[11,"write_double_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"protobufresult"}}],[11,"write_float","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f32"}],"output":{"name":"protobufresult"}}],[11,"write_double","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"}],"output":{"name":"protobufresult"}}],[11,"write_uint64_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"protobufresult"}}],[11,"write_uint32_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"write_int64_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"protobufresult"}}],[11,"write_int32_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_sint64_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"protobufresult"}}],[11,"write_sint32_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_fixed64_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"protobufresult"}}],[11,"write_fixed32_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"write_sfixed64_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"protobufresult"}}],[11,"write_sfixed32_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_bool_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"protobufresult"}}],[11,"write_enum_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_enum_obj_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"protobufresult"}}],[11,"write_unknown_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"unknownvalueref"}],"output":{"name":"protobufresult"}}],[11,"write_uint64","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u64"}],"output":{"name":"protobufresult"}}],[11,"write_uint32","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"write_int64","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i64"}],"output":{"name":"protobufresult"}}],[11,"write_int32","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_sint64","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i64"}],"output":{"name":"protobufresult"}}],[11,"write_sint32","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_fixed64","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u64"}],"output":{"name":"protobufresult"}}],[11,"write_fixed32","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"protobufresult"}}],[11,"write_sfixed64","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i64"}],"output":{"name":"protobufresult"}}],[11,"write_sfixed32","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_bool","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"bool"}],"output":{"name":"protobufresult"}}],[11,"write_enum","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i32"}],"output":{"name":"protobufresult"}}],[11,"write_enum_obj","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"e"}],"output":{"name":"protobufresult"}}],[11,"write_unknown","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"unknownvalueref"}],"output":{"name":"protobufresult"}}],[11,"write_unknown_fields","","",63,{"inputs":[{"name":"self"},{"name":"unknownfields"}],"output":{"name":"protobufresult"}}],[11,"write_bytes_no_tag","","",63,null],[11,"write_string_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"protobufresult"}}],[11,"write_message_no_tag","","",63,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"protobufresult"}}],[11,"write_bytes","","",63,null],[11,"write_string","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"str"}],"output":{"name":"protobufresult"}}],[11,"write_message","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"m"}],"output":{"name":"protobufresult"}}],[0,"error","protobuf","",null,null],[4,"WireError","protobuf::error","Enum values added here for diagnostic purposes. Users should not depend on specific values.",null,null],[13,"UnexpectedEof","","",64,null],[13,"UnexpectedWireType","","",64,null],[13,"IncorrectTag","","",64,null],[13,"IncompleteMap","","",64,null],[13,"IncorrectVarint","","",64,null],[13,"Utf8Error","","",64,null],[13,"InvalidEnumValue","","",64,null],[13,"Other","","",64,null],[4,"ProtobufError","","",null,null],[13,"IoError","","",65,null],[13,"WireError","","",65,null],[13,"Utf8","","",65,null],[13,"MessageNotInitialized","","",65,null],[12,"message","protobuf::error::ProtobufError","",65,null],[6,"ProtobufResult","protobuf::error","",null,null],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"message_not_initialized","","",65,{"inputs":[{"name":"str"}],"output":{"name":"protobuferror"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",65,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",65,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",65,{"inputs":[{"name":"utf8error"}],"output":{"name":"self"}}],[0,"types","protobuf","",null,null],[3,"ProtobufTypeFloat","protobuf::types","",null,null],[3,"ProtobufTypeDouble","","",null,null],[3,"ProtobufTypeInt32","","",null,null],[3,"ProtobufTypeInt64","","",null,null],[3,"ProtobufTypeUint32","","",null,null],[3,"ProtobufTypeUint64","","",null,null],[3,"ProtobufTypeSint32","","",null,null],[3,"ProtobufTypeSint64","","",null,null],[3,"ProtobufTypeFixed32","","",null,null],[3,"ProtobufTypeFixed64","","",null,null],[3,"ProtobufTypeSfixed32","","",null,null],[3,"ProtobufTypeSfixed64","","",null,null],[3,"ProtobufTypeBool","","",null,null],[3,"ProtobufTypeString","","",null,null],[3,"ProtobufTypeBytes","","",null,null],[3,"ProtobufTypeChars","","",null,null],[3,"ProtobufTypeEnum","","",null,null],[3,"ProtobufTypeMessage","","",null,null],[8,"ProtobufType","","",null,null],[16,"Value","","",66,null],[10,"wire_type","","",66,{"inputs":[],"output":{"name":"wiretype"}}],[10,"read","","",66,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[10,"compute_size","","",66,null],[11,"compute_size_with_length_delimiter","","Compute size adding length prefix if wire type is length delimited (i. e. string, bytes, message)",66,null],[11,"get_from_unknown","","",66,{"inputs":[{"name":"unknownvalues"}],"output":{"name":"option"}}],[11,"get_cached_size","","Get previously computed size",66,null],[11,"get_cached_size_with_length_delimiter","","Get previously cached size with length prefix",66,null],[10,"write_with_cached_size","","",66,null],[11,"wire_type","","",67,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",67,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["f32"],"name":"protobufresult"}}],[11,"compute_size","","",67,{"inputs":[{"name":"f32"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",67,{"inputs":[{"name":"u32"},{"name":"f32"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",68,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",68,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["f64"],"name":"protobufresult"}}],[11,"compute_size","","",68,{"inputs":[{"name":"f64"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",68,{"inputs":[{"name":"u32"},{"name":"f64"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",69,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",69,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["i32"],"name":"protobufresult"}}],[11,"compute_size","","",69,{"inputs":[{"name":"i32"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",69,{"inputs":[{"name":"u32"},{"name":"i32"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",70,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",70,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["i64"],"name":"protobufresult"}}],[11,"compute_size","","",70,{"inputs":[{"name":"i64"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",70,{"inputs":[{"name":"u32"},{"name":"i64"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",71,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",71,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["u32"],"name":"protobufresult"}}],[11,"compute_size","","",71,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",71,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",72,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",72,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"compute_size","","",72,{"inputs":[{"name":"u64"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",72,{"inputs":[{"name":"u32"},{"name":"u64"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",73,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",73,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["i32"],"name":"protobufresult"}}],[11,"compute_size","","",73,{"inputs":[{"name":"i32"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",73,{"inputs":[{"name":"u32"},{"name":"i32"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",74,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",74,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["i64"],"name":"protobufresult"}}],[11,"compute_size","","",74,{"inputs":[{"name":"i64"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",74,{"inputs":[{"name":"u32"},{"name":"i64"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",75,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",75,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["u32"],"name":"protobufresult"}}],[11,"compute_size","","",75,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",75,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",76,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",76,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["u64"],"name":"protobufresult"}}],[11,"compute_size","","",76,{"inputs":[{"name":"u64"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",76,{"inputs":[{"name":"u32"},{"name":"u64"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",77,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",77,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["i32"],"name":"protobufresult"}}],[11,"compute_size","","",77,{"inputs":[{"name":"i32"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",77,{"inputs":[{"name":"u32"},{"name":"i32"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",78,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",78,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["i64"],"name":"protobufresult"}}],[11,"compute_size","","",78,{"inputs":[{"name":"i64"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",78,{"inputs":[{"name":"u32"},{"name":"i64"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",79,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",79,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["bool"],"name":"protobufresult"}}],[11,"get_from_unknown","","",79,{"inputs":[{"name":"unknownvalues"}],"output":{"generics":["bool"],"name":"option"}}],[11,"compute_size","","",79,{"inputs":[{"name":"bool"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",79,{"inputs":[{"name":"u32"},{"name":"bool"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",80,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",80,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["string"],"name":"protobufresult"}}],[11,"compute_size","","",80,{"inputs":[{"name":"string"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",80,{"inputs":[{"name":"u32"},{"name":"string"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",81,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",81,{"inputs":[{"name":"codedinputstream"}],"output":{"generics":["vec"],"name":"protobufresult"}}],[11,"compute_size","","",81,{"inputs":[{"name":"vec"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",81,{"inputs":[{"name":"u32"},{"name":"vec"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",82,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",82,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",82,{"inputs":[{"name":"e"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",82,{"inputs":[{"name":"u32"},{"name":"e"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"wire_type","","",83,{"inputs":[],"output":{"name":"wiretype"}}],[11,"read","","",83,{"inputs":[{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",83,{"inputs":[{"name":"m"}],"output":{"name":"u32"}}],[11,"get_cached_size","","",83,{"inputs":[{"name":"m"}],"output":{"name":"u32"}}],[11,"write_with_cached_size","","",83,null],[0,"well_known_types","protobuf","",null,null],[3,"Any","protobuf::well_known_types","",null,null],[12,"type_url","","",84,null],[12,"value","","",84,null],[3,"Api","","",null,null],[12,"name","","",85,null],[12,"methods","","",85,null],[12,"options","","",85,null],[12,"version","","",85,null],[12,"source_context","","",85,null],[12,"mixins","","",85,null],[12,"syntax","","",85,null],[3,"Method","","",null,null],[12,"name","","",86,null],[12,"request_type_url","","",86,null],[12,"request_streaming","","",86,null],[12,"response_type_url","","",86,null],[12,"response_streaming","","",86,null],[12,"options","","",86,null],[12,"syntax","","",86,null],[3,"Mixin","","",null,null],[12,"name","","",87,null],[12,"root","","",87,null],[3,"Duration","","",null,null],[12,"seconds","","",88,null],[12,"nanos","","",88,null],[3,"Empty","","",null,null],[3,"FieldMask","","",null,null],[12,"paths","","",89,null],[3,"SourceContext","","",null,null],[12,"file_name","","",90,null],[3,"Struct","","",null,null],[12,"fields","","",91,null],[3,"Value","","",null,null],[3,"ListValue","","",null,null],[12,"values","","",92,null],[3,"Timestamp","","",null,null],[12,"seconds","","",93,null],[12,"nanos","","",93,null],[3,"Type","","",null,null],[12,"name","","",94,null],[12,"fields","","",94,null],[12,"oneofs","","",94,null],[12,"options","","",94,null],[12,"source_context","","",94,null],[12,"syntax","","",94,null],[3,"Field","","",null,null],[12,"kind","","",95,null],[12,"cardinality","","",95,null],[12,"number","","",95,null],[12,"name","","",95,null],[12,"type_url","","",95,null],[12,"oneof_index","","",95,null],[12,"packed","","",95,null],[12,"options","","",95,null],[12,"json_name","","",95,null],[12,"default_value","","",95,null],[3,"Enum","","",null,null],[12,"name","","",96,null],[12,"enumvalue","","",96,null],[12,"options","","",96,null],[12,"source_context","","",96,null],[12,"syntax","","",96,null],[3,"EnumValue","","",null,null],[12,"name","","",97,null],[12,"number","","",97,null],[12,"options","","",97,null],[3,"Option","","",null,null],[12,"name","","",98,null],[12,"value","","",98,null],[3,"DoubleValue","","",null,null],[12,"value","","",99,null],[3,"FloatValue","","",null,null],[12,"value","","",100,null],[3,"Int64Value","","",null,null],[12,"value","","",101,null],[3,"UInt64Value","","",null,null],[12,"value","","",102,null],[3,"Int32Value","","",null,null],[12,"value","","",103,null],[3,"UInt32Value","","",null,null],[12,"value","","",104,null],[3,"BoolValue","","",null,null],[12,"value","","",105,null],[3,"StringValue","","",null,null],[12,"value","","",106,null],[3,"BytesValue","","",null,null],[12,"value","","",107,null],[4,"Value_oneof_kind","","",null,null],[13,"null_value","","",108,null],[13,"number_value","","",108,null],[13,"string_value","","",108,null],[13,"bool_value","","",108,null],[13,"struct_value","","",108,null],[13,"list_value","","",108,null],[4,"NullValue","","",null,null],[13,"NULL_VALUE","","",109,null],[4,"Field_Kind","","",null,null],[13,"TYPE_UNKNOWN","","",110,null],[13,"TYPE_DOUBLE","","",110,null],[13,"TYPE_FLOAT","","",110,null],[13,"TYPE_INT64","","",110,null],[13,"TYPE_UINT64","","",110,null],[13,"TYPE_INT32","","",110,null],[13,"TYPE_FIXED64","","",110,null],[13,"TYPE_FIXED32","","",110,null],[13,"TYPE_BOOL","","",110,null],[13,"TYPE_STRING","","",110,null],[13,"TYPE_GROUP","","",110,null],[13,"TYPE_MESSAGE","","",110,null],[13,"TYPE_BYTES","","",110,null],[13,"TYPE_UINT32","","",110,null],[13,"TYPE_ENUM","","",110,null],[13,"TYPE_SFIXED32","","",110,null],[13,"TYPE_SFIXED64","","",110,null],[13,"TYPE_SINT32","","",110,null],[13,"TYPE_SINT64","","",110,null],[4,"Field_Cardinality","","",null,null],[13,"CARDINALITY_UNKNOWN","","",111,null],[13,"CARDINALITY_OPTIONAL","","",111,null],[13,"CARDINALITY_REQUIRED","","",111,null],[13,"CARDINALITY_REPEATED","","",111,null],[4,"Syntax","","",null,null],[13,"SYNTAX_PROTO2","","",112,null],[13,"SYNTAX_PROTO3","","",112,null],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"any"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"any"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"any"}}],[11,"new","","",84,{"inputs":[],"output":{"name":"any"}}],[11,"default_instance","","",84,{"inputs":[],"output":{"name":"any"}}],[11,"clear_type_url","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"set_type_url","","",84,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_type_url","","",84,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_type_url","","",84,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_type_url","","",84,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_value","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",84,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_value","","",84,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_value","","",84,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_value","","",84,null],[11,"is_initialized","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",84,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",84,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",84,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",84,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",84,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",84,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",84,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",84,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",84,{"inputs":[],"output":{"name":"any"}}],[11,"descriptor_static","","",84,{"inputs":[{"generics":["any"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",84,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"api"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"api"}}],[11,"default","","",85,{"inputs":[],"output":{"name":"api"}}],[11,"new","","",85,{"inputs":[],"output":{"name":"api"}}],[11,"default_instance","","",85,{"inputs":[],"output":{"name":"api"}}],[11,"clear_name","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",85,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",85,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",85,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",85,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_methods","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_methods","","",85,{"inputs":[{"name":"self"},{"generics":["method"],"name":"repeatedfield"}],"output":null}],[11,"mut_methods","","",85,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_methods","","",85,{"inputs":[{"name":"self"}],"output":{"generics":["method"],"name":"repeatedfield"}}],[11,"get_methods","","",85,null],[11,"clear_options","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_options","","",85,{"inputs":[{"name":"self"},{"generics":["option"],"name":"repeatedfield"}],"output":null}],[11,"mut_options","","",85,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_options","","",85,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"repeatedfield"}}],[11,"get_options","","",85,null],[11,"clear_version","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_version","","",85,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_version","","",85,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_version","","",85,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_version","","",85,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_source_context","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_source_context","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_source_context","","",85,{"inputs":[{"name":"self"},{"name":"sourcecontext"}],"output":null}],[11,"mut_source_context","","",85,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"take_source_context","","",85,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"get_source_context","","",85,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"clear_mixins","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_mixins","","",85,{"inputs":[{"name":"self"},{"generics":["mixin"],"name":"repeatedfield"}],"output":null}],[11,"mut_mixins","","",85,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_mixins","","",85,{"inputs":[{"name":"self"}],"output":{"generics":["mixin"],"name":"repeatedfield"}}],[11,"get_mixins","","",85,null],[11,"clear_syntax","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_syntax","","",85,{"inputs":[{"name":"self"},{"name":"syntax"}],"output":null}],[11,"get_syntax","","",85,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"is_initialized","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",85,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",85,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",85,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",85,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",85,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",85,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",85,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",85,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",85,{"inputs":[],"output":{"name":"api"}}],[11,"descriptor_static","","",85,{"inputs":[{"generics":["api"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",85,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"method"}}],[11,"new","","",86,{"inputs":[],"output":{"name":"method"}}],[11,"default_instance","","",86,{"inputs":[],"output":{"name":"method"}}],[11,"clear_name","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",86,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_request_type_url","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_request_type_url","","",86,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_request_type_url","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_request_type_url","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_request_type_url","","",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_request_streaming","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_request_streaming","","",86,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_request_streaming","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_response_type_url","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_response_type_url","","",86,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_response_type_url","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_response_type_url","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_response_type_url","","",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_response_streaming","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_response_streaming","","",86,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_response_streaming","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_options","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_options","","",86,{"inputs":[{"name":"self"},{"generics":["option"],"name":"repeatedfield"}],"output":null}],[11,"mut_options","","",86,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_options","","",86,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"repeatedfield"}}],[11,"get_options","","",86,null],[11,"clear_syntax","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_syntax","","",86,{"inputs":[{"name":"self"},{"name":"syntax"}],"output":null}],[11,"get_syntax","","",86,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"is_initialized","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",86,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",86,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",86,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",86,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",86,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",86,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",86,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",86,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",86,{"inputs":[],"output":{"name":"method"}}],[11,"descriptor_static","","",86,{"inputs":[{"generics":["method"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",86,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"mixin"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"mixin"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"mixin"}}],[11,"default","","",87,{"inputs":[],"output":{"name":"mixin"}}],[11,"new","","",87,{"inputs":[],"output":{"name":"mixin"}}],[11,"default_instance","","",87,{"inputs":[],"output":{"name":"mixin"}}],[11,"clear_name","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",87,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",87,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",87,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",87,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_root","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"set_root","","",87,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_root","","",87,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_root","","",87,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_root","","",87,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",87,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",87,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",87,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",87,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",87,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",87,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",87,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",87,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",87,{"inputs":[],"output":{"name":"mixin"}}],[11,"descriptor_static","","",87,{"inputs":[{"generics":["mixin"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",87,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"default","","",88,{"inputs":[],"output":{"name":"duration"}}],[11,"new","","",88,{"inputs":[],"output":{"name":"duration"}}],[11,"default_instance","","",88,{"inputs":[],"output":{"name":"duration"}}],[11,"clear_seconds","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"set_seconds","","",88,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"get_seconds","","",88,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"clear_nanos","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"set_nanos","","",88,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_nanos","","",88,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",88,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",88,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",88,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",88,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",88,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",88,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",88,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",88,{"inputs":[],"output":{"name":"duration"}}],[11,"descriptor_static","","",88,{"inputs":[{"generics":["duration"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"empty"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"empty"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"empty"}}],[11,"default","","",113,{"inputs":[],"output":{"name":"empty"}}],[11,"new","","",113,{"inputs":[],"output":{"name":"empty"}}],[11,"default_instance","","",113,{"inputs":[],"output":{"name":"empty"}}],[11,"is_initialized","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",113,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",113,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",113,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",113,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",113,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",113,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",113,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",113,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",113,{"inputs":[],"output":{"name":"empty"}}],[11,"descriptor_static","","",113,{"inputs":[{"generics":["empty"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",113,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"fieldmask"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"fieldmask"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"fieldmask"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"fieldmask"}}],[11,"new","","",89,{"inputs":[],"output":{"name":"fieldmask"}}],[11,"default_instance","","",89,{"inputs":[],"output":{"name":"fieldmask"}}],[11,"clear_paths","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"set_paths","","",89,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_paths","","",89,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_paths","","",89,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_paths","","",89,null],[11,"is_initialized","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",89,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",89,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",89,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",89,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",89,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",89,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",89,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",89,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",89,{"inputs":[],"output":{"name":"fieldmask"}}],[11,"descriptor_static","","",89,{"inputs":[{"generics":["fieldmask"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",89,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"sourcecontext"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"sourcecontext"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"default","","",90,{"inputs":[],"output":{"name":"sourcecontext"}}],[11,"new","","",90,{"inputs":[],"output":{"name":"sourcecontext"}}],[11,"default_instance","","",90,{"inputs":[],"output":{"name":"sourcecontext"}}],[11,"clear_file_name","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"set_file_name","","",90,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_file_name","","",90,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_file_name","","",90,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_file_name","","",90,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",90,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",90,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",90,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",90,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",90,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",90,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",90,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",90,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",90,{"inputs":[],"output":{"name":"sourcecontext"}}],[11,"descriptor_static","","",90,{"inputs":[{"generics":["sourcecontext"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",90,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"struct"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"struct"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"struct"}}],[11,"default","","",91,{"inputs":[],"output":{"name":"struct"}}],[11,"new","","",91,{"inputs":[],"output":{"name":"struct"}}],[11,"default_instance","","",91,{"inputs":[],"output":{"name":"struct"}}],[11,"clear_fields","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"set_fields","","",91,{"inputs":[{"name":"self"},{"generics":["string","value"],"name":"hashmap"}],"output":null}],[11,"mut_fields","","",91,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"take_fields","","",91,{"inputs":[{"name":"self"}],"output":{"generics":["string","value"],"name":"hashmap"}}],[11,"get_fields","","",91,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"is_initialized","","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",91,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",91,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",91,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",91,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",91,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",91,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",91,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",91,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",91,{"inputs":[],"output":{"name":"struct"}}],[11,"descriptor_static","","",91,{"inputs":[{"generics":["struct"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"default","","",114,{"inputs":[],"output":{"name":"value"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"value_oneof_kind"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"value_oneof_kind"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"value_oneof_kind"}],"output":{"name":"bool"}}],[11,"new","","",114,{"inputs":[],"output":{"name":"value"}}],[11,"default_instance","","",114,{"inputs":[],"output":{"name":"value"}}],[11,"clear_null_value","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"has_null_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_null_value","","",114,{"inputs":[{"name":"self"},{"name":"nullvalue"}],"output":null}],[11,"get_null_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"nullvalue"}}],[11,"clear_number_value","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"has_number_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_number_value","","",114,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"get_number_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"clear_string_value","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"has_string_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_string_value","","",114,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_string_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_string_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_string_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_bool_value","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"has_bool_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_bool_value","","",114,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_bool_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_struct_value","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"has_struct_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_struct_value","","",114,{"inputs":[{"name":"self"},{"name":"struct"}],"output":null}],[11,"mut_struct_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"struct"}}],[11,"take_struct_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"struct"}}],[11,"get_struct_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"struct"}}],[11,"clear_list_value","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"has_list_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_list_value","","",114,{"inputs":[{"name":"self"},{"name":"listvalue"}],"output":null}],[11,"mut_list_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"listvalue"}}],[11,"take_list_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"listvalue"}}],[11,"get_list_value","","",114,{"inputs":[{"name":"self"}],"output":{"name":"listvalue"}}],[11,"is_initialized","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",114,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",114,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",114,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",114,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",114,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",114,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",114,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",114,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",114,{"inputs":[],"output":{"name":"value"}}],[11,"descriptor_static","","",114,{"inputs":[{"generics":["value"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",114,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"listvalue"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"listvalue"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"listvalue"}}],[11,"default","","",92,{"inputs":[],"output":{"name":"listvalue"}}],[11,"new","","",92,{"inputs":[],"output":{"name":"listvalue"}}],[11,"default_instance","","",92,{"inputs":[],"output":{"name":"listvalue"}}],[11,"clear_values","","",92,{"inputs":[{"name":"self"}],"output":null}],[11,"set_values","","",92,{"inputs":[{"name":"self"},{"generics":["value"],"name":"repeatedfield"}],"output":null}],[11,"mut_values","","",92,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_values","","",92,{"inputs":[{"name":"self"}],"output":{"generics":["value"],"name":"repeatedfield"}}],[11,"get_values","","",92,null],[11,"is_initialized","","",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",92,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",92,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",92,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",92,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",92,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",92,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",92,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",92,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",92,{"inputs":[],"output":{"name":"listvalue"}}],[11,"descriptor_static","","",92,{"inputs":[{"generics":["listvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",92,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",92,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"nullvalue"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"nullvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",109,null],[11,"value","","",109,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",109,{"inputs":[{"name":"i32"}],"output":{"generics":["nullvalue"],"name":"option"}}],[11,"values","","",109,null],[11,"enum_descriptor_static","","",109,{"inputs":[{"generics":["nullvalue"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",109,{"inputs":[],"output":{"name":"self"}}],[11,"as_ref","","",109,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"timestamp"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"timestamp"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"default","","",93,{"inputs":[],"output":{"name":"timestamp"}}],[11,"new","","",93,{"inputs":[],"output":{"name":"timestamp"}}],[11,"default_instance","","",93,{"inputs":[],"output":{"name":"timestamp"}}],[11,"clear_seconds","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"set_seconds","","",93,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"get_seconds","","",93,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"clear_nanos","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"set_nanos","","",93,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_nanos","","",93,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",93,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",93,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",93,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",93,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",93,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",93,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",93,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",93,{"inputs":[],"output":{"name":"timestamp"}}],[11,"descriptor_static","","",93,{"inputs":[{"generics":["timestamp"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"default","","",94,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",94,{"inputs":[],"output":{"name":"type"}}],[11,"default_instance","","",94,{"inputs":[],"output":{"name":"type"}}],[11,"clear_name","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",94,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",94,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",94,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",94,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_fields","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"set_fields","","",94,{"inputs":[{"name":"self"},{"generics":["field"],"name":"repeatedfield"}],"output":null}],[11,"mut_fields","","",94,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_fields","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["field"],"name":"repeatedfield"}}],[11,"get_fields","","",94,null],[11,"clear_oneofs","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"set_oneofs","","",94,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_oneofs","","",94,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_oneofs","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_oneofs","","",94,null],[11,"clear_options","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"set_options","","",94,{"inputs":[{"name":"self"},{"generics":["option"],"name":"repeatedfield"}],"output":null}],[11,"mut_options","","",94,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_options","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"repeatedfield"}}],[11,"get_options","","",94,null],[11,"clear_source_context","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_source_context","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_source_context","","",94,{"inputs":[{"name":"self"},{"name":"sourcecontext"}],"output":null}],[11,"mut_source_context","","",94,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"take_source_context","","",94,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"get_source_context","","",94,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"clear_syntax","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"set_syntax","","",94,{"inputs":[{"name":"self"},{"name":"syntax"}],"output":null}],[11,"get_syntax","","",94,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"is_initialized","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",94,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",94,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",94,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",94,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",94,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",94,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",94,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",94,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",94,{"inputs":[],"output":{"name":"type"}}],[11,"descriptor_static","","",94,{"inputs":[{"generics":["type"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",94,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"field"}}],[11,"default","","",95,{"inputs":[],"output":{"name":"field"}}],[11,"new","","",95,{"inputs":[],"output":{"name":"field"}}],[11,"default_instance","","",95,{"inputs":[],"output":{"name":"field"}}],[11,"clear_kind","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_kind","","",95,{"inputs":[{"name":"self"},{"name":"field_kind"}],"output":null}],[11,"get_kind","","",95,{"inputs":[{"name":"self"}],"output":{"name":"field_kind"}}],[11,"clear_cardinality","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_cardinality","","",95,{"inputs":[{"name":"self"},{"name":"field_cardinality"}],"output":null}],[11,"get_cardinality","","",95,{"inputs":[{"name":"self"}],"output":{"name":"field_cardinality"}}],[11,"clear_number","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_number","","",95,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_number","","",95,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_name","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",95,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",95,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_type_url","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_type_url","","",95,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_type_url","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_type_url","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_type_url","","",95,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_oneof_index","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_oneof_index","","",95,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_oneof_index","","",95,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_packed","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_packed","","",95,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_packed","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_options","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_options","","",95,{"inputs":[{"name":"self"},{"generics":["option"],"name":"repeatedfield"}],"output":null}],[11,"mut_options","","",95,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_options","","",95,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"repeatedfield"}}],[11,"get_options","","",95,null],[11,"clear_json_name","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_json_name","","",95,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_json_name","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_json_name","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_json_name","","",95,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_default_value","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"set_default_value","","",95,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_default_value","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_default_value","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_default_value","","",95,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",95,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",95,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",95,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",95,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",95,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",95,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",95,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",95,{"inputs":[],"output":{"name":"field"}}],[11,"descriptor_static","","",95,{"inputs":[{"generics":["field"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"field_kind"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"field_kind"}],"output":{"name":"bool"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",110,null],[11,"value","","",110,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",110,{"inputs":[{"name":"i32"}],"output":{"generics":["field_kind"],"name":"option"}}],[11,"values","","",110,null],[11,"enum_descriptor_static","","",110,{"inputs":[{"generics":["field_kind"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",110,{"inputs":[],"output":{"name":"self"}}],[11,"as_ref","","",110,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"field_cardinality"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"field_cardinality"}],"output":{"name":"bool"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",111,null],[11,"value","","",111,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",111,{"inputs":[{"name":"i32"}],"output":{"generics":["field_cardinality"],"name":"option"}}],[11,"values","","",111,null],[11,"enum_descriptor_static","","",111,{"inputs":[{"generics":["field_cardinality"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",111,{"inputs":[],"output":{"name":"self"}}],[11,"as_ref","","",111,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"enum"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"enum"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"enum"}}],[11,"default","","",96,{"inputs":[],"output":{"name":"enum"}}],[11,"new","","",96,{"inputs":[],"output":{"name":"enum"}}],[11,"default_instance","","",96,{"inputs":[],"output":{"name":"enum"}}],[11,"clear_name","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",96,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",96,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",96,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",96,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_enumvalue","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enumvalue","","",96,{"inputs":[{"name":"self"},{"generics":["enumvalue"],"name":"repeatedfield"}],"output":null}],[11,"mut_enumvalue","","",96,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_enumvalue","","",96,{"inputs":[{"name":"self"}],"output":{"generics":["enumvalue"],"name":"repeatedfield"}}],[11,"get_enumvalue","","",96,null],[11,"clear_options","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"set_options","","",96,{"inputs":[{"name":"self"},{"generics":["option"],"name":"repeatedfield"}],"output":null}],[11,"mut_options","","",96,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_options","","",96,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"repeatedfield"}}],[11,"get_options","","",96,null],[11,"clear_source_context","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"has_source_context","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_source_context","","",96,{"inputs":[{"name":"self"},{"name":"sourcecontext"}],"output":null}],[11,"mut_source_context","","",96,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"take_source_context","","",96,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"get_source_context","","",96,{"inputs":[{"name":"self"}],"output":{"name":"sourcecontext"}}],[11,"clear_syntax","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"set_syntax","","",96,{"inputs":[{"name":"self"},{"name":"syntax"}],"output":null}],[11,"get_syntax","","",96,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"is_initialized","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",96,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",96,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",96,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",96,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",96,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",96,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",96,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",96,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",96,{"inputs":[],"output":{"name":"enum"}}],[11,"descriptor_static","","",96,{"inputs":[{"generics":["enum"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",96,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"enumvalue"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"self"},{"name":"enumvalue"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"enumvalue"}}],[11,"default","","",97,{"inputs":[],"output":{"name":"enumvalue"}}],[11,"new","","",97,{"inputs":[],"output":{"name":"enumvalue"}}],[11,"default_instance","","",97,{"inputs":[],"output":{"name":"enumvalue"}}],[11,"clear_name","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",97,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",97,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",97,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",97,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_number","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"set_number","","",97,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_number","","",97,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_options","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"set_options","","",97,{"inputs":[{"name":"self"},{"generics":["option"],"name":"repeatedfield"}],"output":null}],[11,"mut_options","","",97,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_options","","",97,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"repeatedfield"}}],[11,"get_options","","",97,null],[11,"is_initialized","","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",97,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",97,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",97,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",97,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",97,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",97,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",97,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",97,{"inputs":[],"output":{"name":"enumvalue"}}],[11,"descriptor_static","","",97,{"inputs":[{"generics":["enumvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"default","","",98,{"inputs":[],"output":{"name":"option"}}],[11,"new","","",98,{"inputs":[],"output":{"name":"option"}}],[11,"default_instance","","",98,{"inputs":[],"output":{"name":"option"}}],[11,"clear_name","","",98,{"inputs":[{"name":"self"}],"output":null}],[11,"set_name","","",98,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",98,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",98,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_value","","",98,{"inputs":[{"name":"self"}],"output":null}],[11,"has_value","","",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_value","","",98,{"inputs":[{"name":"self"},{"name":"any"}],"output":null}],[11,"mut_value","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"take_value","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"get_value","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"is_initialized","","",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",98,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",98,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",98,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",98,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",98,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",98,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",98,{"inputs":[],"output":{"name":"option"}}],[11,"descriptor_static","","",98,{"inputs":[{"generics":["option"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",98,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",98,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"syntax"}],"output":{"name":"bool"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",112,null],[11,"value","","",112,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",112,{"inputs":[{"name":"i32"}],"output":{"generics":["syntax"],"name":"option"}}],[11,"values","","",112,null],[11,"enum_descriptor_static","","",112,{"inputs":[{"generics":["syntax"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"default","","",112,{"inputs":[],"output":{"name":"self"}}],[11,"as_ref","","",112,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"doublevalue"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"doublevalue"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"doublevalue"}}],[11,"default","","",99,{"inputs":[],"output":{"name":"doublevalue"}}],[11,"new","","",99,{"inputs":[],"output":{"name":"doublevalue"}}],[11,"default_instance","","",99,{"inputs":[],"output":{"name":"doublevalue"}}],[11,"clear_value","","",99,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",99,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"get_value","","",99,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"is_initialized","","",99,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",99,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",99,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",99,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",99,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",99,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",99,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",99,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",99,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",99,{"inputs":[],"output":{"name":"doublevalue"}}],[11,"descriptor_static","","",99,{"inputs":[{"generics":["doublevalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",99,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",99,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"floatvalue"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"self"},{"name":"floatvalue"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"floatvalue"}}],[11,"default","","",100,{"inputs":[],"output":{"name":"floatvalue"}}],[11,"new","","",100,{"inputs":[],"output":{"name":"floatvalue"}}],[11,"default_instance","","",100,{"inputs":[],"output":{"name":"floatvalue"}}],[11,"clear_value","","",100,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",100,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_value","","",100,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",100,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",100,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",100,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",100,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",100,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",100,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",100,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",100,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",100,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",100,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",100,{"inputs":[],"output":{"name":"floatvalue"}}],[11,"descriptor_static","","",100,{"inputs":[{"generics":["floatvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",100,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",100,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"int64value"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"int64value"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"int64value"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"int64value"}}],[11,"new","","",101,{"inputs":[],"output":{"name":"int64value"}}],[11,"default_instance","","",101,{"inputs":[],"output":{"name":"int64value"}}],[11,"clear_value","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",101,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[11,"get_value","","",101,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"is_initialized","","",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",101,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",101,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",101,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",101,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",101,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",101,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",101,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",101,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",101,{"inputs":[],"output":{"name":"int64value"}}],[11,"descriptor_static","","",101,{"inputs":[{"generics":["int64value"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",101,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"uint64value"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"uint64value"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"uint64value"}}],[11,"default","","",102,{"inputs":[],"output":{"name":"uint64value"}}],[11,"new","","",102,{"inputs":[],"output":{"name":"uint64value"}}],[11,"default_instance","","",102,{"inputs":[],"output":{"name":"uint64value"}}],[11,"clear_value","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",102,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_value","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"is_initialized","","",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",102,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",102,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",102,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",102,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",102,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",102,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",102,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",102,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",102,{"inputs":[],"output":{"name":"uint64value"}}],[11,"descriptor_static","","",102,{"inputs":[{"generics":["uint64value"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"int32value"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"int32value"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"int32value"}}],[11,"default","","",103,{"inputs":[],"output":{"name":"int32value"}}],[11,"new","","",103,{"inputs":[],"output":{"name":"int32value"}}],[11,"default_instance","","",103,{"inputs":[],"output":{"name":"int32value"}}],[11,"clear_value","","",103,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",103,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_value","","",103,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",103,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",103,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",103,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",103,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",103,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",103,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",103,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",103,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",103,{"inputs":[],"output":{"name":"int32value"}}],[11,"descriptor_static","","",103,{"inputs":[{"generics":["int32value"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",103,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",103,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"uint32value"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"uint32value"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"uint32value"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"uint32value"}}],[11,"new","","",104,{"inputs":[],"output":{"name":"uint32value"}}],[11,"default_instance","","",104,{"inputs":[],"output":{"name":"uint32value"}}],[11,"clear_value","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",104,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_value","","",104,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",104,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",104,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",104,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",104,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",104,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",104,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",104,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",104,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",104,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",104,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",104,{"inputs":[],"output":{"name":"uint32value"}}],[11,"descriptor_static","","",104,{"inputs":[{"generics":["uint32value"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",104,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"boolvalue"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"self"},{"name":"boolvalue"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"boolvalue"}}],[11,"default","","",105,{"inputs":[],"output":{"name":"boolvalue"}}],[11,"new","","",105,{"inputs":[],"output":{"name":"boolvalue"}}],[11,"default_instance","","",105,{"inputs":[],"output":{"name":"boolvalue"}}],[11,"clear_value","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",105,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_value","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",105,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",105,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",105,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",105,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",105,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",105,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",105,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",105,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",105,{"inputs":[],"output":{"name":"boolvalue"}}],[11,"descriptor_static","","",105,{"inputs":[{"generics":["boolvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",105,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"stringvalue"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"self"},{"name":"stringvalue"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"stringvalue"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"stringvalue"}}],[11,"new","","",106,{"inputs":[],"output":{"name":"stringvalue"}}],[11,"default_instance","","",106,{"inputs":[],"output":{"name":"stringvalue"}}],[11,"clear_value","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",106,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_value","","",106,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_value","","",106,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_value","","",106,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",106,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",106,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",106,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",106,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",106,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",106,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",106,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",106,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",106,{"inputs":[],"output":{"name":"stringvalue"}}],[11,"descriptor_static","","",106,{"inputs":[{"generics":["stringvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",106,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"bytesvalue"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"self"},{"name":"bytesvalue"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bytesvalue"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"bytesvalue"}}],[11,"new","","",107,{"inputs":[],"output":{"name":"bytesvalue"}}],[11,"default_instance","","",107,{"inputs":[],"output":{"name":"bytesvalue"}}],[11,"clear_value","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"set_value","","",107,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_value","","",107,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_value","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_value","","",107,null],[11,"is_initialized","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",107,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",107,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",107,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",107,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",107,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",107,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",107,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",107,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",107,{"inputs":[],"output":{"name":"bytesvalue"}}],[11,"descriptor_static","","",107,{"inputs":[{"generics":["bytesvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",107,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"ext","protobuf","",null,null],[3,"ExtFieldOptional","protobuf::ext","Optional ext field",null,null],[12,"field_number","","",115,null],[12,"phantom","","",115,null],[3,"ExtFieldRepeated","","Repeated ext field",null,null],[12,"field_number","","",116,null],[12,"phantom","","",116,null],[11,"get","","",115,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"option"}}],[11,"get","","",116,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"vec"}}],[0,"hex","protobuf","",null,null],[5,"decode_hex","protobuf::hex","",null,{"inputs":[{"name":"str"}],"output":{"generics":["u8"],"name":"vec"}}],[5,"encode_hex","","",null,null],[0,"descriptorx","protobuf","",null,null],[3,"RootScope","protobuf::descriptorx","",null,null],[12,"file_descriptors","","",117,null],[3,"FileScope","","",null,null],[12,"file_descriptor","","",118,null],[3,"Scope","","",null,null],[12,"file_scope","","",119,null],[12,"path","","",119,null],[3,"MessageWithScope","","",null,null],[12,"scope","","",120,null],[12,"message","","",120,null],[3,"EnumWithScope","","",null,null],[12,"scope","","",121,null],[12,"en","","",121,null],[3,"FieldWithContext","","",null,null],[12,"field","","",122,null],[12,"message","","",122,null],[3,"OneofVariantWithContext","","",null,null],[12,"oneof","","",123,null],[12,"field","","",123,null],[3,"OneofWithContext","","",null,null],[12,"oneof","","",124,null],[12,"index","","",124,null],[12,"message","","",124,null],[4,"Syntax","","",null,null],[13,"PROTO2","","",125,null],[13,"PROTO3","","",125,null],[4,"MessageOrEnumWithScope","","",null,null],[13,"Message","","",126,null],[13,"Enum","","",126,null],[5,"proto_path_to_rust_mod","","",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"find_message_by_rust_name","","",null,{"inputs":[{"name":"filedescriptorproto"},{"name":"str"}],"output":{"name":"messagewithscope"}}],[5,"find_enum_by_rust_name","","",null,{"inputs":[{"name":"filedescriptorproto"},{"name":"str"}],"output":{"name":"enumwithscope"}}],[8,"WithScope","","",null,null],[10,"get_scope","","",127,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"get_file_descriptor","","",127,{"inputs":[{"name":"self"}],"output":{"name":"filedescriptorproto"}}],[10,"get_name","","",127,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[10,"escape_prefix","","",127,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"name_to_package","","",127,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"rust_name","","",127,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"rust_fq_name","","",127,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[8,"EnumValueDescriptorEx","","",null,null],[10,"rust_name","","",128,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"find_enum","","",117,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"enumwithscope"}}],[11,"find_message","","",117,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"messagewithscope"}}],[11,"find_message_or_enum","","",117,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"messageorenumwithscope"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"syntax"}],"output":{"name":"bool"}}],[11,"parse","","",125,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"filescope"}}],[11,"syntax","","",118,{"inputs":[{"name":"self"}],"output":{"name":"syntax"}}],[11,"to_scope","","",118,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"find_enums","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["enumwithscope"],"name":"vec"}}],[11,"find_messages","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["messagewithscope"],"name":"vec"}}],[11,"find_messages_and_enums","","",118,{"inputs":[{"name":"self"}],"output":{"generics":["messageorenumwithscope"],"name":"vec"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"get_file_descriptor","","",119,{"inputs":[{"name":"self"}],"output":{"name":"filedescriptorproto"}}],[11,"get_messages","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["messagewithscope"],"name":"vec"}}],[11,"get_enums","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["enumwithscope"],"name":"vec"}}],[11,"get_messages_and_enums","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["messageorenumwithscope"],"name":"vec"}}],[11,"prefix","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"rust_prefix","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"messagewithscope"}}],[11,"get_scope","","",120,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"escape_prefix","","",120,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_name","","",120,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_scope","","",120,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"to_scope","","",120,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"fields","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["fieldwithcontext"],"name":"vec"}}],[11,"oneofs","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["oneofwithcontext"],"name":"vec"}}],[11,"oneof_by_index","","",120,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"oneofwithcontext"}}],[11,"map_entry","","Pair of (key, value) if this message is map entry",120,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"enumwithscope"}}],[11,"values","","",121,null],[11,"value_by_name","","",121,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"enumvaluedescriptorproto"}}],[11,"rust_name","protobuf::descriptor","",17,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_scope","protobuf::descriptorx","",121,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"escape_prefix","","",121,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_name","","",121,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_scope","","",126,{"inputs":[{"name":"self"}],"output":{"name":"scope"}}],[11,"escape_prefix","","",126,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_name","","",126,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"fieldwithcontext"}}],[11,"oneof","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["oneofwithcontext"],"name":"option"}}],[11,"number","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"name","","Shortcut",122,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"rust_name","","",122,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"containing_messages","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["descriptorproto"],"name":"vec"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"oneofvariantwithcontext"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"oneofwithcontext"}}],[11,"name","","",124,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"rust_name","","",124,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"variants","","",124,{"inputs":[{"name":"self"}],"output":{"generics":["oneofvariantwithcontext"],"name":"vec"}}],[11,"fmt","protobuf","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"wire_type","","",2,{"inputs":[{"name":"self"}],"output":{"name":"wiretype"}}],[11,"get_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"unknownvalueref"}}],[11,"wire_type","","",3,{"inputs":[{"name":"self"}],"output":{"name":"wiretype"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unknownvalues"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"unknownvalues"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"unknownvalues"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"unknownvalues"}}],[11,"add_value","","",1,{"inputs":[{"name":"self"},{"name":"unknownvalue"}],"output":null}],[11,"iter","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unknownvaluesiter"}}],[11,"next","","",129,{"inputs":[{"name":"self"}],"output":{"generics":["unknownvalueref"],"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"unknownfields"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"unknownfields"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"unknownfields"}}],[11,"new","","",0,{"inputs":[],"output":{"name":"unknownfields"}}],[11,"add_fixed32","","",0,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"add_fixed64","","",0,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u64"}],"output":null}],[11,"add_varint","","",0,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u64"}],"output":null}],[11,"add_length_delimited","","",0,{"inputs":[{"name":"self"},{"name":"u32"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"add_value","","",0,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"unknownvalue"}],"output":null}],[11,"iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"unknownfieldsiter"}}],[11,"get","","",0,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["unknownvalues"],"name":"option"}}],[11,"clear","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",130,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",131,{"inputs":[],"output":{"name":"cachedsize"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"cachedsize"}}],[11,"get","","",131,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set","","",131,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"cachedsize"}],"output":{"name":"bool"}}],[11,"as_any","protobuf::reflect","",53,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"is_non_zero","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ref_copy","","",53,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}]],"paths":[[3,"UnknownFields"],[3,"UnknownValues"],[4,"UnknownValue"],[4,"UnknownValueRef"],[4,"FieldDescriptorProto_Type"],[4,"FieldDescriptorProto_Label"],[4,"FileOptions_OptimizeMode"],[4,"FieldOptions_CType"],[4,"FieldOptions_JSType"],[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"DescriptorProto_ReservedRange"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"OneofOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"GeneratedCodeInfo"],[3,"GeneratedCodeInfo_Annotation"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[8,"Message"],[8,"MessageStatic"],[8,"ProtobufEnum"],[8,"ProtobufVarint"],[8,"ProtobufVarintZigzag"],[3,"Lazy"],[4,"Visibility"],[3,"CodeWriter"],[3,"GenResult"],[3,"RepeatedField"],[3,"SingularField"],[3,"SingularPtrField"],[8,"Clear"],[4,"ProtobufValueRef"],[4,"ReflectFieldRef"],[8,"FieldAccessor"],[8,"ProtobufValue"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[3,"EnumValueDescriptor"],[3,"EnumDescriptor"],[4,"WireType"],[3,"Tag"],[8,"WithCodedOutputStream"],[8,"WithCodedInputStream"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[4,"WireError"],[4,"ProtobufError"],[8,"ProtobufType"],[3,"ProtobufTypeFloat"],[3,"ProtobufTypeDouble"],[3,"ProtobufTypeInt32"],[3,"ProtobufTypeInt64"],[3,"ProtobufTypeUint32"],[3,"ProtobufTypeUint64"],[3,"ProtobufTypeSint32"],[3,"ProtobufTypeSint64"],[3,"ProtobufTypeFixed32"],[3,"ProtobufTypeFixed64"],[3,"ProtobufTypeSfixed32"],[3,"ProtobufTypeSfixed64"],[3,"ProtobufTypeBool"],[3,"ProtobufTypeString"],[3,"ProtobufTypeBytes"],[3,"ProtobufTypeEnum"],[3,"ProtobufTypeMessage"],[3,"Any"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"FieldMask"],[3,"SourceContext"],[3,"Struct"],[3,"ListValue"],[3,"Timestamp"],[3,"Type"],[3,"Field"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[3,"DoubleValue"],[3,"FloatValue"],[3,"Int64Value"],[3,"UInt64Value"],[3,"Int32Value"],[3,"UInt32Value"],[3,"BoolValue"],[3,"StringValue"],[3,"BytesValue"],[4,"Value_oneof_kind"],[4,"NullValue"],[4,"Field_Kind"],[4,"Field_Cardinality"],[4,"Syntax"],[3,"Empty"],[3,"Value"],[3,"ExtFieldOptional"],[3,"ExtFieldRepeated"],[3,"RootScope"],[3,"FileScope"],[3,"Scope"],[3,"MessageWithScope"],[3,"EnumWithScope"],[3,"FieldWithContext"],[3,"OneofVariantWithContext"],[3,"OneofWithContext"],[4,"Syntax"],[4,"MessageOrEnumWithScope"],[8,"WithScope"],[8,"EnumValueDescriptorEx"],[3,"UnknownValuesIter"],[3,"UnknownFieldsIter"],[3,"CachedSize"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from a finite iterator. The order of elements in the sample is not random.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `Ï‡Â²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"gamma"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"chisquared"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fisherf"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"studentt"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"standardnormal"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"normal"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"lognormal"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"exp1"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"exp"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"weighted"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"chacharng"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",20,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"next_u32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"reseedwithdefault"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reseed","","",23,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"generics":["f64"],"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"generics":["f64"],"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"generics":["f32"],"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"generics":["f32"],"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"generics":["osrng"],"name":"result"}}],[11,"next_u32","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",27,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",27,{"inputs":[{"name":"self"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,{"inputs":[{"name":"self"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,{"inputs":[{"name":"self"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"xorshiftrng"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"stdrng"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"generics":["stdrng"],"name":"result"}}],[11,"next_u32","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"threadrng"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rawpointer"] = {"doc":"","items":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to `end`. Return the arithmetic difference if `T` is zero size.",null,null],[8,"PointerExt","","Extension methods for raw pointers",null,null],[10,"offset","","",0,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"self"}}],[11,"pre_inc","","Increment the pointer by 1, and return its new value.",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"post_inc","","Increment the pointer by 1, but return its old value.",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"pre_dec","","Decrement the pointer by 1, and return its new value.",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"post_dec","","Decrement the pointer by 1, but return its old value.",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"inc","","Increment by 1",0,{"inputs":[{"name":"self"}],"output":null}],[11,"dec","","Decrement by 1",0,{"inputs":[{"name":"self"}],"output":null}],[11,"stride_offset","","Offset the pointer by `s` multiplied by `index`.",0,{"inputs":[{"name":"self"},{"name":"isize"},{"name":"usize"}],"output":{"name":"self"}}]],"paths":[[8,"PointerExt"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and executing regular expressions. Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around and backreferences. In exchange, all searches execute in linear time with respect to the size of the regular expression and search text.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Split","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The argument is the size limit imposed.",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups matching a particular regular expression.",null,null],[3,"Split","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order in which they appear in the regex.",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"clone","regex","",1,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"build","","Consume the builder and compile the regular expression.",4,{"inputs":[{"name":"self"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"build","","Consume the builder and compile the regular expression.",5,{"inputs":[{"name":"self"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexbuilder"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",6,{"inputs":[{"name":"i"}],"output":{"name":"regexsetbuilder"}}],[11,"build","","Consume the builder and compile the regular expressions into a set.",6,{"inputs":[{"name":"self"}],"output":{"generics":["regexset","error"],"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"new","regex","Create a new regular expression builder with the given pattern.",7,{"inputs":[{"name":"i"}],"output":{"name":"regexsetbuilder"}}],[11,"build","","Consume the builder and compile the regular expressions into a set.",7,{"inputs":[{"name":"self"}],"output":{"generics":["regexset","error"],"name":"result"}}],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches anything when `s` is set and matches anything except for new line when it is not set (the default).",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"regexsetbuilder"}}],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"regexsetbuilder"}}],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"start","","Returns the starting byte offset of the match in the haystack.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_bytes","","Returns the matched text.",8,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",9,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",9,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",9,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",9,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",9,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",9,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",9,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",9,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",9,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular byte string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced byte string.",9,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",9,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",9,null],[11,"shortest_match","","Returns the end location of a match in the text given.",9,null],[11,"as_str","","Returns the original string of this regex.",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",9,{"inputs":[{"name":"self"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["match"],"name":"option"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["captures"],"name":"option"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"size_hint","","",14,null],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["match"],"name":"option"}}],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",15,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["match"],"name":"option"}}],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",15,{"inputs":[{"name":"self"}],"output":{"name":"subcapturematches"}}],[11,"expand","","Expands all instances of `$name` in `replacement` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",15,null],[11,"len","","Returns the number of captured groups.",15,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",15,null],[11,"index","","",15,null],[11,"next","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"replace_append","","",2,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"vec"}],"output":null}],[11,"no_expansion","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"clone","regex","",17,{"inputs":[{"name":"self"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",17,{"inputs":[{"name":"i"}],"output":{"generics":["regexset","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches","","Returns the set of regular expressions that match in the given text.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"setmatches"}}],[11,"len","","Returns the total number of regular expressions in this set.",17,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"setmatches"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matched_any","","Whether this set contains any matches.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",18,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",18,null],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","regex::bytes","",21,{"inputs":[{"name":"self"}],"output":{"name":"regexset"}}],[11,"new","","Create a new regex set with the given regular expressions.",21,{"inputs":[{"name":"i"}],"output":{"generics":["regexset","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches the text given.",21,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",21,null],[11,"len","","Returns the total number of regular expressions in this set.",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"setmatches"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matched_any","","Whether this set contains any matches.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"matched","","Whether the regex at the given index matched.",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"len","","The total number of regexes in the set that created these matches.",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter","","Returns an iterator over indexes in the regex that matched.",22,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"into_iter","","",22,null],[11,"next","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"setmatchesiter"}}],[11,"next","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_back","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","regex","",25,{"inputs":[{"name":"self"}],"output":{"name":"match"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"start","","Returns the starting byte offset of the match in the haystack.",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the ending byte offset of the match in the haystack.",25,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_str","","Returns the matched text.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"regex"}}],[11,"fmt","","Shows the original regular expression.",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Shows the original regular expression.",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Attempts to parse a string into a regular expression",26,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly to search, split or replace text in a string.",26,{"inputs":[{"name":"str"}],"output":{"generics":["regex","error"],"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"find","","Returns the start and end byte range of the leftmost-first match in `text`. If no match exists, then `None` is returned.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["match"],"name":"option"}}],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in `text`, returning the start and end byte indices with respect to `text`.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"matches"}}],[11,"captures","","Returns the capture groups corresponding to the leftmost-first match in `text`. Capture group `0` always corresponds to the entire match. If no match is found, then `None` is returned.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["captures"],"name":"option"}}],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched in `text`. This is operationally the same as `find_iter`, except it yields information about capturing group matches.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"capturematches"}}],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the regular expression. Namely, each element of the iterator corresponds to text that isn't matched by the regular expression.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"split"}}],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited by a match of the regular expression. (A `limit` of `0` will return no substrings.) Namely, each element of the iterator corresponds to text that isn't matched by the regular expression. The remainder of the string that is not split will be the last element in the iterator.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"splitn"}}],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The replacement can be a regular string (where `$N` and `$name` are expanded to match capture groups) or a function that takes the matches' `Captures` and returns the replaced string.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"r"}],"output":{"generics":["str"],"name":"cow"}}],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement provided. This is the same as calling `replacen` with `limit` set to `0`.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"r"}],"output":{"generics":["str"],"name":"cow"}}],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the replacement provided. If `limit` is 0, then all non-overlapping matches are replaced.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"r"}],"output":{"generics":["str"],"name":"cow"}}],[11,"shortest_match","","Returns the end location of a match in the text given.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["usize"],"name":"option"}}],[11,"as_str","","Returns the original string of this regex.",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"capture_names","","Returns an iterator over the capture names.",26,{"inputs":[{"name":"self"}],"output":{"name":"capturenames"}}],[11,"captures_len","","Returns the number of captures.",26,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"size_hint","","",27,null],[11,"next","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"get","","Returns the match associated with the capture group at index `i`. If `i` does not correspond to a capture group, or if the capture group did not participate in the match, then `None` is returned.",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["match"],"name":"option"}}],[11,"name","","Returns the match for the capture group named `name`. If `name` isn't a valid capture group or didn't match anything, then `None` is returned.",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["match"],"name":"option"}}],[11,"iter","","An iterator that yields all capturing matches in the order in which they appear in the regex. If a particular capture group didn't participate in the match, then `None` is yielded for that capture.",30,{"inputs":[{"name":"self"}],"output":{"name":"subcapturematches"}}],[11,"expand","","Expands all instances of `$name` in `replacement` to the corresponding capture group `name`, and writes them to the `dst` buffer given.",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"string"}],"output":null}],[11,"len","","Returns the number of captured groups.",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"str"}}],[11,"index","","",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"str"}}],[11,"next","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["captures"],"name":"option"}}],[11,"next","","",33,{"inputs":[{"name":"self"}],"output":{"generics":["match"],"name":"option"}}],[11,"replace_append","","",0,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"string"}],"output":null}],[11,"no_expansion","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",34,{"inputs":[{"name":"self"},{"name":"captures"},{"name":"string"}],"output":null}],[11,"no_expansion","","Return a fixed unchanging replacement string.",34,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}],[11,"no_expansion","","Return a fixed unchanging replacement string.",34,{"inputs":[{"name":"self"}],"output":{"generics":["cow"],"name":"option"}}]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[8,"Replacer"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for regular expressions. The abstract syntax is defined by the `Expr` type. The concrete syntax is enumerated in the `regex` crate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word character on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word characters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes or grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the least).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings. e.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once. e.g., `(?P<a>.)(?P<a>.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P<>a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence. e.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P<0a>b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the range is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not allowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal sequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be repeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P<a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes. This never returned if the parser is permitted to allow expressions that match arbitrary bytes.",4,null],[13,"EmptyClass","","A character class was constructed such that it is empty. e.g., `[^\\d\\D]`.",4,null],[13,"UnsupportedClassChar","","Indicates that unsupported notation was used in a character class.",4,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"ordering"}}],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"limit_class","","Get the character class size limit for this set.",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"literals"}}],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"min_len","","Returns the length of the smallest literal.",5,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"all_complete","","Returns true if all members in this set are complete.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"any_complete","","Returns true if any member in this set is complete.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"trim_suffix","","Returns a new set of literals with the given number of bytes trimmed from the suffix of each literal.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["literals"],"name":"option"}}],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are guaranteed to be unambiguous.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are guaranteed to be unambiguous.",5,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"union","","Unions this set with another set.",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_product","","Extends this set with another set.",5,{"inputs":[{"name":"self"},{"name":"literals"}],"output":{"name":"bool"}}],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"cut","","Cuts every member of this set. When a member is cut, it can never be extended.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"reverse","","Reverses all members in place.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","Clears this set of all members.",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was \"cut.\"",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cut","","Cuts this literal.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",6,null],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"expr"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"repeater"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"repeater"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"charclass"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"classrange"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"classrange"}],"output":{"name":"ordering"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"byteclass"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"byterange"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"byterange"}],"output":{"name":"ordering"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"exprbuilder"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new builder for configuring expression parsing.",9,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",9,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"exprbuilder"}}],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"exprbuilder"}}],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["expr"],"name":"result"}}],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"generics":["expr"],"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,{"inputs":[{"name":"self"}],"output":{"name":"literals"}}],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_anchored_start","","Returns true if and only if the expression has at least one matchable sub-expression that must match the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the end of the text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_anchored_end","","Returns true if and only if the expression has at least one matchable sub-expression that must match the beginning of text.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions that can match arbitrary bytes.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"deref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_iter","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["classrange"],"name":"intoiter"}}],[11,"new","","Create a new class from an existing set of ranges.",7,{"inputs":[{"generics":["classrange"],"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",7,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given character from the class if it exists.",7,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"negate","","Negates the character class.",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"case_fold","","Apply case folding to this character class.",7,{"inputs":[{"name":"self"}],"output":{"name":"charclass"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"new","","Create a new class from an existing set of ranges.",8,{"inputs":[{"generics":["byterange"],"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",8,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"remove","","Removes the given byte from the class if it exists.",8,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"negate","","Negates the byte class.",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"case_fold","","Apply case folding to this byte class.",8,{"inputs":[{"name":"self"}],"output":{"name":"byteclass"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_iter","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["byterange"],"name":"intoiter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"position","","Returns an approximate character offset at which the error occurred.",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"kind","","Returns the type of the regex parse error.",10,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"description","","",10,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"inputs":[{"name":"str"}],"output":{"name":"demangle"}}],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",null,{"inputs":[{"name":"str"}],"output":{"generics":["demangle","trydemangleerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"trydemangleerror"}}],[11,"as_str","","Returns the underlying string that's being demangled.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TryDemangleError"],[3,"Demangle"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified format configuration, returning the owned string.",4,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into an owned vector of bytes, returning the vector.",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec","frombase64error"],"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"characterset"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"newline"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned string.",7,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data, into an owned vector of bytes, returning the vector.",8,{"inputs":[{"name":"self"}],"output":{"generics":["vec","fromhexerror"],"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical structure of the JSON stream. For example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming an iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the StackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"generics":["string"],"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"errorcode"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"encodererror"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable JSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact JSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level. This is safe to set during encoding.",17,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",17,{"inputs":[{"name":"self"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",17,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",17,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",17,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",17,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",17,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",17,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",17,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",17,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",17,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",17,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",17,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",17,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",17,{"inputs":[{"name":"self"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"generics":["buildererror"],"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"generics":["buildererror"],"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty representation for it via `Display`.",9,{"inputs":[{"name":"self"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key. Otherwise, returns None.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["json"],"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`. If any key is found not to exist, find_path will return None. Otherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until a value associated with the provided key is found. If no value is found or the Json value is not an Object, returns None.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["json"],"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["object"],"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["object"],"name":"option"}}],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["object"],"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["array"],"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["array"],"name":"option"}}],[11,"into_array","","If the Json value is an Array, returns the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["array"],"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns (). Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"json"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"stackelement"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index. lower indices are at the bottom of the stack while higher indices are at the top.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,{"inputs":[{"name":"self"}],"output":{"generics":["stackelement"],"name":"option"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["jsonevent"],"name":"option"}}],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the JSON stream.",19,{"inputs":[{"name":"self"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["json","buildererror"],"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"decoderesult"}}],[11,"read_u8","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"decoderesult"}}],[11,"read_u16","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"decoderesult"}}],[11,"read_u32","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"decoderesult"}}],[11,"read_u64","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"decoderesult"}}],[11,"read_isize","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"decoderesult"}}],[11,"read_i8","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"decoderesult"}}],[11,"read_i16","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"decoderesult"}}],[11,"read_i32","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"decoderesult"}}],[11,"read_i64","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"decoderesult"}}],[11,"read_f32","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"decoderesult"}}],[11,"read_f64","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"decoderesult"}}],[11,"read_bool","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"decoderesult"}}],[11,"read_char","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"decoderesult"}}],[11,"read_str","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"decoderesult"}}],[11,"read_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",9,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"fmt","","Encodes a json value into a string",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",24,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"generics":["json","parsererror"],"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_usize","","Read a usize value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[10,"read_u64","","Read a u64 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[10,"read_u32","","Read a u32 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"read_u16","","Read a u16 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[10,"read_u8","","Read a u8 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[10,"read_isize","","Read a isize value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"result"}}],[10,"read_i64","","Read a i64 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[10,"read_i32","","Read a i32 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[10,"read_i16","","Read a i16 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[10,"read_i8","","Read a i8 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[10,"read_bool","","Read a bool value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"read_f64","","Read a f64 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[10,"read_f32","","Read a f32 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[10,"read_char","","Read a char value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"result"}}],[10,"read_str","","Read a string value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"result"}}],[10,"read_enum","","Read an enumeration value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","Read an struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","Read a field for a struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","Read a tuple value.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","Read a data item for a tuple.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","Read a tuple struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","Read an optional value.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","Read a sequence of values.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","Read an element in the sequence.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","Read an associative container (map).",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"emit_usize","","Emit a usize value.",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","Emit a u64 value.",26,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","Emit a u32 value.",26,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","Emit a u16 value.",26,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","Emit a u8 value.",26,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","Emit a isize value.",26,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","Emit a i64 value.",26,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","Emit a i32 value.",26,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","Emit a i16 value.",26,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","Emit a i8 value.",26,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","Emit a bool value.",26,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","Emit a f64 value.",26,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","Emit a f32 value.",26,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","Emit a char value.",26,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","Emit a string value.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","Emit an enumeration value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","Emit a struct value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","Emit a field item for a struct.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","Emit a tuple value.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","Emit an optional value.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","Emit the `None` optional value.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","Emit a sequence of values.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","Emit an element in a sequence.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","Emit an associative container (map).",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["vec"],"name":"result"}}],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["safemem"] = {"doc":"Safe wrappers for memory-accessing functions like `std::ptr::copy()`.","items":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges may overlap.",null,null],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",null,null],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",null,null]],"paths":[]};
searchIndex["sc2"] = {"doc":"StarCraft II API for Rust","items":[[3,"ClientRequest","sc2","a request to send to the game instance",null,null],[3,"CtrlcBreakerSoma","","soma that stops the organelle upon Ctrl-C",null,null],[3,"AbilityData","","data about an ability",null,null],[12,"available","","indicates whether the ability is available to the current mods/map",0,null],[12,"ability","","stable ID for the ability",0,null],[12,"link_name","","catalog (game data xml) name of the ability",0,null],[12,"link_index","","catalog (game data xml) index of the ability",0,null],[12,"button_name","","name of the button for the command card",0,null],[12,"friendly_name","","in case the button name is not descriptive",0,null],[12,"hotkey","","UI hotkey",0,null],[12,"remaps_to_ability","","this ability may be represented by this more generic ability",0,null],[12,"remaps_from_ability","","other abilities that can remap to this generic ability",0,null],[12,"target","","type of target that this ability uses",0,null],[12,"allow_minimap","","can be cast in the minimap (unimplemented)",0,null],[12,"allow_autocast","","autocast can be set",0,null],[12,"is_building","","requires placement to construct a building",0,null],[12,"footprint_radius","","if the ability is placing a building, give the radius of the footprint",0,null],[12,"is_instant_placement","","placement next to an existing structure (an addon like a Tech Lab)",0,null],[12,"cast_range","","range unit can cast ability without needing to approach target",0,null],[3,"Action","","an action (command or ability) applied to a unit or set of units",null,null],[12,"ability","","the ability to invoke",1,null],[12,"unit_tags","","units that this action applies to",1,null],[12,"target","","target of the action",1,null],[3,"BuffData","","buff data",null,null],[12,"buff","","stable buff ID",2,null],[12,"name","","buff name (corresponds to the game's catalog)",2,null],[3,"Effect","","visuals of a persistent ability on the map (eg. PsiStorm)",null,null],[12,"effect","","stable effect ID",3,null],[12,"positions","","all the positions that this effect is impacting on the map",3,null],[3,"GamePorts","","all port settings for a game",null,null],[12,"shared_port","","",4,null],[12,"server_ports","","",4,null],[12,"client_ports","","",4,null],[3,"GameSettings","","settings for a game",null,null],[12,"map","","which map to play on",5,null],[3,"ImageData","","data used to sample the current state of the map at certain points",null,null],[12,"bits_per_pixel","","number of bits to interpret as a pixel in the data",6,null],[12,"data","","raw image data",6,null],[12,"width","","width of the image",6,null],[12,"height","","height of the image",6,null],[3,"PortSet","","endpoint port settings",null,null],[12,"game_port","","",7,null],[12,"base_port","","",7,null],[3,"PowerSource","","power source information for Protoss",null,null],[12,"tag","","unit tag of the power source",8,null],[12,"pos","","position of the power source",8,null],[12,"radius","","radius of the power source",8,null],[3,"Rect","","generic structure to represent a 2D rectangle",null,null],[12,"x","","x position of lefthand corner",9,null],[12,"y","","y position of lefthand corner",9,null],[12,"w","","width of the rectangle",9,null],[12,"h","","height of the rectangle",9,null],[3,"Rect2","","2D rectangle represented by two points",null,null],[12,"from","","upper left-hand corner",10,null],[12,"to","","lower right-hand corner",10,null],[3,"Score","","score evaluated at the end of a game",null,null],[12,"score_type","","method of scoring",11,null],[12,"score","","overall score",11,null],[12,"details","","more detailed scoring",11,null],[3,"TerrainInfo","","terrain info",null,null],[12,"width","","width of the terrain",12,null],[12,"height","","height of the terrain",12,null],[12,"pathing_grid","","image that reveals pathable tiles",12,null],[12,"placement_grid","","image that reveals placable tiles",12,null],[12,"terrain_height","","image that reveals terrain height",12,null],[12,"playable_area","","rectangle of the playable area",12,null],[12,"enemy_start_locations","","starting locations of the enemy bases",12,null],[3,"Unit","","a unit (could be structure, a worker, or military)",null,null],[12,"display_type","","whether the unit is shown on screen or not",13,null],[12,"alliance","","relationship of the unit to this player",13,null],[12,"tag","","a unique id for the instance of a unit",13,null],[12,"unit_type","","the type of unit",13,null],[12,"owner","","which player owns this unit",13,null],[12,"pos","","position of the unit in the world",13,null],[12,"facing","","direction the unit faces in radians",13,null],[12,"radius","","radius of the unit",13,null],[12,"build_progress","","gives progress under construction (range [0.0, 1.0] where 1.0 is done)",13,null],[12,"cloak","","whether the unit is cloaked",13,null],[12,"detect_range","","range of detector for detector units",13,null],[12,"radar_range","","range of radar for radar units",13,null],[12,"is_selected","","whether this unit is currently selected",13,null],[12,"is_on_screen","","whether this unit is visible and within the camera frustum",13,null],[12,"is_blip","","whether this unit is detected by a sensor tower",13,null],[12,"health","","health of the unit (not set for snapshots)",13,null],[12,"health_max","","max health of the unit (not set for snapshots)",13,null],[12,"shield","","shield of the unit (not set for snapshots)",13,null],[12,"energy","","energy of the unit (not set for snapshots)",13,null],[12,"mineral_contents","","amount of minerals if unit is a mineral field (not set for snapshot)",13,null],[12,"vespene_contents","","amount of vespene if unit is a geyser (not set for snapshots)",13,null],[12,"is_flying","","whether the unit is flying (not set for snapshots)",13,null],[12,"is_burrowed","","whether the unit is burrowed (not set for snapshots)",13,null],[12,"weapon_cooldown","","time remaining for a weapon on cooldown (not set for snapshots)",13,null],[12,"orders","","orders on this unit (only valid for this player's units)",13,null],[12,"add_on_tag","","addon like a tech lab or reactor (only valid for this player's units)",13,null],[12,"passengers","","passengers in this transport (only valid for this player's units)",13,null],[12,"cargo_space_taken","","number of cargo slots used (only valid for this player's units)",13,null],[12,"cargo_space_max","","max number of cargo slots (only valid for this player's units)",13,null],[12,"assigned_harvesters","","number of harvesters associated with town hall",13,null],[12,"ideal_harvesters","","number of harvesters that can be assigned to a town hall",13,null],[12,"engaged_target_tag","","target unit of a unit (only valid for this player's units)",13,null],[12,"buffs","","buffs on this unit (only valid for this player's units)",13,null],[12,"is_powered","","whether this unit is powered by a pylon",13,null],[12,"is_alive","","whether this unit is alive or not",13,null],[12,"last_seen_game_loop","","the last time the unit was seen",13,null],[3,"UnitTypeData","","data about a unit type",null,null],[12,"unit_type","","stable unit ID",14,null],[12,"name","","unit type name (corresponds to the game's catalog)",14,null],[12,"available","","whether this unit is available to the current mods/map",14,null],[12,"cargo_size","","number of cargo slots this unit occupies in a transport",14,null],[12,"mineral_cost","","cost in minerals to build this unit",14,null],[12,"vespene_cost","","cost in vespene to build this unit",14,null],[12,"attributes","","unit attributes (may change based on upgrades)",14,null],[12,"movement_speed","","movement speed of this unit",14,null],[12,"armor","","armor of this unit",14,null],[12,"weapons","","weapons on this unit",14,null],[12,"food_required","","how much food this unit requires",14,null],[12,"food_provided","","how much food this unit provides",14,null],[12,"ability","","which ability id creates this unit",14,null],[12,"race","","the race this unit belongs to",14,null],[12,"build_time","","how long a unit takes to build",14,null],[12,"has_minerals","","whether this unit can have minerals (mineral patches)",14,null],[12,"has_vespene","","whether this unit can have vespene (vespene geysers)",14,null],[12,"tech_alias","","units this is equivalent to in terms of satisfying tech requirements",14,null],[12,"unit_alias","","units that are morphed variants of the same unit",14,null],[12,"tech_requirement","","structure required to build this unit (or any with same tech alias)",14,null],[12,"require_attached","","whether tech requirement is an addon",14,null],[3,"UpgradeData","","upgrade data",null,null],[12,"upgrade","","stable upgrade ID",15,null],[12,"name","","upgrade name (corresponds to the game's catalog)",15,null],[12,"mineral_cost","","mineral cost of researching this upgrade",15,null],[12,"vespene_cost","","vespene cost of researching this upgrade",15,null],[12,"ability","","ability that researches this upgrade",15,null],[12,"research_time","","time in game steps to research this upgrade",15,null],[3,"FrameData","","all game data passed to agents and observers",null,null],[12,"state","","state that updates every frame",16,null],[12,"data","","data that can change on a per game basis",16,null],[12,"events","","events that have happened since the last update",16,null],[12,"map","","current map state",16,null],[3,"GameData","","game data (may vary depending on version and DLC)",null,null],[12,"ability_data","","data associated with abilities",17,null],[12,"unit_type_data","","data associated with unit types",17,null],[12,"upgrade_data","","data associated with upgrades",17,null],[12,"buff_data","","data associated buffs",17,null],[12,"terrain_info","","playable area info",17,null],[3,"GameState","","state of the game (changes every frame)",null,null],[12,"player_id","","the player id associated with the participant",18,null],[12,"previous_step","","the previous game step",18,null],[12,"current_step","","the current game step",18,null],[12,"camera_pos","","position of the center of the camera",18,null],[12,"units","","a list of all known units at the moment",18,null],[12,"power_sources","","all power sources associated with the current player",18,null],[12,"effects","","all active effects in vision of the current player",18,null],[12,"upgrades","","all upgrades",18,null],[12,"minerals","","current mineral count",18,null],[12,"vespene","","current vespene count",18,null],[12,"food_cap","","the total supply cap given the players max supply",18,null],[12,"food_used","","the total supply used by the player",18,null],[12,"food_army","","the total supply consumed by army units alone",18,null],[12,"food_workers","","the total supply consumed by workers alone",18,null],[12,"idle_worker_count","","the number of workers that currently have no orders",18,null],[12,"army_count","","the number of army units",18,null],[12,"warp_gate_count","","the number of warp gates owned by the player",18,null],[12,"larva_count","","the number of larva owned by the player",18,null],[12,"score","","detailed current set of scores",18,null],[3,"MapState","","current state of the map",null,null],[12,"creep","","creep image (sample pixels to find tiles with creep)",19,null],[12,"visibility","","visibility image (sample pixels to find visible tiles)",19,null],[3,"LauncherSettings","","settings used to create a launcher",null,null],[12,"dir","","installation directory",20,null],[12,"use_wine","","use Wine to run the game - Linux users",20,null],[12,"base_port","","starting point for game ports",20,null],[3,"LauncherSoma","","soma in charge of launching game instances and assigning ports",null,null],[3,"MeleeSettings","","settings for the melee soma",null,null],[12,"launcher","","the settings for the launcher soma",21,null],[12,"players","","the player organelles",21,null],[12,"suite","","the suite of games to choose from",21,null],[3,"Error","","The Error type.",null,null],[12,"0","","The kind of the error.",22,null],[4,"AgentSoma","","mediates interactions between the player and the game instance",null,null],[13,"Init","","initialize the axon",23,null],[13,"Setup","","perform setup queries",23,null],[13,"CreateGame","","order the game instance to create a game",23,null],[13,"GameCreated","","game has been created",23,null],[13,"JoinGame","","join an existing game",23,null],[13,"FetchGameData","","order the observer to fetch game data",23,null],[13,"StepperSetup","","query the request interval from the player soma",23,null],[13,"Update","","broadcast game updates to the player soma",23,null],[13,"SendActions","","send any actions for this step to the game instance",23,null],[13,"SendDebug","","send any debug actions for this step to the game instance",23,null],[13,"Step","","step the game instance",23,null],[13,"Observe","","order the observer to observe the game state",23,null],[13,"LeaveGame","","leave the current game",23,null],[13,"Reset","","reset the client and re-enter setup state",23,null],[4,"ClientResult","","the result of a transaction with the game instance",null,null],[13,"Success","","transaction succeeded",24,null],[13,"Timeout","","transaction timed out",24,null],[4,"ComputerSoma","","soma that acts as the built-in SC2 AI",null,null],[13,"Init","","initialize the axon",25,null],[13,"Setup","","respond to the setup queries",25,null],[4,"Ability","","list of known StarCraft II abilities",null,null],[13,"Invalid","","",26,null],[13,"Smart","","",26,null],[13,"Attack","","",26,null],[13,"AttackAttack","","",26,null],[13,"AttackAttackBuilding","","",26,null],[13,"AttackRedirect","","",26,null],[13,"BehaviorBuildingAttackOff","","",26,null],[13,"BehaviorBuildingAttackOn","","",26,null],[13,"BehaviorCloakOff","","",26,null],[13,"BehaviorCloakOffBanshee","","",26,null],[13,"BehaviorCloakOffGhost","","",26,null],[13,"BehaviorCloakOn","","",26,null],[13,"BehaviorCloakOnBanshee","","",26,null],[13,"BehaviorCloakOnGhost","","",26,null],[13,"BehaviorGenerateCreepOff","","",26,null],[13,"BehaviorGenerateCreepOn","","",26,null],[13,"BehaviorHoldFireOff","","",26,null],[13,"BehaviorHoldFireOffLurker","","",26,null],[13,"BehaviorHoldFireOn","","",26,null],[13,"BehaviorHoldFireOnGhost","","",26,null],[13,"BehaviorHoldFireOnLurker","","",26,null],[13,"BehaviorPulsarBeamOff","","",26,null],[13,"BehaviorPulsarBeamOn","","",26,null],[13,"BuildArmory","","",26,null],[13,"BuildAssimilator","","",26,null],[13,"BuildBanelingNest","","",26,null],[13,"BuildBarracks","","",26,null],[13,"BuildBunker","","",26,null],[13,"BuildCommandCenter","","",26,null],[13,"BuildCreepTumor","","",26,null],[13,"BuildCreepTumorQueen","","",26,null],[13,"BuildCreepTumorTumor","","",26,null],[13,"BuildCyberneticsCore","","",26,null],[13,"BuildDarkShrine","","",26,null],[13,"BuildEngineeringBay","","",26,null],[13,"BuildEvolutionChamber","","",26,null],[13,"BuildExtractor","","",26,null],[13,"BuildFactory","","",26,null],[13,"BuildFleetBeacon","","",26,null],[13,"BuildForge","","",26,null],[13,"BuildFusionCore","","",26,null],[13,"BuildGateway","","",26,null],[13,"BuildGhostAcademy","","",26,null],[13,"BuildHatchery","","",26,null],[13,"BuildHydraliskDen","","",26,null],[13,"BuildInfestationPit","","",26,null],[13,"BuildInterceptors","","",26,null],[13,"BuildMissileTurret","","",26,null],[13,"BuildNexus","","",26,null],[13,"BuildNuke","","",26,null],[13,"BuildNydusNetwork","","",26,null],[13,"BuildNydusWorm","","",26,null],[13,"BuildPhotonCannon","","",26,null],[13,"BuildPylon","","",26,null],[13,"BuildReactor","","",26,null],[13,"BuildReactorBarracks","","",26,null],[13,"BuildReactorFactory","","",26,null],[13,"BuildReactorStarport","","",26,null],[13,"BuildRefinery","","",26,null],[13,"BuildRoachWarren","","",26,null],[13,"BuildRoboticsBay","","",26,null],[13,"BuildRoboticsFacility","","",26,null],[13,"BuildSensorTower","","",26,null],[13,"BuildSpawningPool","","",26,null],[13,"BuildSpineCrawler","","",26,null],[13,"BuildSpire","","",26,null],[13,"BuildSporeCrawler","","",26,null],[13,"BuildStarGate","","",26,null],[13,"BuildStarport","","",26,null],[13,"BuildStasisTrap","","",26,null],[13,"BuildSupplyDepot","","",26,null],[13,"BuildTechLab","","",26,null],[13,"BuildTechLabBarracks","","",26,null],[13,"BuildTechLabFactory","","",26,null],[13,"BuildTechLabStarport","","",26,null],[13,"BuildTemplarArchive","","",26,null],[13,"BuildTwilightCouncil","","",26,null],[13,"BuildUltraliskCavern","","",26,null],[13,"BurrowDown","","",26,null],[13,"BurrowDownBaneling","","",26,null],[13,"BurrowDownDrone","","",26,null],[13,"BurrowDownHydralisk","","",26,null],[13,"BurrowDownInfestor","","",26,null],[13,"BurrowDownLurker","","",26,null],[13,"BurrowDownQueen","","",26,null],[13,"BurrowDownRavager","","",26,null],[13,"BurrowDownRoach","","",26,null],[13,"BurrowDownSwarmHost","","",26,null],[13,"BurrowDownWidowMine","","",26,null],[13,"BurrowDownZergling","","",26,null],[13,"BurrowUp","","",26,null],[13,"BurrowUpBaneling","","",26,null],[13,"BurrowUpDrone","","",26,null],[13,"BurrowUpHydralisk","","",26,null],[13,"BurrowUpInfestor","","",26,null],[13,"BurrowUpLurker","","",26,null],[13,"BurrowUpQueen","","",26,null],[13,"BurrowUpRavager","","",26,null],[13,"BurrowUpRoach","","",26,null],[13,"BurrowUpSwarmHost","","",26,null],[13,"BurrowUpWidowMine","","",26,null],[13,"BurrowUpZergling","","",26,null],[13,"Cancel","","",26,null],[13,"CancelSlotAddOn","","",26,null],[13,"CancelSlotQueue1","","",26,null],[13,"CancelSlotQueue5","","",26,null],[13,"CancelSlotQueueCancelToSelection","","",26,null],[13,"CancelSlotQueuePassive","","",26,null],[13,"CancelAdeptPhaseShift","","",26,null],[13,"CancelAdeptShadePhaseShift","","",26,null],[13,"CancelBarracksAddOn","","",26,null],[13,"CancelBuildInProgress","","",26,null],[13,"CancelCreepTumor","","",26,null],[13,"CancelFactoryAddOn","","",26,null],[13,"CancelGravitonBeam","","",26,null],[13,"CancelLast","","",26,null],[13,"CancelMorphBroodLord","","",26,null],[13,"CancelMorphLair","","",26,null],[13,"CancelMorphLurker","","",26,null],[13,"CancelMorphLurkerDen","","",26,null],[13,"CancelMorphMothership","","",26,null],[13,"CancelMorphOrbital","","",26,null],[13,"CancelMorphOverlordTransport","","",26,null],[13,"CancelMorphOverseer","","",26,null],[13,"CancelMorphPlanetaryFortress","","",26,null],[13,"CancelMorphRavager","","",26,null],[13,"CancelQueue1","","",26,null],[13,"CancelQueue5","","",26,null],[13,"CancelQueueAddOn","","",26,null],[13,"CancelQueueCancelToSelection","","",26,null],[13,"CancelQueuePassive","","",26,null],[13,"CancelQueuePassiveCancelTOSelection","","",26,null],[13,"CancelSpineCrawlerRoot","","",26,null],[13,"CancelStarportAddOn","","",26,null],[13,"EffectAbduct","","",26,null],[13,"EffectAdeptPhaseShift","","",26,null],[13,"EffectAutoTurret","","",26,null],[13,"EffectBlindingCloud","","",26,null],[13,"EffectBlink","","",26,null],[13,"EffectBlinkStalker","","",26,null],[13,"EffectCallDownMule","","",26,null],[13,"EffectCausticSpray","","",26,null],[13,"EffectCharge","","",26,null],[13,"EffectChronoBoost","","",26,null],[13,"EffectContaminate","","",26,null],[13,"EffectCorrosiveBile","","",26,null],[13,"EffectEmp","","",26,null],[13,"EffectExplode","","",26,null],[13,"EffectFeedback","","",26,null],[13,"EffectForceField","","",26,null],[13,"EffectFungalGrowth","","",26,null],[13,"EffectGhostSnipe","","",26,null],[13,"EffectGravitonBeam","","",26,null],[13,"EffectGuardianShield","","",26,null],[13,"EffectHeal","","",26,null],[13,"EffectHunterSeekerMissile","","",26,null],[13,"EffectImmortalBarrier","","",26,null],[13,"EffectInfestedTerrans","","",26,null],[13,"EffectInjectLarva","","",26,null],[13,"EffectKd8Charge","","",26,null],[13,"EffectLockOn","","",26,null],[13,"EffectLocustSwoop","","",26,null],[13,"EffectMassRecall","","",26,null],[13,"EffectMassRecallMothership","","",26,null],[13,"EffectMassRecallMothershipCore","","",26,null],[13,"EffectMedivacIgniteAfterBurners","","",26,null],[13,"EffectNeuralParasite","","",26,null],[13,"EffectNukeCallDown","","",26,null],[13,"EffectOracleRevelation","","",26,null],[13,"EffectParasiticBomb","","",26,null],[13,"EffectPhotonOvercharge","","",26,null],[13,"EffectPointDefenseDrone","","",26,null],[13,"EffectPsiStorm","","",26,null],[13,"EffectPurificationNova","","",26,null],[13,"EffectRepair","","",26,null],[13,"EffectRepairMule","","",26,null],[13,"EffectRepairScv","","",26,null],[13,"EffectSalvage","","",26,null],[13,"EffectScan","","",26,null],[13,"EffectShadowStride","","",26,null],[13,"EffectSpawnChangeling","","",26,null],[13,"EffectSpawnLocusts","","",26,null],[13,"EffectSpray","","",26,null],[13,"EffectSprayProtoss","","",26,null],[13,"EffectSprayTerran","","",26,null],[13,"EffectSprayZerg","","",26,null],[13,"EffectStim","","",26,null],[13,"EffectStimMarauder","","",26,null],[13,"EffectStimMarine","","",26,null],[13,"EffectStimMarineRedirect","","",26,null],[13,"EffectSupplyDrop","","",26,null],[13,"EffectTacticalJump","","",26,null],[13,"EffectTempestDisruptionBlast","","",26,null],[13,"EffectTimeWarp","","",26,null],[13,"EffectTransfusion","","",26,null],[13,"EffectViperConsume","","",26,null],[13,"EffectVoidRayPrismaticAlignment","","",26,null],[13,"EffectWidowMineAttack","","",26,null],[13,"EffectYamatoGun","","",26,null],[13,"HallucinationAdept","","",26,null],[13,"HallucinationArchon","","",26,null],[13,"HallucinationColossus","","",26,null],[13,"HallucinationDisruptor","","",26,null],[13,"HallucinationHighTemplar","","",26,null],[13,"HallucinationImmortal","","",26,null],[13,"HallucinationOracle","","",26,null],[13,"HallucinationPhoenix","","",26,null],[13,"HallucinationProbe","","",26,null],[13,"HallucinationStalker","","",26,null],[13,"HallucinationVoidRay","","",26,null],[13,"HallucinationWarpPrism","","",26,null],[13,"HallucinationZealot","","",26,null],[13,"Halt","","",26,null],[13,"HaltBuilding","","",26,null],[13,"HaltTerranBuild","","",26,null],[13,"HarvestGather","","",26,null],[13,"HarvestGatherDrone","","",26,null],[13,"HarvestGatherProbe","","",26,null],[13,"HarvestGatherScv","","",26,null],[13,"HarvestReturn","","",26,null],[13,"HarvestReturnDrone","","",26,null],[13,"HarvestReturnMule","","",26,null],[13,"HarvestReturnProbe","","",26,null],[13,"HarvestReturnScv","","",26,null],[13,"HoldPosition","","",26,null],[13,"Land","","",26,null],[13,"LandBarracks","","",26,null],[13,"LandCommandCenter","","",26,null],[13,"LandFactory","","",26,null],[13,"LandOrbitalCommand","","",26,null],[13,"LandStarport","","",26,null],[13,"Lift","","",26,null],[13,"LiftBarracks","","",26,null],[13,"LiftCommandCenter","","",26,null],[13,"LiftFactory","","",26,null],[13,"LiftOrbitalCommand","","",26,null],[13,"LiftStarport","","",26,null],[13,"Load","","",26,null],[13,"LoadAll","","",26,null],[13,"LoadAllCommandCenter","","",26,null],[13,"LoadBunker","","",26,null],[13,"LoadMedivac","","",26,null],[13,"MorphArchon","","",26,null],[13,"MorphBroodLord","","",26,null],[13,"MorphGateway","","",26,null],[13,"MorphGreaterSpire","","",26,null],[13,"MorphHellbat","","",26,null],[13,"MorphHellion","","",26,null],[13,"MorphHive","","",26,null],[13,"MorphLair","","",26,null],[13,"MorphLiberatorAaMode","","",26,null],[13,"MorphLiberatorAgMode","","",26,null],[13,"MorphLurker","","",26,null],[13,"MorphLurkerDen","","",26,null],[13,"MorphMothership","","",26,null],[13,"MorphOrbitalCommand","","",26,null],[13,"MorphOverlordTransport","","",26,null],[13,"MorphOverseer","","",26,null],[13,"MorphPlanetaryFortress","","",26,null],[13,"MorphRavager","","",26,null],[13,"MorphRoot","","",26,null],[13,"MorphSiegeMode","","",26,null],[13,"MorphSpineCrawlerRoot","","",26,null],[13,"MorphSpineCrawlerUproot","","",26,null],[13,"MorphSporeCrawlerRoot","","",26,null],[13,"MorphSporeCrawlerUproot","","",26,null],[13,"MorphSupplyDepotLower","","",26,null],[13,"MorphSupplyDepotRaise","","",26,null],[13,"MorphThorExplosiveMode","","",26,null],[13,"MorphThorHighImpactMode","","",26,null],[13,"MorphUnsiege","","",26,null],[13,"MorphUproot","","",26,null],[13,"MorphVikingAssaultMode","","",26,null],[13,"MorphVikingFighterMode","","",26,null],[13,"MorphWarpGate","","",26,null],[13,"MorphWarpPrismPhasingMode","","",26,null],[13,"MorphWarpPrismTransportMode","","",26,null],[13,"Move","","",26,null],[13,"Patrol","","",26,null],[13,"RallyBuilding","","",26,null],[13,"RallyCommandCenter","","",26,null],[13,"RallyHatcheryUnits","","",26,null],[13,"RallyHatcheryWorkers","","",26,null],[13,"RallyMorphingUnit","","",26,null],[13,"RallyNexus","","",26,null],[13,"RallyUnits","","",26,null],[13,"RallyWorkers","","",26,null],[13,"ResearchAdeptResonatingGlaives","","",26,null],[13,"ResearchAdvancedBallistics","","",26,null],[13,"ResearchBansheeCloakingField","","",26,null],[13,"ResearchBansheeHyperFlightRotors","","",26,null],[13,"ResearchBattleCruiserWeaponRefit","","",26,null],[13,"ResearchBlink","","",26,null],[13,"ResearchBurrow","","",26,null],[13,"ResearchCentrifugalHooks","","",26,null],[13,"ResearchCharge","","",26,null],[13,"ResearchChitinousPlating","","",26,null],[13,"ResearchCombatShield","","",26,null],[13,"ResearchConcussiveShells","","",26,null],[13,"ResearchDrillingClaws","","",26,null],[13,"ResearchExtendedThermalLance","","",26,null],[13,"ResearchGlialRegeneration","","",26,null],[13,"ResearchGraviticBooster","","",26,null],[13,"ResearchGraviticDrive","","",26,null],[13,"ResearchGroovedSpines","","",26,null],[13,"ResearchHighCapacityFuelTanks","","",26,null],[13,"ResearchHisecAutoTracking","","",26,null],[13,"ResearchInfernalPreIgniter","","",26,null],[13,"ResearchInterceptorGravitonCatapult","","",26,null],[13,"ResearchMagFieldLaunchers","","",26,null],[13,"ResearchMuscularAugments","","",26,null],[13,"ResearchNeoSteelFrame","","",26,null],[13,"ResearchNeuralParasite","","",26,null],[13,"ResearchPathogenGlands","","",26,null],[13,"ResearchPersonalCloaking","","",26,null],[13,"ResearchPhoenixAnionPulseCrystals","","",26,null],[13,"ResearchPneumatizedCarapace","","",26,null],[13,"ResearchProtossAirArmor","","",26,null],[13,"ResearchProtossAirArmorLevel1","","",26,null],[13,"ResearchProtossAirArmorLevel2","","",26,null],[13,"ResearchProtossAirArmorLevel3","","",26,null],[13,"ResearchProtossAirWeapons","","",26,null],[13,"ResearchProtossAirWeaponsLevel1","","",26,null],[13,"ResearchProtossAirWeaponsLevel2","","",26,null],[13,"ResearchProtossAirWeaponsLevel3","","",26,null],[13,"ResearchProtossGroundArmor","","",26,null],[13,"ResearchProtossGroundArmorLevel1","","",26,null],[13,"ResearchProtossGroundArmorLevel2","","",26,null],[13,"ResearchProtossGroundArmorLevel3","","",26,null],[13,"ResearchProtossGroundWeapons","","",26,null],[13,"ResearchProtossGroundWeaponsLevel1","","",26,null],[13,"ResearchProtossGroundWeaponsLevel2","","",26,null],[13,"ResearchProtossGroundWeaponsLevel3","","",26,null],[13,"ResearchProtossShields","","",26,null],[13,"ResearchProtossShieldsLevel1","","",26,null],[13,"ResearchProtossShieldsLevel2","","",26,null],[13,"ResearchProtossShieldsLevel3","","",26,null],[13,"ResearchPsiStorm","","",26,null],[13,"ResearchRavenCorvidReactor","","",26,null],[13,"ResearchRavenRecalibratedExplosives","","",26,null],[13,"ResearchShadowStrike","","",26,null],[13,"ResearchStimpack","","",26,null],[13,"ResearchTerranInfantryArmor","","",26,null],[13,"ResearchTerranInfantryArmorLevel1","","",26,null],[13,"ResearchTerranInfantryArmorLevel2","","",26,null],[13,"ResearchTerranInfantryArmorLevel3","","",26,null],[13,"ResearchTerranInfantryWeapons","","",26,null],[13,"ResearchTerranInfantryWeaponsLevel1","","",26,null],[13,"ResearchTerranInfantryWeaponsLevel2","","",26,null],[13,"ResearchTerranInfantryWeaponsLevel3","","",26,null],[13,"ResearchTerranShipWeapons","","",26,null],[13,"ResearchTerranShipWeaponsLevel1","","",26,null],[13,"ResearchTerranShipWeaponsLevel2","","",26,null],[13,"ResearchTerranShipWeaponsLevel3","","",26,null],[13,"ResearchTerranStructureArmorUpgrade","","",26,null],[13,"ResearchTerranVehicleAndShipPlating","","",26,null],[13,"ResearchTerranVehicleAndShipPlatingLevel1","","",26,null],[13,"ResearchTerranVehicleAndShipPlatingLevel2","","",26,null],[13,"ResearchTerranVehicleAndShipPlatingLevel3","","",26,null],[13,"ResearchTerranVehicleWeapons","","",26,null],[13,"ResearchTerranVehicleWeaponsLevel1","","",26,null],[13,"ResearchTerranVehicleWeaponsLevel2","","",26,null],[13,"ResearchTerranVehicleWeaponsLevel3","","",26,null],[13,"ResearchTunnelingClaws","","",26,null],[13,"ResearchWarpGate","","",26,null],[13,"ResearchZergFlyerArmor","","",26,null],[13,"ResearchZergFlyerArmorLevel1","","",26,null],[13,"ResearchZergFlyerArmorLevel2","","",26,null],[13,"ResearchZergFlyerArmorLevel3","","",26,null],[13,"ResearchZergFlyerAttack","","",26,null],[13,"ResearchZergFlyerAttackLevel1","","",26,null],[13,"ResearchZergFlyerAttackLevel2","","",26,null],[13,"ResearchZergFlyerAttackLevel3","","",26,null],[13,"ResearchZergGroundArmor","","",26,null],[13,"ResearchZergGroundArmorLevel1","","",26,null],[13,"ResearchZergGroundArmorLevel2","","",26,null],[13,"ResearchZergGroundArmorLevel3","","",26,null],[13,"ResearchZerglingAdrenalGlands","","",26,null],[13,"ResearchZerglingMetabolicBoost","","",26,null],[13,"ResearchZergMeleeWeapons","","",26,null],[13,"ResearchZergMeleeWeaponsLevel1","","",26,null],[13,"ResearchZergMeleeWeaponsLevel2","","",26,null],[13,"ResearchZergMeleeWeaponsLevel3","","",26,null],[13,"ResearchZergMissileWeapons","","",26,null],[13,"ResearchZergMissileWeaponsLevel1","","",26,null],[13,"ResearchZergMissileWeaponsLevel2","","",26,null],[13,"ResearchZergMissileWeaponsLevel3","","",26,null],[13,"ScanMove","","",26,null],[13,"Stop","","",26,null],[13,"StopBuilding","","",26,null],[13,"StopAndCheer","","",26,null],[13,"StopAndDance","","",26,null],[13,"StopRedirect","","",26,null],[13,"StopStop","","",26,null],[13,"TrainWarpAdept","","",26,null],[13,"TrainWarpDarkTemplar","","",26,null],[13,"TrainWarpHighTemplar","","",26,null],[13,"TrainWarpSentry","","",26,null],[13,"TrainWarpStalker","","",26,null],[13,"TrainWarpZealot","","",26,null],[13,"TrainAdept","","",26,null],[13,"TrainBaneling","","",26,null],[13,"TrainBanshee","","",26,null],[13,"TrainBattleCruiser","","",26,null],[13,"TrainCarrier","","",26,null],[13,"TrainColossus","","",26,null],[13,"TrainCorruptor","","",26,null],[13,"TrainCyclone","","",26,null],[13,"TrainDarkTemplar","","",26,null],[13,"TrainDisruptor","","",26,null],[13,"TrainDrone","","",26,null],[13,"TrainGhost","","",26,null],[13,"TrainHellbat","","",26,null],[13,"TrainHellion","","",26,null],[13,"TrainHighTemplar","","",26,null],[13,"TrainHydralisk","","",26,null],[13,"TrainImmortal","","",26,null],[13,"TrainInfestor","","",26,null],[13,"TrainLiberator","","",26,null],[13,"TrainMarauder","","",26,null],[13,"TrainMarine","","",26,null],[13,"TrainMedivac","","",26,null],[13,"TrainMothershipCore","","",26,null],[13,"TrainMutalisk","","",26,null],[13,"TrainObserver","","",26,null],[13,"TrainOracle","","",26,null],[13,"TrainOverlord","","",26,null],[13,"TrainPhoenix","","",26,null],[13,"TrainProbe","","",26,null],[13,"TrainQueen","","",26,null],[13,"TrainRaven","","",26,null],[13,"TrainReaper","","",26,null],[13,"TrainRoach","","",26,null],[13,"TrainScv","","",26,null],[13,"TrainSentry","","",26,null],[13,"TrainSiegeTank","","",26,null],[13,"TrainStalker","","",26,null],[13,"TrainSwarmHost","","",26,null],[13,"TrainTempest","","",26,null],[13,"TrainThor","","",26,null],[13,"TrainUltralisk","","",26,null],[13,"TrainVikingFighter","","",26,null],[13,"TrainViper","","",26,null],[13,"TrainVoidRay","","",26,null],[13,"TrainWarpPrism","","",26,null],[13,"TrainWidowMine","","",26,null],[13,"TrainZealot","","",26,null],[13,"TrainZergling","","",26,null],[13,"UnloadAll","","",26,null],[13,"UnloadAllAt","","",26,null],[13,"UnloadAllAtMedivac","","",26,null],[13,"UnloadAllAtOverlord","","",26,null],[13,"UnloadAllAtWarpPrism","","",26,null],[13,"UnloadAllBunker","","",26,null],[13,"UnloadAllCommandCenter","","",26,null],[13,"UnloadAllNydusNetwork","","",26,null],[13,"UnloadAllNydusWorm","","",26,null],[13,"UnloadUnitBunker","","",26,null],[13,"UnloadUnitCommandCenter","","",26,null],[13,"UnloadUnitMedivac","","",26,null],[13,"UnloadUnitNydusNetwork","","",26,null],[13,"UnloadUnitOverlord","","",26,null],[13,"UnloadUnitWarpPrism","","",26,null],[4,"ActionTarget","","action target",null,null],[13,"UnitTag","","target a unit with this action",27,null],[13,"Location","","target a location with this action",27,null],[4,"Alliance","","relationship to this player",null,null],[13,"Domestic","","unit is owned by this player",28,null],[13,"Ally","","unit is an ally of this player",28,null],[13,"Neutral","","unit is neutral to this player (usually a non-player unit)",28,null],[13,"Enemy","","unit is an enemy of the player",28,null],[4,"Buff","","list of known StarCraft II buffs",null,null],[13,"GravitonBeam","","",29,null],[13,"GhostCloak","","",29,null],[13,"BansheeCloak","","",29,null],[13,"PowerUserWarpable","","",29,null],[13,"QueenSpawnLarvaTimer","","",29,null],[13,"GhostHoldFire","","",29,null],[13,"GhostHoldFireB","","",29,null],[13,"EmpDeCloak","","",29,null],[13,"FungalGrowth","","",29,null],[13,"GuardianShield","","",29,null],[13,"TimeWarpProduction","","",29,null],[13,"NeuralParasite","","",29,null],[13,"StimpackMarauder","","",29,null],[13,"SupplyDrop","","",29,null],[13,"Stimpack","","",29,null],[13,"PsiStorm","","",29,null],[13,"CloakFieldEffect","","",29,null],[13,"Charging","","",29,null],[13,"Slow","","",29,null],[13,"Contaminated","","",29,null],[13,"BlindingCloudStructure","","",29,null],[13,"OracleRevelation","","",29,null],[13,"ViperConsumeStructure","","",29,null],[13,"BlindingCloud","","",29,null],[13,"MedivacSpeedBoost","","",29,null],[13,"Purify","","",29,null],[13,"OracleWeapon","","",29,null],[13,"ImmortalOverload","","",29,null],[13,"Lockon","","",29,null],[13,"SeekerMissile","","",29,null],[13,"TemporalField","","",29,null],[13,"VoidRaySwarmDamageBoost","","",29,null],[13,"OracleStasisTrapTarget","","",29,null],[13,"ParasiticBomb","","",29,null],[13,"ParasiticBombUnitKu","","",29,null],[13,"ParasiticBombSecondaryUnitSearch","","",29,null],[13,"LurkerHoldFireB","","",29,null],[13,"ChannelSnipeCombat","","",29,null],[13,"TempestDisruptionBlastStunBehavior","","",29,null],[13,"CarryMineralFieldMinerals","","",29,null],[13,"CarryHighYieldMineralFieldMinerals","","",29,null],[13,"CarryHarvestableVespeneGeyserGas","","",29,null],[13,"CarryHarvestableVespeneGeyserGasProtoss","","",29,null],[13,"CarryHarvestableVespeneGeyserGasZerg","","",29,null],[4,"Difficulty","","difficulty setting for built-in StarCraft II AI",null,null],[13,"VeryEasy","","",30,null],[13,"Easy","","",30,null],[13,"Medium","","",30,null],[13,"MediumHard","","",30,null],[13,"Hard","","",30,null],[13,"Harder","","",30,null],[13,"VeryHard","","",30,null],[13,"CheatVision","","",30,null],[13,"CheatMoney","","",30,null],[13,"CheatInsane","","",30,null],[4,"DisplayType","","whether the unit is shown on screen or not",null,null],[13,"Visible","","unit will be visible",31,null],[13,"Snapshot","","unit is represented by a snapshot in fog-of-war",31,null],[13,"Hidden","","unit will be hidden to enemies",31,null],[4,"Map","","different ways of specifying a map",null,null],[13,"LocalMap","","specify a map on the local filesystem",32,null],[13,"BlizzardMap","","specify a known blizzard map",32,null],[4,"PlayerSetup","","settings for players",null,null],[13,"Computer","","add a built-in StarCraft II bot with the given race and difficulty",33,null],[12,"race","sc2::PlayerSetup","race of the computer",33,null],[12,"difficulty","","difficulty setting",33,null],[13,"Player","sc2","add a user-controlled player",33,null],[12,"race","sc2::PlayerSetup","race of the player",33,null],[4,"Race","sc2","race of the player",null,null],[13,"Terran","","",34,null],[13,"Zerg","","",34,null],[13,"Protoss","","",34,null],[13,"Random","","",34,null],[4,"SpatialAction","","feature layer action",null,null],[13,"UnitCommand","","issue a feature layer unit command",35,null],[12,"ability","sc2::SpatialAction","ability to invoke",35,null],[12,"target","","target of command",35,null],[12,"queued","","whether this action should replace or queue behind other actions",35,null],[13,"CameraMove","sc2","move the camera to a new location",35,null],[12,"center_minimap","sc2::SpatialAction","minimap location",35,null],[13,"SelectPoint","sc2","select a point on the screen",35,null],[12,"select_screen","sc2::SpatialAction","point in screen coordinates",35,null],[12,"select_type","","point selection type",35,null],[13,"SelectRect","sc2","select a rectangle on the screen",35,null],[12,"select_screen","sc2::SpatialAction","rectangle in screen coordinates",35,null],[12,"select_add","","whether selection is additive",35,null],[4,"UnitType","sc2","list of known StarCraft II unit types",null,null],[13,"Invalid","","",36,null],[13,"TerranArmory","","",36,null],[13,"TerranAutoTurret","","",36,null],[13,"TerranBanshee","","",36,null],[13,"TerranBarracks","","",36,null],[13,"TerranBarracksFlying","","",36,null],[13,"TerranBarracksReactor","","",36,null],[13,"TerranBarracksTechLab","","",36,null],[13,"TerranBattleCruiser","","",36,null],[13,"TerranBunker","","",36,null],[13,"TerranCommandCenter","","",36,null],[13,"TerranCommandCenterFlying","","",36,null],[13,"TerranCyclone","","",36,null],[13,"TerranEngineeringBay","","",36,null],[13,"TerranFactory","","",36,null],[13,"TerranFactoryFlying","","",36,null],[13,"TerranFactoryReactor","","",36,null],[13,"TerranFactoryTechLab","","",36,null],[13,"TerranFusionCore","","",36,null],[13,"TerranGhost","","",36,null],[13,"TerranGhostAcademy","","",36,null],[13,"TerranHellion","","",36,null],[13,"TerranHellionTank","","",36,null],[13,"TerranLiberator","","",36,null],[13,"TerranLiberatorAg","","",36,null],[13,"TerranMarauder","","",36,null],[13,"TerranMarine","","",36,null],[13,"TerranMedivac","","",36,null],[13,"TerranMissileTurret","","",36,null],[13,"TerranMule","","",36,null],[13,"TerranOrbitalCommand","","",36,null],[13,"TerranOrbitalCommandFlying","","",36,null],[13,"TerranPlanetaryFortress","","",36,null],[13,"TerranRaven","","",36,null],[13,"TerranReaper","","",36,null],[13,"TerranRefinery","","",36,null],[13,"TerranScv","","",36,null],[13,"TerranSensorTower","","",36,null],[13,"TerranSiegeTank","","",36,null],[13,"TerranSiegeTankSieged","","",36,null],[13,"TerranStarport","","",36,null],[13,"TerranStarportFlying","","",36,null],[13,"TerranStarportReactor","","",36,null],[13,"TerranStarportTechLab","","",36,null],[13,"TerranSupplyDepot","","",36,null],[13,"TerranSupplyDepotLowered","","",36,null],[13,"TerranThor","","",36,null],[13,"TerranThorAp","","",36,null],[13,"TerranVikingAssault","","",36,null],[13,"TerranVikingFighter","","",36,null],[13,"TerranWidowMine","","",36,null],[13,"TerranWidowMineBurrowed","","",36,null],[13,"TerranKd8Charge","","",36,null],[13,"TerranNuke","","",36,null],[13,"TerranPointDefenseDrone","","",36,null],[13,"TerranReactor","","",36,null],[13,"TerranTechLab","","",36,null],[13,"ZergBaneling","","",36,null],[13,"ZergBanelingBurrowed","","",36,null],[13,"ZergBanelingCocoon","","",36,null],[13,"ZergBanelingNest","","",36,null],[13,"ZergBroodling","","",36,null],[13,"ZergBroodlord","","",36,null],[13,"ZergBroodlordCocoon","","",36,null],[13,"ZergChangeling","","",36,null],[13,"ZergChangelingMarine","","",36,null],[13,"ZergChangelingMarineShield","","",36,null],[13,"ZergChangelingZealot","","",36,null],[13,"ZergChangelingZergling","","",36,null],[13,"ZergChangelingZerglingWings","","",36,null],[13,"ZergCorruptor","","",36,null],[13,"ZergCreepTumor","","",36,null],[13,"ZergCreepTumorBurrowed","","",36,null],[13,"ZergCreepTumorQueen","","",36,null],[13,"ZergDrone","","",36,null],[13,"ZergDroneBurrowed","","",36,null],[13,"ZergEgg","","",36,null],[13,"ZergEvolutionChamber","","",36,null],[13,"ZergExtractor","","",36,null],[13,"ZergGreaterSpire","","",36,null],[13,"ZergHatchery","","",36,null],[13,"ZergHive","","",36,null],[13,"ZergHydralisk","","",36,null],[13,"ZergHydraliskBurrowed","","",36,null],[13,"ZergHydraliskDen","","",36,null],[13,"ZergInfestationPit","","",36,null],[13,"ZergInfestedTerransEgg","","",36,null],[13,"ZergInfestor","","",36,null],[13,"ZergInfestorBurrowed","","",36,null],[13,"ZergInfestorTerran","","",36,null],[13,"ZergLair","","",36,null],[13,"ZergLarva","","",36,null],[13,"ZergLocustMp","","",36,null],[13,"ZergLocustMpFlying","","",36,null],[13,"ZergLurkerDenMp","","",36,null],[13,"ZergLurkerMp","","",36,null],[13,"ZergLurkerMpBurrowed","","",36,null],[13,"ZergLurkerMpEgg","","",36,null],[13,"ZergMutalisk","","",36,null],[13,"ZergNydusCanal","","",36,null],[13,"ZergNydusNetwork","","",36,null],[13,"ZergOverlord","","",36,null],[13,"ZergOverlordCocoon","","",36,null],[13,"ZergOverlordTransport","","",36,null],[13,"ZergOverseer","","",36,null],[13,"ZergQueen","","",36,null],[13,"ZergQueenBurrowed","","",36,null],[13,"ZergRavager","","",36,null],[13,"ZergRavagerCocoon","","",36,null],[13,"ZergRoach","","",36,null],[13,"ZergRoachBurrowed","","",36,null],[13,"ZergRoachWarren","","",36,null],[13,"ZergSpawningPool","","",36,null],[13,"ZergSpineCrawler","","",36,null],[13,"ZergSpineCrawlerUprooted","","",36,null],[13,"ZergSpire","","",36,null],[13,"ZergSporeCrawler","","",36,null],[13,"ZergSporeCrawlerUprooted","","",36,null],[13,"ZergSwarmHostBurrowedMp","","",36,null],[13,"ZergSwarmHostMp","","",36,null],[13,"ZergTransportOverlordCocoon","","",36,null],[13,"ZergUltralisk","","",36,null],[13,"ZergUltraliskCavern","","",36,null],[13,"ZergViper","","",36,null],[13,"ZergZergling","","",36,null],[13,"ZergZerglingBurrowed","","",36,null],[13,"ZergParasiticBombDummy","","",36,null],[13,"ProtossAdept","","",36,null],[13,"ProtossAdeptPhaseShift","","",36,null],[13,"ProtossArchon","","",36,null],[13,"ProtossAssimilator","","",36,null],[13,"ProtossCarrier","","",36,null],[13,"ProtossColossus","","",36,null],[13,"ProtossCyberneticScore","","",36,null],[13,"ProtossDarkShrine","","",36,null],[13,"ProtossDarkTemplar","","",36,null],[13,"ProtossDisruptor","","",36,null],[13,"ProtossDisruptorPhased","","",36,null],[13,"ProtossFleetBeacon","","",36,null],[13,"ProtossForge","","",36,null],[13,"ProtossGateway","","",36,null],[13,"ProtossHighTemplar","","",36,null],[13,"ProtossImmortal","","",36,null],[13,"ProtossInterceptor","","",36,null],[13,"ProtossMothership","","",36,null],[13,"ProtossMothershipCore","","",36,null],[13,"ProtossNexus","","",36,null],[13,"ProtossObserver","","",36,null],[13,"ProtossOracle","","",36,null],[13,"ProtossOracleStasisTrap","","",36,null],[13,"ProtossPhoenix","","",36,null],[13,"ProtossPhotonCannon","","",36,null],[13,"ProtossProbe","","",36,null],[13,"ProtossPylon","","",36,null],[13,"ProtossPylonOvercharged","","",36,null],[13,"ProtossRoboticsBay","","",36,null],[13,"ProtossRoboticsFacility","","",36,null],[13,"ProtossSentry","","",36,null],[13,"ProtossStalker","","",36,null],[13,"ProtossStargate","","",36,null],[13,"ProtossTempest","","",36,null],[13,"ProtossTemplarArchive","","",36,null],[13,"ProtossTwilightCouncil","","",36,null],[13,"ProtossVoidRay","","",36,null],[13,"ProtossWarpGate","","",36,null],[13,"ProtossWarpPrism","","",36,null],[13,"ProtossWarpPrismPhasing","","",36,null],[13,"ProtossZealot","","",36,null],[13,"NeutralCollapsibleRockTowerDebris","","",36,null],[13,"NeutralCollapsibleRockTowerDiagonal","","",36,null],[13,"NeutralCollapsibleRockTowerPushUnit","","",36,null],[13,"NeutralCollapsibleTerranTowerDebris","","",36,null],[13,"NeutralCollapsibleTerranTowerDiagonal","","",36,null],[13,"NeutralCollapsibleTerranTowerPushUnit","","",36,null],[13,"NeutralCollapsibleTerranTowerPushUnitRampLeft","","",36,null],[13,"NeutralCollapsibleTerranTowerPushUnitRampRight","","",36,null],[13,"NeutralCollapsibleTerranTowerRampLeft","","",36,null],[13,"NeutralCollapsibleTerranTowerRampRight","","",36,null],[13,"NeutralDebrisRampLeft","","",36,null],[13,"NeutralDebrisRampRight","","",36,null],[13,"NeutralDestructibleDebris6x6","","",36,null],[13,"NeutralDestructibleDebrisRampDiagonalHugeBlur","","",36,null],[13,"NeutralDestructibleDebrisRampDiagonalHugeUlbr","","",36,null],[13,"NeutralDestructableRock6x6","","",36,null],[13,"NeutralDestructibleRockEx1DiagonalHugeBlur","","",36,null],[13,"NeutralForceField","","",36,null],[13,"NeutralKarakFemale","","",36,null],[13,"NeutralLabMineralField","","",36,null],[13,"NeutralLabMineralField750","","",36,null],[13,"NeutralMineralField","","",36,null],[13,"NeutralMineralField750","","",36,null],[13,"NeutralProtossVespeneGeyser","","",36,null],[13,"NeutralRichMineralField","","",36,null],[13,"NeutralRichMineralField750","","",36,null],[13,"NeutralScantipede","","",36,null],[13,"NeutralSpacePlatformGeyser","","",36,null],[13,"NeutralUnbuildableBricksDestructible","","",36,null],[13,"NeutralUnbuildablePlatesDestructible","","",36,null],[13,"NeutralUtilityBot","","",36,null],[13,"NeutralVespeneGeyser","","",36,null],[13,"NeutralXelNagaTower","","",36,null],[4,"Upgrade","","a list of known StarCraft II upgrades",null,null],[13,"CarrierLaunchSpeedUpgrade","","",37,null],[13,"GlialReconstitution","","",37,null],[13,"TunnelingClaws","","",37,null],[13,"ChitinousPlating","","",37,null],[13,"HiSecAutoTracking","","",37,null],[13,"TerranBuildingArmor","","",37,null],[13,"TerranInfantryWeaponsLevel1","","",37,null],[13,"TerranInfantryWeaponsLevel2","","",37,null],[13,"TerranInfantryWeaponsLevel3","","",37,null],[13,"NeoSteelFrame","","",37,null],[13,"TerranInfantryArmorsLevel1","","",37,null],[13,"TerranInfantryArmorsLevel2","","",37,null],[13,"TerranInfantryArmorsLevel3","","",37,null],[13,"Stimpack","","",37,null],[13,"ShieldWall","","",37,null],[13,"PunisherGrenades","","",37,null],[13,"HighCapacityBarrels","","",37,null],[13,"BansheeCloak","","",37,null],[13,"RavenCorvidReactor","","",37,null],[13,"PersonalCloaking","","",37,null],[13,"TerranVehicleWeaponsLevel1","","",37,null],[13,"TerranVehicleWeaponsLevel2","","",37,null],[13,"TerranVehicleWeaponsLevel3","","",37,null],[13,"TerranShipWeaponsLevel1","","",37,null],[13,"TerranShipWeaponsLevel2","","",37,null],[13,"TerranShipWeaponsLevel3","","",37,null],[13,"ProtossGroundWeaponsLevel1","","",37,null],[13,"ProtossGroundWeaponsLevel2","","",37,null],[13,"ProtossGroundWeaponsLevel3","","",37,null],[13,"ProtossGroundArmorsLevel1","","",37,null],[13,"ProtossGroundArmorsLevel2","","",37,null],[13,"ProtossGroundArmorsLevel3","","",37,null],[13,"ProtossShieldsLevel1","","",37,null],[13,"ProtossShieldsLevel2","","",37,null],[13,"ProtossShieldsLevel3","","",37,null],[13,"ObserverGraviticBooster","","",37,null],[13,"GraviticDrive","","",37,null],[13,"ExtendedThermalLance","","",37,null],[13,"PsiStormTech","","",37,null],[13,"ZergMeleeWeaponsLevel1","","",37,null],[13,"ZergMeleeWeaponsLevel2","","",37,null],[13,"ZergMeleeWeaponsLevel3","","",37,null],[13,"ZergGroundArmorsLevel1","","",37,null],[13,"ZergGroundArmorsLevel2","","",37,null],[13,"ZergGroundArmorsLevel3","","",37,null],[13,"ZergMissileWeaponsLevel1","","",37,null],[13,"ZergMissileWeaponsLevel2","","",37,null],[13,"ZergMissileWeaponsLevel3","","",37,null],[13,"OverlordSpeed","","",37,null],[13,"Burrow","","",37,null],[13,"ZerglingAttackSpeed","","",37,null],[13,"ZerglingMovementSpeed","","",37,null],[13,"ZergFlyerWeaponsLevel1","","",37,null],[13,"ZergFlyerWeaponsLevel2","","",37,null],[13,"ZergFlyerWeaponsLevel3","","",37,null],[13,"ZergFlyerArmorsLevel1","","",37,null],[13,"ZergFlyerArmorsLevel2","","",37,null],[13,"ZergFlyerArmorsLevel3","","",37,null],[13,"InfestorEnergyUpgrade","","",37,null],[13,"CentrificalHooks","","",37,null],[13,"BattleCruiserEnableSpecializations","","",37,null],[13,"ProtossAirWeaponsLevel1","","",37,null],[13,"ProtossAirWeaponsLevel2","","",37,null],[13,"ProtossAirWeaponsLevel3","","",37,null],[13,"ProtossAirArmorsLevel1","","",37,null],[13,"ProtossAirArmorsLevel2","","",37,null],[13,"ProtossAirArmorsLevel3","","",37,null],[13,"WarpGateResearch","","",37,null],[13,"Charge","","",37,null],[13,"BlinkTech","","",37,null],[13,"PhoenixRangeUpgrade","","",37,null],[13,"NeuralParasite","","",37,null],[13,"TerranVehicleAndShipArmorsLevel1","","",37,null],[13,"TerranVehicleAndShipArmorsLevel2","","",37,null],[13,"TerranVehicleAndShipArmorsLevel3","","",37,null],[13,"DrillClaws","","",37,null],[13,"AdeptPiercingAttack","","",37,null],[13,"MagFieldLaunchers","","",37,null],[13,"EvolveGroovedSpines","","",37,null],[13,"EvolveMuscularAugments","","",37,null],[13,"BansheeSpeed","","",37,null],[13,"RavenRecalibratedExplosives","","",37,null],[13,"MedivacIncreaseSpeedBoost","","",37,null],[13,"LiberatorAgRangeUpgrade","","",37,null],[13,"DarkTemplarBlinkUpgrade","","",37,null],[4,"Visibility","","visibility of a point on the terrain",null,null],[13,"Hidden","","",38,null],[13,"Fogged","","",38,null],[13,"Visible","","",38,null],[13,"FullHidden","","",38,null],[4,"Command","","a command to issue to the game instance",null,null],[13,"Action","","command a set of units",39,null],[12,"units","sc2::Command","units to command",39,null],[12,"ability","","ability to trigger",39,null],[12,"target","","ability target",39,null],[4,"DebugCommand","sc2","a debug command for the game",null,null],[13,"DebugText","","shows debug text in the game instance",40,null],[12,"text","sc2::DebugCommand","text to display",40,null],[12,"target","","target in screen or world space",40,null],[12,"color","","color of the text",40,null],[13,"DebugLine","sc2","shows a debug line in the game from p1 to p2",40,null],[12,"p1","sc2::DebugCommand","starting point of the line",40,null],[12,"p2","","ending point of the line",40,null],[12,"color","","color of the line",40,null],[13,"DebugBox","sc2","shows a debug box in the game defined by corners min and max",40,null],[12,"min","sc2::DebugCommand","minimum corner of the box",40,null],[12,"max","","maximum corner of the box",40,null],[12,"color","","color of the box",40,null],[13,"DebugSphere","sc2","shows a debug sphere in the game",40,null],[12,"center","sc2::DebugCommand","center of the sphere",40,null],[12,"radius","","radius of the sphere",40,null],[12,"color","","color of the sphere",40,null],[4,"DebugTextTarget","sc2","target for debugging text",null,null],[13,"Screen","","screen coordinates for debug text",41,null],[13,"World","","world coordinates for debug text",41,null],[4,"GameEvent","","an event from the game",null,null],[13,"UnitDestroyed","","a unit was destroyed",42,null],[13,"UnitCreated","","a unit was created",42,null],[13,"UnitIdle","","a unit does not have any orders",42,null],[13,"UnitDetected","","a unit was detected",42,null],[13,"UpgradeCompleted","","an upgrade completed",42,null],[13,"BuildingCompleted","","a unit finished constructing a building",42,null],[13,"NydusWormsDetected","","number of nydus worms detected",42,null],[13,"NukesDetected","","number of nukes launched",42,null],[4,"MeleeSoma","","soma designed to pit two bots against each other in Sc2 games",null,null],[13,"Init","","wait for axon to gather effector, inputs, and outputs",43,null],[13,"Setup","","fetch player info in order to decide how many instances it needs",43,null],[13,"Launch","","gather instances and game ports, then transition to PVP or PVC",43,null],[13,"PlayerVsPlayer","","coordinate two instances for player vs player",43,null],[13,"PlayerVsComputer","","coordinate one instance for player vs the built-in Sc2 AI",43,null],[13,"Completed","","melee suite is exhausted and organelle is awaiting shutdown",43,null],[4,"MeleeSuite","","suite of games to choose from when pitting bots against each other",null,null],[13,"OneAndDone","","play one game with the given settings",44,null],[13,"EndlessRepeat","","repeat this game indefinitely",44,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",45,null],[13,"Organelle","","organelle glue",45,null],[13,"Io","","link io errors",45,null],[13,"UrlParseError","","link to url parse errors",45,null],[13,"Protobuf","","link to protobuf errors",45,null],[13,"ExeNotSpecified","","exe was not supplied to the coordinator",45,null],[13,"ExeDoesNotExist","","exe supplied to the coordinator does not exist",45,null],[13,"ClientOpenFailed","","client failed to open connection to the game instance",45,null],[13,"ClientSendFailed","","client failed to send a message to the game instance",45,null],[13,"ClientRecvFailed","","client failed to receive a message from the game instance",45,null],[13,"ClientCloseFailed","","client failed to initiate close handshake",45,null],[13,"GameErrors","","errors received from game instance",45,null],[13,"AgentError","","an error occurred in agent callback",45,null],[13,"InvalidProtobuf","","invalid protobuf data from game instance",45,null],[4,"Signal","","the messages that can be sent between Sc2 capable",null,null],[13,"GetInstancePool","","get instances pool",46,null],[13,"GetPortsPool","","get the ports pool",46,null],[13,"LaunchInstance","","launch an instance",46,null],[13,"InstancePool","","the pool of instances to choose from",46,null],[13,"PortsPool","","the pool of game ports to choose from (num_instances / 2)",46,null],[13,"ProvideInstance","","allow a soma to take complete control of an instance",46,null],[13,"ClientAttemptConnect","","attempt to connect to instance",46,null],[13,"ClientConnected","","internal-use client successfully connected to instance",46,null],[13,"ClientReceive","","internal-use client received a message",46,null],[13,"ClientRequest","","send some request to the game instance",46,null],[13,"ClientResult","","result of transaction with game instance",46,null],[13,"ClientTimeout","","internal-use message used to indicate when a transaction has timed out",46,null],[13,"ClientDisconnect","","disconnect from the instance",46,null],[13,"ClientClosed","","client has closed",46,null],[13,"ClientError","","client encountered a websocket error",46,null],[13,"Ready","","agent is ready for a game to begin",46,null],[13,"RequestPlayerSetup","","request player setup",46,null],[13,"PlayerSetup","","respond with player setup",46,null],[13,"CreateGame","","create a game with the given settings and list of participants",46,null],[13,"GameCreated","","game was created with the given settings",46,null],[13,"GameReady","","notify agents that game is ready to join with the given player setup",46,null],[13,"JoinGame","","join an existing game",46,null],[13,"FetchGameData","","fetch the game data",46,null],[13,"GameDataReady","","game data ready",46,null],[13,"RequestUpdateInterval","","request update interval from player",46,null],[13,"UpdateInterval","","respond with update interval in game steps",46,null],[13,"GameStarted","","game started",46,null],[13,"Observe","","observe the game state",46,null],[13,"Observation","","current game state",46,null],[13,"Command","","issue a command to the game instance",46,null],[13,"DebugCommand","","issue a debug command to the game instance",46,null],[13,"UpdateComplete","","notify the stepper that the soma is done updating",46,null],[13,"GameEnded","","game ended",46,null],[4,"Synapse","","defines the roles that govern how connections between somas are made",null,null],[13,"Launcher","","launches new game instances or kills them",47,null],[13,"InstancePool","","broadcasts idle instances",47,null],[13,"InstanceProvider","","provides instances to clients",47,null],[13,"Controller","","controls agents or observer",47,null],[13,"Agent","","provides agent interface to bots",47,null],[13,"Client","","provides client interface to agents or observers",47,null],[13,"Observer","","observes game state",47,null],[11,"organelle","","compose an agent organelle to interact with a controller soma",23,{"inputs":[{"name":"t"}],"output":{"generics":["organelle"],"name":"result"}}],[11,"update","","",23,{"inputs":[{"name":"self"},{"name":"axon"},{"generics":["signal","synapse"],"name":"impulse"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","create a new request with the default timeout",48,{"inputs":[{"name":"request"}],"output":{"name":"self"}}],[11,"with_timeout","","create a new request with a custom timeout",48,{"inputs":[{"name":"request"},{"name":"duration"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sheath","","create a new computer soma",25,{"inputs":[{"name":"race"},{"name":"difficulty"}],"output":{"generics":["sheath"],"name":"result"}}],[11,"update","","",25,{"inputs":[{"name":"self"},{"name":"axon"},{"generics":["signal","synapse"],"name":"impulse"}],"output":{"name":"result"}}],[11,"sheath","","create a new Ctrl-C breaker soma",49,{"inputs":[],"output":{"generics":["sheath"],"name":"result"}}],[11,"update","","",49,{"inputs":[{"name":"self"},{"name":"axon"},{"generics":["signal","synapse"],"name":"impulse"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"ability"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"ability"}}],[11,"hash","","",26,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"actiontarget"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"action"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"spatialaction"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"buff"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"buff"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"map"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"portset"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"gameports"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"gamesettings"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"terraininfo"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"difficulty"}}],[11,"to_proto","","convert to protobuf data",30,{"inputs":[{"name":"self"}],"output":{"name":"difficulty"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"playersetup"}}],[11,"is_player","","does the PlayerSetup represent a player",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_computer","","does the PlayerSetup represent a computer",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"score"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unit"}}],[11,"mark_dead","","mark this unit as dead",13,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"unittype"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"unittype"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"displaytype"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"displaytype"}}],[11,"from","","",31,{"inputs":[{"name":"displaytype"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"alliance"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"alliance"}}],[11,"from","","",28,{"inputs":[{"name":"alliance"}],"output":{"name":"self"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"upgrade"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"rect2"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"abilitydata"}}],[11,"get_generalized_ability","","get the most generalized id of the ability",0,{"inputs":[{"name":"self"}],"output":{"name":"ability"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unittypedata"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"upgradedata"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"buffdata"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"effect"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"powersource"}}],[11,"from","","",8,{"inputs":[{"name":"powersource"}],"output":{"name":"self"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"debugtexttarget"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"debugcommand"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"gameevent"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"gamedata"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"mapstate"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"gamestate"}}],[11,"filter_units","","filter all units based on a custom condition",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["rc"],"name":"vec"}}],[11,"has_creep","","check if the given point contains creep",18,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"get_visibility","","get the visibility of the given point for the current player",18,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"visibility"}}],[11,"is_pathable","","whether the given point on the terrain is pathable",18,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"is_placable","","whether the given point on the terrain is buildable",18,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"bool"}}],[11,"get_terrain_height","","returns the terrain height of the given point",18,{"inputs":[{"name":"self"},{"name":"point2"}],"output":{"name":"f32"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"framedata"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"sheath","","create a launcher from settings",50,{"inputs":[{"name":"launchersettings"}],"output":{"generics":["sheath"],"name":"result"}}],[11,"create_game_ports","","create a set of ports for multiplayer games",50,{"inputs":[{"name":"self"}],"output":{"name":"gameports"}}],[11,"update","","",50,{"inputs":[{"name":"self"},{"name":"axon"},{"generics":["signal","synapse"],"name":"impulse"}],"output":{"name":"result"}}],[11,"organelle","","create the melee organelle",43,{"inputs":[{"name":"meleesettings"}],"output":{"generics":["organelle"],"name":"result"}}],[11,"update","","",43,{"inputs":[{"name":"self"},{"name":"axon"},{"name":"impulse"}],"output":{"name":"result"}}],[6,"Color","","color type for debug commands",null,null],[6,"Point2","","2D point used to specify location",null,null],[6,"Point3","","3D point used to specify location",null,null],[6,"Tag","","unique tag for a unit instance",null,null],[6,"Vector2","","2D vector used to specify direction",null,null],[6,"Vector3","","3D vector used to specify direction",null,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[6,"Axon","","type alias for an Sc2 Axon",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",51,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",22,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",22,null],[11,"with_chain","","",22,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",22,null],[11,"iter","","",22,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",22,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",22,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",22,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",22,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",22,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",22,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",22,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",22,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",22,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",22,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",22,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",22,{"inputs":[{"name":"protobuferror"}],"output":{"name":"self"}}],[11,"from","","",22,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",22,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",22,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",22,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",45,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",45,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",45,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",45,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",45,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"synapse"}}],[11,"hash","","",47,null],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"synapse"}],"output":{"name":"bool"}}]],"paths":[[3,"AbilityData"],[3,"Action"],[3,"BuffData"],[3,"Effect"],[3,"GamePorts"],[3,"GameSettings"],[3,"ImageData"],[3,"PortSet"],[3,"PowerSource"],[3,"Rect"],[3,"Rect2"],[3,"Score"],[3,"TerrainInfo"],[3,"Unit"],[3,"UnitTypeData"],[3,"UpgradeData"],[3,"FrameData"],[3,"GameData"],[3,"GameState"],[3,"MapState"],[3,"LauncherSettings"],[3,"MeleeSettings"],[3,"Error"],[4,"AgentSoma"],[4,"ClientResult"],[4,"ComputerSoma"],[4,"Ability"],[4,"ActionTarget"],[4,"Alliance"],[4,"Buff"],[4,"Difficulty"],[4,"DisplayType"],[4,"Map"],[4,"PlayerSetup"],[4,"Race"],[4,"SpatialAction"],[4,"UnitType"],[4,"Upgrade"],[4,"Visibility"],[4,"Command"],[4,"DebugCommand"],[4,"DebugTextTarget"],[4,"GameEvent"],[4,"MeleeSoma"],[4,"MeleeSuite"],[4,"ErrorKind"],[4,"Signal"],[4,"Synapse"],[3,"ClientRequest"],[3,"CtrlcBreakerSoma"],[3,"LauncherSoma"],[8,"ResultExt"]]};
searchIndex["sc2_proto"] = {"doc":"","items":[[0,"common","sc2_proto","",null,null],[3,"AvailableAbility","sc2_proto::common","",null,null],[3,"ImageData","","",null,null],[3,"PointI","","",null,null],[3,"RectangleI","","",null,null],[3,"Point2D","","",null,null],[3,"Point","","",null,null],[3,"Size2DI","","",null,null],[4,"Race","","",null,null],[13,"NoRace","","",0,null],[13,"Terran","","",0,null],[13,"Zerg","","",0,null],[13,"Protoss","","",0,null],[13,"Random","","",0,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"availableability"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"availableability"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"availableability"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"availableability"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"availableability"}}],[11,"default_instance","","",1,{"inputs":[],"output":{"name":"availableability"}}],[11,"clear_ability_id","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ability_id","","",1,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_requires_point","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"has_requires_point","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_requires_point","","",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_requires_point","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",1,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",1,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",1,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",1,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",1,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"availableability"}}],[11,"descriptor_static","","",1,{"inputs":[{"generics":["availableability"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"imagedata"}}],[11,"new","","",2,{"inputs":[],"output":{"name":"imagedata"}}],[11,"default_instance","","",2,{"inputs":[],"output":{"name":"imagedata"}}],[11,"clear_bits_per_pixel","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"has_bits_per_pixel","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_bits_per_pixel","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_bits_per_pixel","","",2,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_size","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"has_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_size","","",2,{"inputs":[{"name":"self"},{"name":"size2di"}],"output":null}],[11,"mut_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"take_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"get_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"clear_data","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data","","",2,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_data","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_data","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_data","","",2,null],[11,"is_initialized","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",2,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",2,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",2,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",2,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",2,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",2,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",2,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",2,{"inputs":[],"output":{"name":"imagedata"}}],[11,"descriptor_static","","",2,{"inputs":[{"generics":["imagedata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"pointi"}}],[11,"new","","",3,{"inputs":[],"output":{"name":"pointi"}}],[11,"default_instance","","",3,{"inputs":[],"output":{"name":"pointi"}}],[11,"clear_x","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"has_x","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_x","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_x","","",3,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_y","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"has_y","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_y","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_y","","",3,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",3,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",3,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",3,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",3,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",3,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",3,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",3,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",3,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",3,{"inputs":[],"output":{"name":"pointi"}}],[11,"descriptor_static","","",3,{"inputs":[{"generics":["pointi"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"rectanglei"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"rectanglei"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rectanglei"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"rectanglei"}}],[11,"new","","",4,{"inputs":[],"output":{"name":"rectanglei"}}],[11,"default_instance","","",4,{"inputs":[],"output":{"name":"rectanglei"}}],[11,"clear_p0","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"has_p0","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_p0","","",4,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":null}],[11,"mut_p0","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"take_p0","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"get_p0","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"clear_p1","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"has_p1","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_p1","","",4,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":null}],[11,"mut_p1","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"take_p1","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"get_p1","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"is_initialized","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",4,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",4,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",4,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",4,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",4,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",4,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",4,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",4,{"inputs":[],"output":{"name":"rectanglei"}}],[11,"descriptor_static","","",4,{"inputs":[{"generics":["rectanglei"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"point2d"}}],[11,"new","","",5,{"inputs":[],"output":{"name":"point2d"}}],[11,"default_instance","","",5,{"inputs":[],"output":{"name":"point2d"}}],[11,"clear_x","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"has_x","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_x","","",5,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_x","","",5,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_y","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"has_y","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_y","","",5,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_y","","",5,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",5,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",5,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",5,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",5,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",5,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",5,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",5,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",5,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",5,{"inputs":[],"output":{"name":"point2d"}}],[11,"descriptor_static","","",5,{"inputs":[{"generics":["point2d"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"point"}}],[11,"new","","",6,{"inputs":[],"output":{"name":"point"}}],[11,"default_instance","","",6,{"inputs":[],"output":{"name":"point"}}],[11,"clear_x","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"has_x","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_x","","",6,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_x","","",6,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_y","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"has_y","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_y","","",6,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_y","","",6,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_z","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"has_z","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_z","","",6,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_z","","",6,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",6,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",6,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",6,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",6,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",6,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",6,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",6,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",6,{"inputs":[],"output":{"name":"point"}}],[11,"descriptor_static","","",6,{"inputs":[{"generics":["point"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"size2di"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"size2di"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"size2di"}}],[11,"new","","",7,{"inputs":[],"output":{"name":"size2di"}}],[11,"default_instance","","",7,{"inputs":[],"output":{"name":"size2di"}}],[11,"clear_x","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"has_x","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_x","","",7,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_x","","",7,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_y","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"has_y","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_y","","",7,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_y","","",7,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",7,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",7,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",7,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",7,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",7,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",7,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",7,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",7,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",7,{"inputs":[],"output":{"name":"size2di"}}],[11,"descriptor_static","","",7,{"inputs":[{"generics":["size2di"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"race"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"value","","",0,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",0,{"inputs":[{"name":"i32"}],"output":{"generics":["race"],"name":"option"}}],[11,"values","","",0,null],[11,"enum_descriptor_static","","",0,{"inputs":[{"generics":["race"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"data","sc2_proto","",null,null],[3,"AbilityData","sc2_proto::data","",null,null],[3,"DamageBonus","","",null,null],[3,"Weapon","","",null,null],[3,"UnitTypeData","","",null,null],[3,"UpgradeData","","",null,null],[3,"BuffData","","",null,null],[4,"AbilityData_Target","","",null,null],[13,"None","","",8,null],[13,"Point","","",8,null],[13,"Unit","","",8,null],[13,"PointOrUnit","","",8,null],[13,"PointOrNone","","",8,null],[4,"Weapon_TargetType","","",null,null],[13,"Ground","","",9,null],[13,"Air","","",9,null],[13,"Any","","",9,null],[4,"Attribute","","",null,null],[13,"Light","","",10,null],[13,"Armored","","",10,null],[13,"Biological","","",10,null],[13,"Mechanical","","",10,null],[13,"Robotic","","",10,null],[13,"Psionic","","",10,null],[13,"Massive","","",10,null],[13,"Structure","","",10,null],[13,"Hover","","",10,null],[13,"Heroic","","",10,null],[13,"Summoned","","",10,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"abilitydata"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"abilitydata"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"abilitydata"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"abilitydata"}}],[11,"new","","",11,{"inputs":[],"output":{"name":"abilitydata"}}],[11,"default_instance","","",11,{"inputs":[],"output":{"name":"abilitydata"}}],[11,"clear_ability_id","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_ability_id","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_link_name","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_link_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_link_name","","",11,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_link_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_link_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_link_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_link_index","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_link_index","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_link_index","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_link_index","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_button_name","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_button_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_button_name","","",11,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_button_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_button_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_button_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_friendly_name","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_friendly_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_friendly_name","","",11,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_friendly_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_friendly_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_friendly_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_hotkey","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_hotkey","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_hotkey","","",11,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_hotkey","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_hotkey","","",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_hotkey","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_remaps_to_ability_id","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_remaps_to_ability_id","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_remaps_to_ability_id","","",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_remaps_to_ability_id","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_available","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_available","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_available","","",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_available","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_target","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target","","",11,{"inputs":[{"name":"self"},{"name":"abilitydata_target"}],"output":null}],[11,"get_target","","",11,{"inputs":[{"name":"self"}],"output":{"name":"abilitydata_target"}}],[11,"clear_allow_minimap","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_allow_minimap","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_allow_minimap","","",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_allow_minimap","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_allow_autocast","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_allow_autocast","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_allow_autocast","","",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_allow_autocast","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_is_building","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_building","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_building","","",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_building","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_footprint_radius","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_footprint_radius","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_footprint_radius","","",11,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_footprint_radius","","",11,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_is_instant_placement","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_instant_placement","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_instant_placement","","",11,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_instant_placement","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_cast_range","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cast_range","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cast_range","","",11,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_cast_range","","",11,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",11,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",11,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",11,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",11,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",11,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",11,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",11,{"inputs":[],"output":{"name":"abilitydata"}}],[11,"descriptor_static","","",11,{"inputs":[{"generics":["abilitydata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"abilitydata_target"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"abilitydata_target"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"value","","",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",8,{"inputs":[{"name":"i32"}],"output":{"generics":["abilitydata_target"],"name":"option"}}],[11,"values","","",8,null],[11,"enum_descriptor_static","","",8,{"inputs":[{"generics":["abilitydata_target"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"damagebonus"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"damagebonus"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"damagebonus"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"damagebonus"}}],[11,"new","","",12,{"inputs":[],"output":{"name":"damagebonus"}}],[11,"default_instance","","",12,{"inputs":[],"output":{"name":"damagebonus"}}],[11,"clear_attribute","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"has_attribute","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_attribute","","",12,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[11,"get_attribute","","",12,{"inputs":[{"name":"self"}],"output":{"name":"attribute"}}],[11,"clear_bonus","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"has_bonus","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_bonus","","",12,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_bonus","","",12,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",12,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",12,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",12,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",12,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",12,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",12,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",12,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",12,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",12,{"inputs":[],"output":{"name":"damagebonus"}}],[11,"descriptor_static","","",12,{"inputs":[{"generics":["damagebonus"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"weapon"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"weapon"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"weapon"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"weapon"}}],[11,"new","","",13,{"inputs":[],"output":{"name":"weapon"}}],[11,"default_instance","","",13,{"inputs":[],"output":{"name":"weapon"}}],[11,"clear_field_type","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",13,{"inputs":[{"name":"self"},{"name":"weapon_targettype"}],"output":null}],[11,"get_field_type","","",13,{"inputs":[{"name":"self"}],"output":{"name":"weapon_targettype"}}],[11,"clear_damage","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_damage","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_damage","","",13,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_damage","","",13,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_damage_bonus","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"set_damage_bonus","","",13,{"inputs":[{"name":"self"},{"generics":["damagebonus"],"name":"repeatedfield"}],"output":null}],[11,"mut_damage_bonus","","",13,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_damage_bonus","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["damagebonus"],"name":"repeatedfield"}}],[11,"get_damage_bonus","","",13,null],[11,"clear_attacks","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_attacks","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_attacks","","",13,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_attacks","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_range","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_range","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_range","","",13,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_range","","",13,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_speed","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"has_speed","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_speed","","",13,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_speed","","",13,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",13,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",13,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",13,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",13,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",13,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",13,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",13,{"inputs":[],"output":{"name":"weapon"}}],[11,"descriptor_static","","",13,{"inputs":[{"generics":["weapon"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"weapon_targettype"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"weapon_targettype"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"value","","",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",9,{"inputs":[{"name":"i32"}],"output":{"generics":["weapon_targettype"],"name":"option"}}],[11,"values","","",9,null],[11,"enum_descriptor_static","","",9,{"inputs":[{"generics":["weapon_targettype"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"unittypedata"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"unittypedata"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unittypedata"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"unittypedata"}}],[11,"new","","",14,{"inputs":[],"output":{"name":"unittypedata"}}],[11,"default_instance","","",14,{"inputs":[],"output":{"name":"unittypedata"}}],[11,"clear_unit_id","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_id","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_id","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_id","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_name","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",14,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_available","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_available","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_available","","",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_available","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_cargo_size","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cargo_size","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cargo_size","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_cargo_size","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_mineral_cost","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_mineral_cost","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_mineral_cost","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_mineral_cost","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_vespene_cost","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_vespene_cost","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_vespene_cost","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_vespene_cost","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_food_required","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_required","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_required","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_food_required","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_food_provided","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_provided","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_provided","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_food_provided","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_ability_id","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_ability_id","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_race","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_race","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_race","","",14,{"inputs":[{"name":"self"},{"name":"race"}],"output":null}],[11,"get_race","","",14,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"clear_build_time","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_build_time","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_build_time","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_build_time","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_has_vespene","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_has_vespene","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_has_vespene","","",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_has_vespene","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_has_minerals","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_has_minerals","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_has_minerals","","",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_has_minerals","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_tech_alias","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"set_tech_alias","","",14,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"vec"}],"output":null}],[11,"mut_tech_alias","","",14,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_tech_alias","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"vec"}}],[11,"get_tech_alias","","",14,null],[11,"clear_unit_alias","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_alias","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_alias","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_alias","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_tech_requirement","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_tech_requirement","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_tech_requirement","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_tech_requirement","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_require_attached","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_require_attached","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_require_attached","","",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_require_attached","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_attributes","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"set_attributes","","",14,{"inputs":[{"name":"self"},{"generics":["attribute"],"name":"vec"}],"output":null}],[11,"mut_attributes","","",14,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_attributes","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["attribute"],"name":"vec"}}],[11,"get_attributes","","",14,null],[11,"clear_movement_speed","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_movement_speed","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_movement_speed","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_movement_speed","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_armor","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"has_armor","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_armor","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_armor","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_weapons","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"set_weapons","","",14,{"inputs":[{"name":"self"},{"generics":["weapon"],"name":"repeatedfield"}],"output":null}],[11,"mut_weapons","","",14,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_weapons","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["weapon"],"name":"repeatedfield"}}],[11,"get_weapons","","",14,null],[11,"is_initialized","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",14,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",14,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",14,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",14,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",14,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",14,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",14,{"inputs":[],"output":{"name":"unittypedata"}}],[11,"descriptor_static","","",14,{"inputs":[{"generics":["unittypedata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"upgradedata"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"upgradedata"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"upgradedata"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"upgradedata"}}],[11,"new","","",15,{"inputs":[],"output":{"name":"upgradedata"}}],[11,"default_instance","","",15,{"inputs":[],"output":{"name":"upgradedata"}}],[11,"clear_upgrade_id","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_upgrade_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_upgrade_id","","",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_upgrade_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_name","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",15,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_mineral_cost","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_mineral_cost","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_mineral_cost","","",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_mineral_cost","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_vespene_cost","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_vespene_cost","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_vespene_cost","","",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_vespene_cost","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_research_time","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_research_time","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_research_time","","",15,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_research_time","","",15,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_ability_id","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_ability_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",15,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",15,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",15,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",15,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",15,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",15,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",15,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",15,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",15,{"inputs":[],"output":{"name":"upgradedata"}}],[11,"descriptor_static","","",15,{"inputs":[{"generics":["upgradedata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"buffdata"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"buffdata"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"buffdata"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"buffdata"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"buffdata"}}],[11,"default_instance","","",16,{"inputs":[],"output":{"name":"buffdata"}}],[11,"clear_buff_id","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"has_buff_id","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_buff_id","","",16,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_buff_id","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_name","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"has_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_name","","",16,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_name","","",16,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",16,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",16,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",16,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",16,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",16,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",16,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",16,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",16,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"buffdata"}}],[11,"descriptor_static","","",16,{"inputs":[{"generics":["buffdata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",16,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"attribute"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"value","","",10,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",10,{"inputs":[{"name":"i32"}],"output":{"generics":["attribute"],"name":"option"}}],[11,"values","","",10,null],[11,"enum_descriptor_static","","",10,{"inputs":[{"generics":["attribute"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"debug","sc2_proto","",null,null],[3,"DebugCommand","sc2_proto::debug","",null,null],[3,"DebugDraw","","",null,null],[3,"Line","","",null,null],[3,"Color","","",null,null],[3,"DebugText","","",null,null],[3,"DebugLine","","",null,null],[3,"DebugBox","","",null,null],[3,"DebugSphere","","",null,null],[3,"DebugCreateUnit","","",null,null],[3,"DebugKillUnit","","",null,null],[3,"DebugTestProcess","","",null,null],[3,"DebugSetScore","","",null,null],[3,"DebugEndGame","","",null,null],[3,"DebugSetUnitValue","","",null,null],[3,"DebugChat","","",null,null],[4,"DebugCommand_oneof_command","","",null,null],[13,"draw","","",17,null],[13,"game_state","","",17,null],[13,"create_unit","","",17,null],[13,"kill_unit","","",17,null],[13,"test_process","","",17,null],[13,"score","","",17,null],[13,"end_game","","",17,null],[13,"unit_value","","",17,null],[13,"chat","","",17,null],[4,"DebugTestProcess_Test","","",null,null],[13,"hang","","",18,null],[13,"crash","","",18,null],[13,"exit","","",18,null],[4,"DebugEndGame_EndResult","","",null,null],[13,"Surrender","","",19,null],[13,"DeclareVictory","","",19,null],[4,"DebugSetUnitValue_UnitValue","","",null,null],[13,"Energy","","",20,null],[13,"Life","","",20,null],[13,"Shields","","",20,null],[4,"DebugGameState","","",null,null],[13,"show_map","","",21,null],[13,"control_enemy","","",21,null],[13,"food","","",21,null],[13,"free","","",21,null],[13,"all_resources","","",21,null],[13,"god","","",21,null],[13,"minerals","","",21,null],[13,"gas","","",21,null],[13,"cooldown","","",21,null],[13,"tech_tree","","",21,null],[13,"upgrade","","",21,null],[13,"fast_build","","",21,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"debugcommand"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"debugcommand"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugcommand"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"debugcommand"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"debugcommand_oneof_command"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"debugcommand_oneof_command"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"debugcommand_oneof_command"}],"output":{"name":"bool"}}],[11,"new","","",22,{"inputs":[],"output":{"name":"debugcommand"}}],[11,"default_instance","","",22,{"inputs":[],"output":{"name":"debugcommand"}}],[11,"clear_draw","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_draw","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_draw","","",22,{"inputs":[{"name":"self"},{"name":"debugdraw"}],"output":null}],[11,"mut_draw","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugdraw"}}],[11,"take_draw","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugdraw"}}],[11,"get_draw","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugdraw"}}],[11,"clear_game_state","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_state","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_state","","",22,{"inputs":[{"name":"self"},{"name":"debuggamestate"}],"output":null}],[11,"get_game_state","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debuggamestate"}}],[11,"clear_create_unit","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_create_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_create_unit","","",22,{"inputs":[{"name":"self"},{"name":"debugcreateunit"}],"output":null}],[11,"mut_create_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugcreateunit"}}],[11,"take_create_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugcreateunit"}}],[11,"get_create_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugcreateunit"}}],[11,"clear_kill_unit","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_kill_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_kill_unit","","",22,{"inputs":[{"name":"self"},{"name":"debugkillunit"}],"output":null}],[11,"mut_kill_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugkillunit"}}],[11,"take_kill_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugkillunit"}}],[11,"get_kill_unit","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugkillunit"}}],[11,"clear_test_process","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_test_process","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_test_process","","",22,{"inputs":[{"name":"self"},{"name":"debugtestprocess"}],"output":null}],[11,"mut_test_process","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugtestprocess"}}],[11,"take_test_process","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugtestprocess"}}],[11,"get_test_process","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugtestprocess"}}],[11,"clear_score","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score","","",22,{"inputs":[{"name":"self"},{"name":"debugsetscore"}],"output":null}],[11,"mut_score","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugsetscore"}}],[11,"take_score","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugsetscore"}}],[11,"get_score","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugsetscore"}}],[11,"clear_end_game","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_end_game","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_end_game","","",22,{"inputs":[{"name":"self"},{"name":"debugendgame"}],"output":null}],[11,"mut_end_game","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugendgame"}}],[11,"take_end_game","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugendgame"}}],[11,"get_end_game","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugendgame"}}],[11,"clear_unit_value","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_value","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_value","","",22,{"inputs":[{"name":"self"},{"name":"debugsetunitvalue"}],"output":null}],[11,"mut_unit_value","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugsetunitvalue"}}],[11,"take_unit_value","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugsetunitvalue"}}],[11,"get_unit_value","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugsetunitvalue"}}],[11,"clear_chat","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"has_chat","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_chat","","",22,{"inputs":[{"name":"self"},{"name":"debugchat"}],"output":null}],[11,"mut_chat","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugchat"}}],[11,"take_chat","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugchat"}}],[11,"get_chat","","",22,{"inputs":[{"name":"self"}],"output":{"name":"debugchat"}}],[11,"is_initialized","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",22,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",22,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",22,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",22,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",22,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",22,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",22,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",22,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",22,{"inputs":[],"output":{"name":"debugcommand"}}],[11,"descriptor_static","","",22,{"inputs":[{"generics":["debugcommand"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",22,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"debugdraw"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"debugdraw"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"debugdraw"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"debugdraw"}}],[11,"new","","",23,{"inputs":[],"output":{"name":"debugdraw"}}],[11,"default_instance","","",23,{"inputs":[],"output":{"name":"debugdraw"}}],[11,"clear_text","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"set_text","","",23,{"inputs":[{"name":"self"},{"generics":["debugtext"],"name":"repeatedfield"}],"output":null}],[11,"mut_text","","",23,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_text","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["debugtext"],"name":"repeatedfield"}}],[11,"get_text","","",23,null],[11,"clear_lines","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"set_lines","","",23,{"inputs":[{"name":"self"},{"generics":["debugline"],"name":"repeatedfield"}],"output":null}],[11,"mut_lines","","",23,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_lines","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["debugline"],"name":"repeatedfield"}}],[11,"get_lines","","",23,null],[11,"clear_boxes","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"set_boxes","","",23,{"inputs":[{"name":"self"},{"generics":["debugbox"],"name":"repeatedfield"}],"output":null}],[11,"mut_boxes","","",23,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_boxes","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["debugbox"],"name":"repeatedfield"}}],[11,"get_boxes","","",23,null],[11,"clear_spheres","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"set_spheres","","",23,{"inputs":[{"name":"self"},{"generics":["debugsphere"],"name":"repeatedfield"}],"output":null}],[11,"mut_spheres","","",23,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_spheres","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["debugsphere"],"name":"repeatedfield"}}],[11,"get_spheres","","",23,null],[11,"is_initialized","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",23,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",23,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",23,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",23,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",23,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",23,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",23,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",23,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",23,{"inputs":[],"output":{"name":"debugdraw"}}],[11,"descriptor_static","","",23,{"inputs":[{"generics":["debugdraw"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"line"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"line"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"line"}}],[11,"new","","",24,{"inputs":[],"output":{"name":"line"}}],[11,"default_instance","","",24,{"inputs":[],"output":{"name":"line"}}],[11,"clear_p0","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"has_p0","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_p0","","",24,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_p0","","",24,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_p0","","",24,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_p0","","",24,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_p1","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"has_p1","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_p1","","",24,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_p1","","",24,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_p1","","",24,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_p1","","",24,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"is_initialized","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",24,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",24,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",24,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",24,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",24,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",24,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",24,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",24,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",24,{"inputs":[],"output":{"name":"line"}}],[11,"descriptor_static","","",24,{"inputs":[{"generics":["line"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",24,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"color"}}],[11,"new","","",25,{"inputs":[],"output":{"name":"color"}}],[11,"default_instance","","",25,{"inputs":[],"output":{"name":"color"}}],[11,"clear_r","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"has_r","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_r","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_r","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_g","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"has_g","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_g","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_g","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_b","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"has_b","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_b","","",25,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_b","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",25,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",25,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",25,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",25,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",25,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",25,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",25,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",25,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",25,{"inputs":[],"output":{"name":"color"}}],[11,"descriptor_static","","",25,{"inputs":[{"generics":["color"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",25,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"debugtext"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"debugtext"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"debugtext"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"debugtext"}}],[11,"new","","",26,{"inputs":[],"output":{"name":"debugtext"}}],[11,"default_instance","","",26,{"inputs":[],"output":{"name":"debugtext"}}],[11,"clear_color","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"has_color","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_color","","",26,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[11,"mut_color","","",26,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"take_color","","",26,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"get_color","","",26,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"clear_text","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"has_text","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_text","","",26,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_text","","",26,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_text","","",26,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_text","","",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_virtual_pos","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"has_virtual_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_virtual_pos","","",26,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_virtual_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_virtual_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_virtual_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_world_pos","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"has_world_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_world_pos","","",26,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_world_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_world_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_world_pos","","",26,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"is_initialized","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",26,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",26,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",26,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",26,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",26,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",26,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",26,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",26,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",26,{"inputs":[],"output":{"name":"debugtext"}}],[11,"descriptor_static","","",26,{"inputs":[{"generics":["debugtext"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",26,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"debugline"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"debugline"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"debugline"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"debugline"}}],[11,"new","","",27,{"inputs":[],"output":{"name":"debugline"}}],[11,"default_instance","","",27,{"inputs":[],"output":{"name":"debugline"}}],[11,"clear_color","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"has_color","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_color","","",27,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[11,"mut_color","","",27,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"take_color","","",27,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"get_color","","",27,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"clear_line","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"has_line","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_line","","",27,{"inputs":[{"name":"self"},{"name":"line"}],"output":null}],[11,"mut_line","","",27,{"inputs":[{"name":"self"}],"output":{"name":"line"}}],[11,"take_line","","",27,{"inputs":[{"name":"self"}],"output":{"name":"line"}}],[11,"get_line","","",27,{"inputs":[{"name":"self"}],"output":{"name":"line"}}],[11,"is_initialized","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",27,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",27,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",27,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",27,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",27,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",27,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",27,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",27,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",27,{"inputs":[],"output":{"name":"debugline"}}],[11,"descriptor_static","","",27,{"inputs":[{"generics":["debugline"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",27,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"debugbox"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"debugbox"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"debugbox"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"debugbox"}}],[11,"new","","",28,{"inputs":[],"output":{"name":"debugbox"}}],[11,"default_instance","","",28,{"inputs":[],"output":{"name":"debugbox"}}],[11,"clear_color","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_color","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_color","","",28,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[11,"mut_color","","",28,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"take_color","","",28,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"get_color","","",28,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"clear_min","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_min","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_min","","",28,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_min","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_min","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_min","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_max","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"has_max","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_max","","",28,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_max","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_max","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_max","","",28,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"is_initialized","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",28,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",28,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",28,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",28,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",28,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",28,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",28,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",28,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",28,{"inputs":[],"output":{"name":"debugbox"}}],[11,"descriptor_static","","",28,{"inputs":[{"generics":["debugbox"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",28,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"debugsphere"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"debugsphere"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"debugsphere"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"debugsphere"}}],[11,"new","","",29,{"inputs":[],"output":{"name":"debugsphere"}}],[11,"default_instance","","",29,{"inputs":[],"output":{"name":"debugsphere"}}],[11,"clear_color","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"has_color","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_color","","",29,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[11,"mut_color","","",29,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"take_color","","",29,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"get_color","","",29,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"clear_p","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"has_p","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_p","","",29,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_p","","",29,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_p","","",29,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_p","","",29,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_r","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"has_r","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_r","","",29,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_r","","",29,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",29,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",29,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",29,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",29,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",29,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",29,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",29,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",29,{"inputs":[],"output":{"name":"debugsphere"}}],[11,"descriptor_static","","",29,{"inputs":[{"generics":["debugsphere"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"debugcreateunit"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"debugcreateunit"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"debugcreateunit"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"debugcreateunit"}}],[11,"new","","",30,{"inputs":[],"output":{"name":"debugcreateunit"}}],[11,"default_instance","","",30,{"inputs":[],"output":{"name":"debugcreateunit"}}],[11,"clear_unit_type","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_type","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_owner","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"has_owner","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_owner","","",30,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_owner","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_pos","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"has_pos","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_pos","","",30,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":null}],[11,"mut_pos","","",30,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"take_pos","","",30,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"get_pos","","",30,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"clear_quantity","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quantity","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quantity","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_quantity","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",30,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",30,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",30,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",30,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",30,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",30,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",30,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",30,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",30,{"inputs":[],"output":{"name":"debugcreateunit"}}],[11,"descriptor_static","","",30,{"inputs":[{"generics":["debugcreateunit"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",30,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"debugkillunit"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"debugkillunit"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"debugkillunit"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"debugkillunit"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"debugkillunit"}}],[11,"default_instance","","",31,{"inputs":[],"output":{"name":"debugkillunit"}}],[11,"clear_tag","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"set_tag","","",31,{"inputs":[{"name":"self"},{"generics":["u64"],"name":"vec"}],"output":null}],[11,"mut_tag","","",31,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_tag","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"vec"}}],[11,"get_tag","","",31,null],[11,"is_initialized","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",31,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",31,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",31,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",31,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",31,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",31,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",31,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",31,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"debugkillunit"}}],[11,"descriptor_static","","",31,{"inputs":[{"generics":["debugkillunit"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",31,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"debugtestprocess"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"debugtestprocess"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"debugtestprocess"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"debugtestprocess"}}],[11,"new","","",32,{"inputs":[],"output":{"name":"debugtestprocess"}}],[11,"default_instance","","",32,{"inputs":[],"output":{"name":"debugtestprocess"}}],[11,"clear_test","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"has_test","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_test","","",32,{"inputs":[{"name":"self"},{"name":"debugtestprocess_test"}],"output":null}],[11,"get_test","","",32,{"inputs":[{"name":"self"}],"output":{"name":"debugtestprocess_test"}}],[11,"clear_delay_ms","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"has_delay_ms","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_delay_ms","","",32,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_delay_ms","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",32,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",32,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",32,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",32,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",32,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",32,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",32,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",32,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",32,{"inputs":[],"output":{"name":"debugtestprocess"}}],[11,"descriptor_static","","",32,{"inputs":[{"generics":["debugtestprocess"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",32,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"debugtestprocess_test"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"debugtestprocess_test"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"value","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",18,{"inputs":[{"name":"i32"}],"output":{"generics":["debugtestprocess_test"],"name":"option"}}],[11,"values","","",18,null],[11,"enum_descriptor_static","","",18,{"inputs":[{"generics":["debugtestprocess_test"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"debugsetscore"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"debugsetscore"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"debugsetscore"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"debugsetscore"}}],[11,"new","","",33,{"inputs":[],"output":{"name":"debugsetscore"}}],[11,"default_instance","","",33,{"inputs":[],"output":{"name":"debugsetscore"}}],[11,"clear_score","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score","","",33,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_score","","",33,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",33,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",33,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",33,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",33,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",33,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",33,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",33,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",33,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",33,{"inputs":[],"output":{"name":"debugsetscore"}}],[11,"descriptor_static","","",33,{"inputs":[{"generics":["debugsetscore"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"debugendgame"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"debugendgame"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"debugendgame"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"debugendgame"}}],[11,"new","","",34,{"inputs":[],"output":{"name":"debugendgame"}}],[11,"default_instance","","",34,{"inputs":[],"output":{"name":"debugendgame"}}],[11,"clear_end_result","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"has_end_result","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_end_result","","",34,{"inputs":[{"name":"self"},{"name":"debugendgame_endresult"}],"output":null}],[11,"get_end_result","","",34,{"inputs":[{"name":"self"}],"output":{"name":"debugendgame_endresult"}}],[11,"is_initialized","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",34,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",34,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",34,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",34,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",34,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",34,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",34,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",34,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",34,{"inputs":[],"output":{"name":"debugendgame"}}],[11,"descriptor_static","","",34,{"inputs":[{"generics":["debugendgame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",34,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"debugendgame_endresult"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"debugendgame_endresult"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"value","","",19,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",19,{"inputs":[{"name":"i32"}],"output":{"generics":["debugendgame_endresult"],"name":"option"}}],[11,"values","","",19,null],[11,"enum_descriptor_static","","",19,{"inputs":[{"generics":["debugendgame_endresult"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"debugsetunitvalue"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"debugsetunitvalue"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"debugsetunitvalue"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"debugsetunitvalue"}}],[11,"new","","",35,{"inputs":[],"output":{"name":"debugsetunitvalue"}}],[11,"default_instance","","",35,{"inputs":[],"output":{"name":"debugsetunitvalue"}}],[11,"clear_unit_value","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_value","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_value","","",35,{"inputs":[{"name":"self"},{"name":"debugsetunitvalue_unitvalue"}],"output":null}],[11,"get_unit_value","","",35,{"inputs":[{"name":"self"}],"output":{"name":"debugsetunitvalue_unitvalue"}}],[11,"clear_value","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"has_value","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_value","","",35,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_value","","",35,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_unit_tag","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_tag","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_tag","","",35,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_unit_tag","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"is_initialized","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",35,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",35,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",35,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",35,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",35,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",35,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",35,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",35,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",35,{"inputs":[],"output":{"name":"debugsetunitvalue"}}],[11,"descriptor_static","","",35,{"inputs":[{"generics":["debugsetunitvalue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",35,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"debugsetunitvalue_unitvalue"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"debugsetunitvalue_unitvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"value","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",20,{"inputs":[{"name":"i32"}],"output":{"generics":["debugsetunitvalue_unitvalue"],"name":"option"}}],[11,"values","","",20,null],[11,"enum_descriptor_static","","",20,{"inputs":[{"generics":["debugsetunitvalue_unitvalue"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"debugchat"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"debugchat"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"debugchat"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"debugchat"}}],[11,"new","","",36,{"inputs":[],"output":{"name":"debugchat"}}],[11,"default_instance","","",36,{"inputs":[],"output":{"name":"debugchat"}}],[11,"clear_message","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"has_message","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_message","","",36,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_message","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_message","","",36,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_message","","",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",36,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",36,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",36,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",36,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",36,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",36,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",36,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",36,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",36,{"inputs":[],"output":{"name":"debugchat"}}],[11,"descriptor_static","","",36,{"inputs":[{"generics":["debugchat"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",36,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",36,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"debuggamestate"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"debuggamestate"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"value","","",21,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",21,{"inputs":[{"name":"i32"}],"output":{"generics":["debuggamestate"],"name":"option"}}],[11,"values","","",21,null],[11,"enum_descriptor_static","","",21,{"inputs":[{"generics":["debuggamestate"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"error","sc2_proto","",null,null],[4,"ActionResult","sc2_proto::error","",null,null],[13,"Success","","",37,null],[13,"NotSupported","","",37,null],[13,"Error","","",37,null],[13,"CantQueueThatOrder","","",37,null],[13,"Retry","","",37,null],[13,"Cooldown","","",37,null],[13,"QueueIsFull","","",37,null],[13,"RallyQueueIsFull","","",37,null],[13,"NotEnoughMinerals","","",37,null],[13,"NotEnoughVespene","","",37,null],[13,"NotEnoughTerrazine","","",37,null],[13,"NotEnoughCustom","","",37,null],[13,"NotEnoughFood","","",37,null],[13,"FoodUsageImpossible","","",37,null],[13,"NotEnoughLife","","",37,null],[13,"NotEnoughShields","","",37,null],[13,"NotEnoughEnergy","","",37,null],[13,"LifeSuppressed","","",37,null],[13,"ShieldsSuppressed","","",37,null],[13,"EnergySuppressed","","",37,null],[13,"NotEnoughCharges","","",37,null],[13,"CantAddMoreCharges","","",37,null],[13,"TooMuchMinerals","","",37,null],[13,"TooMuchVespene","","",37,null],[13,"TooMuchTerrazine","","",37,null],[13,"TooMuchCustom","","",37,null],[13,"TooMuchFood","","",37,null],[13,"TooMuchLife","","",37,null],[13,"TooMuchShields","","",37,null],[13,"TooMuchEnergy","","",37,null],[13,"MustTargetUnitWithLife","","",37,null],[13,"MustTargetUnitWithShields","","",37,null],[13,"MustTargetUnitWithEnergy","","",37,null],[13,"CantTrade","","",37,null],[13,"CantSpend","","",37,null],[13,"CantTargetThatUnit","","",37,null],[13,"CouldntAllocateUnit","","",37,null],[13,"UnitCantMove","","",37,null],[13,"TransportIsHoldingPosition","","",37,null],[13,"BuildTechRequirementsNotMet","","",37,null],[13,"CantFindPlacementLocation","","",37,null],[13,"CantBuildOnThat","","",37,null],[13,"CantBuildTooCloseToDropOff","","",37,null],[13,"CantBuildLocationInvalid","","",37,null],[13,"CantSeeBuildLocation","","",37,null],[13,"CantBuildTooCloseToCreepSource","","",37,null],[13,"CantBuildTooCloseToResources","","",37,null],[13,"CantBuildTooFarFromWater","","",37,null],[13,"CantBuildTooFarFromCreepSource","","",37,null],[13,"CantBuildTooFarFromBuildPowerSource","","",37,null],[13,"CantBuildOnDenseTerrain","","",37,null],[13,"CantTrainTooFarFromTrainPowerSource","","",37,null],[13,"CantLandLocationInvalid","","",37,null],[13,"CantSeeLandLocation","","",37,null],[13,"CantLandTooCloseToCreepSource","","",37,null],[13,"CantLandTooCloseToResources","","",37,null],[13,"CantLandTooFarFromWater","","",37,null],[13,"CantLandTooFarFromCreepSource","","",37,null],[13,"CantLandTooFarFromBuildPowerSource","","",37,null],[13,"CantLandTooFarFromTrainPowerSource","","",37,null],[13,"CantLandOnDenseTerrain","","",37,null],[13,"AddOnTooFarFromBuilding","","",37,null],[13,"MustBuildRefineryFirst","","",37,null],[13,"BuildingIsUnderConstruction","","",37,null],[13,"CantFindDropOff","","",37,null],[13,"CantLoadOtherPlayersUnits","","",37,null],[13,"NotEnoughRoomToLoadUnit","","",37,null],[13,"CantUnloadUnitsThere","","",37,null],[13,"CantWarpInUnitsThere","","",37,null],[13,"CantLoadImmobileUnits","","",37,null],[13,"CantRechargeImmobileUnits","","",37,null],[13,"CantRechargeUnderConstructionUnits","","",37,null],[13,"CantLoadThatUnit","","",37,null],[13,"NoCargoToUnload","","",37,null],[13,"LoadAllNoTargetsFound","","",37,null],[13,"NotWhileOccupied","","",37,null],[13,"CantAttackWithoutAmmo","","",37,null],[13,"CantHoldAnyMoreAmmo","","",37,null],[13,"TechRequirementsNotMet","","",37,null],[13,"MustLockdownUnitFirst","","",37,null],[13,"MustTargetUnit","","",37,null],[13,"MustTargetInventory","","",37,null],[13,"MustTargetVisibleUnit","","",37,null],[13,"MustTargetVisibleLocation","","",37,null],[13,"MustTargetWalkableLocation","","",37,null],[13,"MustTargetPawnableUnit","","",37,null],[13,"YouCantControlThatUnit","","",37,null],[13,"YouCantIssueCommandsToThatUnit","","",37,null],[13,"MustTargetResources","","",37,null],[13,"RequiresHealTarget","","",37,null],[13,"RequiresRepairTarget","","",37,null],[13,"NoItemsToDrop","","",37,null],[13,"CantHoldAnyMoreItems","","",37,null],[13,"CantHoldThat","","",37,null],[13,"TargetHasNoInventory","","",37,null],[13,"CantDropThisItem","","",37,null],[13,"CantMoveThisItem","","",37,null],[13,"CantPawnThisUnit","","",37,null],[13,"MustTargetCaster","","",37,null],[13,"CantTargetCaster","","",37,null],[13,"MustTargetOuter","","",37,null],[13,"CantTargetOuter","","",37,null],[13,"MustTargetYourOwnUnits","","",37,null],[13,"CantTargetYourOwnUnits","","",37,null],[13,"MustTargetFriendlyUnits","","",37,null],[13,"CantTargetFriendlyUnits","","",37,null],[13,"MustTargetNeutralUnits","","",37,null],[13,"CantTargetNeutralUnits","","",37,null],[13,"MustTargetEnemyUnits","","",37,null],[13,"CantTargetEnemyUnits","","",37,null],[13,"MustTargetAirUnits","","",37,null],[13,"CantTargetAirUnits","","",37,null],[13,"MustTargetGroundUnits","","",37,null],[13,"CantTargetGroundUnits","","",37,null],[13,"MustTargetStructures","","",37,null],[13,"CantTargetStructures","","",37,null],[13,"MustTargetLightUnits","","",37,null],[13,"CantTargetLightUnits","","",37,null],[13,"MustTargetArmoredUnits","","",37,null],[13,"CantTargetArmoredUnits","","",37,null],[13,"MustTargetBiologicalUnits","","",37,null],[13,"CantTargetBiologicalUnits","","",37,null],[13,"MustTargetHeroicUnits","","",37,null],[13,"CantTargetHeroicUnits","","",37,null],[13,"MustTargetRoboticUnits","","",37,null],[13,"CantTargetRoboticUnits","","",37,null],[13,"MustTargetMechanicalUnits","","",37,null],[13,"CantTargetMechanicalUnits","","",37,null],[13,"MustTargetPsionicUnits","","",37,null],[13,"CantTargetPsionicUnits","","",37,null],[13,"MustTargetMassiveUnits","","",37,null],[13,"CantTargetMassiveUnits","","",37,null],[13,"MustTargetMissile","","",37,null],[13,"CantTargetMissile","","",37,null],[13,"MustTargetWorkerUnits","","",37,null],[13,"CantTargetWorkerUnits","","",37,null],[13,"MustTargetEnergyCapableUnits","","",37,null],[13,"CantTargetEnergyCapableUnits","","",37,null],[13,"MustTargetShieldCapableUnits","","",37,null],[13,"CantTargetShieldCapableUnits","","",37,null],[13,"MustTargetFlyers","","",37,null],[13,"CantTargetFlyers","","",37,null],[13,"MustTargetBuriedUnits","","",37,null],[13,"CantTargetBuriedUnits","","",37,null],[13,"MustTargetCloakedUnits","","",37,null],[13,"CantTargetCloakedUnits","","",37,null],[13,"MustTargetUnitsInAStasisField","","",37,null],[13,"CantTargetUnitsInAStasisField","","",37,null],[13,"MustTargetUnderConstructionUnits","","",37,null],[13,"CantTargetUnderConstructionUnits","","",37,null],[13,"MustTargetDeadUnits","","",37,null],[13,"CantTargetDeadUnits","","",37,null],[13,"MustTargetRevivableUnits","","",37,null],[13,"CantTargetRevivableUnits","","",37,null],[13,"MustTargetHiddenUnits","","",37,null],[13,"CantTargetHiddenUnits","","",37,null],[13,"CantRechargeOtherPlayersUnits","","",37,null],[13,"MustTargetHallucinations","","",37,null],[13,"CantTargetHallucinations","","",37,null],[13,"MustTargetInvulnerableUnits","","",37,null],[13,"CantTargetInvulnerableUnits","","",37,null],[13,"MustTargetDetectedUnits","","",37,null],[13,"CantTargetDetectedUnits","","",37,null],[13,"CantTargetUnitWithEnergy","","",37,null],[13,"CantTargetUnitWithShields","","",37,null],[13,"MustTargetUncommandableUnits","","",37,null],[13,"CantTargetUncommandableUnits","","",37,null],[13,"MustTargetPreventDefeatUnits","","",37,null],[13,"CantTargetPreventDefeatUnits","","",37,null],[13,"MustTargetPreventRevealUnits","","",37,null],[13,"CantTargetPreventRevealUnits","","",37,null],[13,"MustTargetPassiveUnits","","",37,null],[13,"CantTargetPassiveUnits","","",37,null],[13,"MustTargetStunnedUnits","","",37,null],[13,"CantTargetStunnedUnits","","",37,null],[13,"MustTargetSummonedUnits","","",37,null],[13,"CantTargetSummonedUnits","","",37,null],[13,"MustTargetUser1","","",37,null],[13,"CantTargetUser1","","",37,null],[13,"MustTargetUnstoppableUnits","","",37,null],[13,"CantTargetUnstoppableUnits","","",37,null],[13,"MustTargetResistantUnits","","",37,null],[13,"CantTargetResistantUnits","","",37,null],[13,"MustTargetDazedUnits","","",37,null],[13,"CantTargetDazedUnits","","",37,null],[13,"CantLockdown","","",37,null],[13,"CantMindControl","","",37,null],[13,"MustTargetDestructibles","","",37,null],[13,"CantTargetDestructibles","","",37,null],[13,"MustTargetItems","","",37,null],[13,"CantTargetItems","","",37,null],[13,"NoCalldownAvailable","","",37,null],[13,"WaypointListFull","","",37,null],[13,"MustTargetRace","","",37,null],[13,"CantTargetRace","","",37,null],[13,"MustTargetSimilarUnits","","",37,null],[13,"CantTargetSimilarUnits","","",37,null],[13,"CantFindEnoughTargets","","",37,null],[13,"AlreadySpawningLarva","","",37,null],[13,"CantTargetExhaustedResources","","",37,null],[13,"CantUseMinimap","","",37,null],[13,"CantUseInfoPanel","","",37,null],[13,"OrderQueueIsFull","","",37,null],[13,"CantHarvestThatResource","","",37,null],[13,"HarvestersNotRequired","","",37,null],[13,"AlreadyTargeted","","",37,null],[13,"CantAttackWeaponsDisabled","","",37,null],[13,"CouldntReachTarget","","",37,null],[13,"TargetIsOutOfRange","","",37,null],[13,"TargetIsTooClose","","",37,null],[13,"TargetIsOutOfArc","","",37,null],[13,"CantFindTeleportLocation","","",37,null],[13,"InvalidItemClass","","",37,null],[13,"CantFindCancelOrder","","",37,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"actionresult"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"actionresult"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",37,null],[11,"value","","",37,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",37,{"inputs":[{"name":"i32"}],"output":{"generics":["actionresult"],"name":"option"}}],[11,"values","","",37,null],[11,"enum_descriptor_static","","",37,{"inputs":[{"generics":["actionresult"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",37,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"query","sc2_proto","",null,null],[3,"RequestQuery","sc2_proto::query","",null,null],[3,"ResponseQuery","","",null,null],[3,"RequestQueryPathing","","",null,null],[3,"ResponseQueryPathing","","",null,null],[3,"RequestQueryAvailableAbilities","","",null,null],[3,"ResponseQueryAvailableAbilities","","",null,null],[3,"RequestQueryBuildingPlacement","","",null,null],[3,"ResponseQueryBuildingPlacement","","",null,null],[4,"RequestQueryPathing_oneof_start","","",null,null],[13,"start_pos","","",38,null],[13,"unit_tag","","",38,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"requestquery"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"requestquery"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"requestquery"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"requestquery"}}],[11,"new","","",39,{"inputs":[],"output":{"name":"requestquery"}}],[11,"default_instance","","",39,{"inputs":[],"output":{"name":"requestquery"}}],[11,"clear_pathing","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"set_pathing","","",39,{"inputs":[{"name":"self"},{"generics":["requestquerypathing"],"name":"repeatedfield"}],"output":null}],[11,"mut_pathing","","",39,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_pathing","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["requestquerypathing"],"name":"repeatedfield"}}],[11,"get_pathing","","",39,null],[11,"clear_abilities","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"set_abilities","","",39,{"inputs":[{"name":"self"},{"generics":["requestqueryavailableabilities"],"name":"repeatedfield"}],"output":null}],[11,"mut_abilities","","",39,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_abilities","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["requestqueryavailableabilities"],"name":"repeatedfield"}}],[11,"get_abilities","","",39,null],[11,"clear_placements","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"set_placements","","",39,{"inputs":[{"name":"self"},{"generics":["requestquerybuildingplacement"],"name":"repeatedfield"}],"output":null}],[11,"mut_placements","","",39,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_placements","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["requestquerybuildingplacement"],"name":"repeatedfield"}}],[11,"get_placements","","",39,null],[11,"clear_ignore_resource_requirements","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ignore_resource_requirements","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ignore_resource_requirements","","",39,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_ignore_resource_requirements","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",39,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",39,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",39,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",39,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",39,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",39,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",39,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",39,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",39,{"inputs":[],"output":{"name":"requestquery"}}],[11,"descriptor_static","","",39,{"inputs":[{"generics":["requestquery"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",39,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"responsequery"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"responsequery"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"responsequery"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"responsequery"}}],[11,"new","","",40,{"inputs":[],"output":{"name":"responsequery"}}],[11,"default_instance","","",40,{"inputs":[],"output":{"name":"responsequery"}}],[11,"clear_pathing","","",40,{"inputs":[{"name":"self"}],"output":null}],[11,"set_pathing","","",40,{"inputs":[{"name":"self"},{"generics":["responsequerypathing"],"name":"repeatedfield"}],"output":null}],[11,"mut_pathing","","",40,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_pathing","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["responsequerypathing"],"name":"repeatedfield"}}],[11,"get_pathing","","",40,null],[11,"clear_abilities","","",40,{"inputs":[{"name":"self"}],"output":null}],[11,"set_abilities","","",40,{"inputs":[{"name":"self"},{"generics":["responsequeryavailableabilities"],"name":"repeatedfield"}],"output":null}],[11,"mut_abilities","","",40,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_abilities","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["responsequeryavailableabilities"],"name":"repeatedfield"}}],[11,"get_abilities","","",40,null],[11,"clear_placements","","",40,{"inputs":[{"name":"self"}],"output":null}],[11,"set_placements","","",40,{"inputs":[{"name":"self"},{"generics":["responsequerybuildingplacement"],"name":"repeatedfield"}],"output":null}],[11,"mut_placements","","",40,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_placements","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["responsequerybuildingplacement"],"name":"repeatedfield"}}],[11,"get_placements","","",40,null],[11,"is_initialized","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",40,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",40,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",40,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",40,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",40,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",40,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",40,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",40,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",40,{"inputs":[],"output":{"name":"responsequery"}}],[11,"descriptor_static","","",40,{"inputs":[{"generics":["responsequery"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",40,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",40,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"requestquerypathing"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"requestquerypathing"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"requestquerypathing"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"requestquerypathing"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"requestquerypathing_oneof_start"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"requestquerypathing_oneof_start"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"requestquerypathing_oneof_start"}],"output":{"name":"bool"}}],[11,"new","","",41,{"inputs":[],"output":{"name":"requestquerypathing"}}],[11,"default_instance","","",41,{"inputs":[],"output":{"name":"requestquerypathing"}}],[11,"clear_start_pos","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"has_start_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_start_pos","","",41,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":null}],[11,"mut_start_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"take_start_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"get_start_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"clear_unit_tag","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_tag","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_tag","","",41,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_unit_tag","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_end_pos","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"has_end_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_end_pos","","",41,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":null}],[11,"mut_end_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"take_end_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"get_end_pos","","",41,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"is_initialized","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",41,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",41,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",41,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",41,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",41,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",41,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",41,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",41,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",41,{"inputs":[],"output":{"name":"requestquerypathing"}}],[11,"descriptor_static","","",41,{"inputs":[{"generics":["requestquerypathing"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",41,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"responsequerypathing"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"responsequerypathing"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"responsequerypathing"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"responsequerypathing"}}],[11,"new","","",42,{"inputs":[],"output":{"name":"responsequerypathing"}}],[11,"default_instance","","",42,{"inputs":[],"output":{"name":"responsequerypathing"}}],[11,"clear_distance","","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"has_distance","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_distance","","",42,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_distance","","",42,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",42,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",42,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",42,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",42,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",42,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",42,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",42,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",42,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",42,{"inputs":[],"output":{"name":"responsequerypathing"}}],[11,"descriptor_static","","",42,{"inputs":[{"generics":["responsequerypathing"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",42,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"requestqueryavailableabilities"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"requestqueryavailableabilities"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"requestqueryavailableabilities"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"requestqueryavailableabilities"}}],[11,"new","","",43,{"inputs":[],"output":{"name":"requestqueryavailableabilities"}}],[11,"default_instance","","",43,{"inputs":[],"output":{"name":"requestqueryavailableabilities"}}],[11,"clear_unit_tag","","",43,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_tag","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_tag","","",43,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_unit_tag","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"is_initialized","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",43,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",43,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",43,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",43,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",43,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",43,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",43,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",43,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",43,{"inputs":[],"output":{"name":"requestqueryavailableabilities"}}],[11,"descriptor_static","","",43,{"inputs":[{"generics":["requestqueryavailableabilities"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",43,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"responsequeryavailableabilities"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"responsequeryavailableabilities"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"responsequeryavailableabilities"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"responsequeryavailableabilities"}}],[11,"new","","",44,{"inputs":[],"output":{"name":"responsequeryavailableabilities"}}],[11,"default_instance","","",44,{"inputs":[],"output":{"name":"responsequeryavailableabilities"}}],[11,"clear_abilities","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"set_abilities","","",44,{"inputs":[{"name":"self"},{"generics":["availableability"],"name":"repeatedfield"}],"output":null}],[11,"mut_abilities","","",44,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_abilities","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["availableability"],"name":"repeatedfield"}}],[11,"get_abilities","","",44,null],[11,"clear_unit_tag","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_tag","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_tag","","",44,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_unit_tag","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_unit_type_id","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type_id","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type_id","","",44,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_type_id","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",44,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",44,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",44,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",44,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",44,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",44,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",44,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",44,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",44,{"inputs":[],"output":{"name":"responsequeryavailableabilities"}}],[11,"descriptor_static","","",44,{"inputs":[{"generics":["responsequeryavailableabilities"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",44,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"requestquerybuildingplacement"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"requestquerybuildingplacement"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"requestquerybuildingplacement"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"requestquerybuildingplacement"}}],[11,"new","","",45,{"inputs":[],"output":{"name":"requestquerybuildingplacement"}}],[11,"default_instance","","",45,{"inputs":[],"output":{"name":"requestquerybuildingplacement"}}],[11,"clear_ability_id","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",45,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ability_id","","",45,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_target_pos","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_pos","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_pos","","",45,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":null}],[11,"mut_target_pos","","",45,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"take_target_pos","","",45,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"get_target_pos","","",45,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"clear_placing_unit_tag","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"has_placing_unit_tag","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_placing_unit_tag","","",45,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_placing_unit_tag","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"is_initialized","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",45,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",45,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",45,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",45,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",45,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",45,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",45,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",45,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",45,{"inputs":[],"output":{"name":"requestquerybuildingplacement"}}],[11,"descriptor_static","","",45,{"inputs":[{"generics":["requestquerybuildingplacement"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"responsequerybuildingplacement"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"responsequerybuildingplacement"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"responsequerybuildingplacement"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"responsequerybuildingplacement"}}],[11,"new","","",46,{"inputs":[],"output":{"name":"responsequerybuildingplacement"}}],[11,"default_instance","","",46,{"inputs":[],"output":{"name":"responsequerybuildingplacement"}}],[11,"clear_result","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"has_result","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_result","","",46,{"inputs":[{"name":"self"},{"name":"actionresult"}],"output":null}],[11,"get_result","","",46,{"inputs":[{"name":"self"}],"output":{"name":"actionresult"}}],[11,"is_initialized","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",46,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",46,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",46,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",46,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",46,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",46,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",46,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",46,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",46,{"inputs":[],"output":{"name":"responsequerybuildingplacement"}}],[11,"descriptor_static","","",46,{"inputs":[{"generics":["responsequerybuildingplacement"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",46,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"raw","sc2_proto","",null,null],[3,"StartRaw","sc2_proto::raw","",null,null],[3,"ObservationRaw","","",null,null],[3,"PowerSource","","",null,null],[3,"PlayerRaw","","",null,null],[3,"UnitOrder","","",null,null],[3,"PassengerUnit","","",null,null],[3,"Unit","","",null,null],[3,"MapState","","",null,null],[3,"ActionRaw","","",null,null],[3,"ActionRawUnitCommand","","",null,null],[3,"ActionRawCameraMove","","",null,null],[3,"ActionRawToggleAutocast","","",null,null],[3,"Event","","",null,null],[4,"UnitOrder_oneof_target","","",null,null],[13,"target_world_space_pos","","",47,null],[13,"target_unit_tag","","",47,null],[4,"ActionRaw_oneof_action","","",null,null],[13,"unit_command","","",48,null],[13,"camera_move","","",48,null],[13,"toggle_autocast","","",48,null],[4,"ActionRawUnitCommand_oneof_target","","",null,null],[13,"target_world_space_pos","","",49,null],[13,"target_unit_tag","","",49,null],[4,"DisplayType","","",null,null],[13,"Visible","","",50,null],[13,"Snapshot","","",50,null],[13,"Hidden","","",50,null],[4,"Alliance","","",null,null],[13,"Domestic","","",51,null],[13,"Ally","","",51,null],[13,"Neutral","","",51,null],[13,"Enemy","","",51,null],[4,"CloakState","","",null,null],[13,"Cloaked","","",52,null],[13,"CloakedDetected","","",52,null],[13,"NotCloaked","","",52,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"startraw"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"startraw"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"startraw"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"startraw"}}],[11,"new","","",53,{"inputs":[],"output":{"name":"startraw"}}],[11,"default_instance","","",53,{"inputs":[],"output":{"name":"startraw"}}],[11,"clear_map_size","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_size","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_size","","",53,{"inputs":[{"name":"self"},{"name":"size2di"}],"output":null}],[11,"mut_map_size","","",53,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"take_map_size","","",53,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"get_map_size","","",53,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"clear_pathing_grid","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"has_pathing_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_pathing_grid","","",53,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_pathing_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_pathing_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_pathing_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_terrain_height","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"has_terrain_height","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_terrain_height","","",53,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_terrain_height","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_terrain_height","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_terrain_height","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_placement_grid","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"has_placement_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_placement_grid","","",53,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_placement_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_placement_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_placement_grid","","",53,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_playable_area","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"has_playable_area","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_playable_area","","",53,{"inputs":[{"name":"self"},{"name":"rectanglei"}],"output":null}],[11,"mut_playable_area","","",53,{"inputs":[{"name":"self"}],"output":{"name":"rectanglei"}}],[11,"take_playable_area","","",53,{"inputs":[{"name":"self"}],"output":{"name":"rectanglei"}}],[11,"get_playable_area","","",53,{"inputs":[{"name":"self"}],"output":{"name":"rectanglei"}}],[11,"clear_start_locations","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"set_start_locations","","",53,{"inputs":[{"name":"self"},{"generics":["point2d"],"name":"repeatedfield"}],"output":null}],[11,"mut_start_locations","","",53,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_start_locations","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["point2d"],"name":"repeatedfield"}}],[11,"get_start_locations","","",53,null],[11,"is_initialized","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",53,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",53,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",53,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",53,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",53,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",53,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",53,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",53,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",53,{"inputs":[],"output":{"name":"startraw"}}],[11,"descriptor_static","","",53,{"inputs":[{"generics":["startraw"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",53,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"observationraw"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"observationraw"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"observationraw"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"observationraw"}}],[11,"new","","",54,{"inputs":[],"output":{"name":"observationraw"}}],[11,"default_instance","","",54,{"inputs":[],"output":{"name":"observationraw"}}],[11,"clear_player","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player","","",54,{"inputs":[{"name":"self"},{"name":"playerraw"}],"output":null}],[11,"mut_player","","",54,{"inputs":[{"name":"self"}],"output":{"name":"playerraw"}}],[11,"take_player","","",54,{"inputs":[{"name":"self"}],"output":{"name":"playerraw"}}],[11,"get_player","","",54,{"inputs":[{"name":"self"}],"output":{"name":"playerraw"}}],[11,"clear_units","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"set_units","","",54,{"inputs":[{"name":"self"},{"generics":["unit"],"name":"repeatedfield"}],"output":null}],[11,"mut_units","","",54,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_units","","",54,{"inputs":[{"name":"self"}],"output":{"generics":["unit"],"name":"repeatedfield"}}],[11,"get_units","","",54,null],[11,"clear_map_state","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_state","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_state","","",54,{"inputs":[{"name":"self"},{"name":"mapstate"}],"output":null}],[11,"mut_map_state","","",54,{"inputs":[{"name":"self"}],"output":{"name":"mapstate"}}],[11,"take_map_state","","",54,{"inputs":[{"name":"self"}],"output":{"name":"mapstate"}}],[11,"get_map_state","","",54,{"inputs":[{"name":"self"}],"output":{"name":"mapstate"}}],[11,"clear_event","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"has_event","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_event","","",54,{"inputs":[{"name":"self"},{"name":"event"}],"output":null}],[11,"mut_event","","",54,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"take_event","","",54,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_event","","",54,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"is_initialized","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",54,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",54,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",54,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",54,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",54,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",54,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",54,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",54,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",54,{"inputs":[],"output":{"name":"observationraw"}}],[11,"descriptor_static","","",54,{"inputs":[{"generics":["observationraw"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",54,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"powersource"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"powersource"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"powersource"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"powersource"}}],[11,"new","","",55,{"inputs":[],"output":{"name":"powersource"}}],[11,"default_instance","","",55,{"inputs":[],"output":{"name":"powersource"}}],[11,"clear_pos","","",55,{"inputs":[{"name":"self"}],"output":null}],[11,"has_pos","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_pos","","",55,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_pos","","",55,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_pos","","",55,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_pos","","",55,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_radius","","",55,{"inputs":[{"name":"self"}],"output":null}],[11,"has_radius","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_radius","","",55,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_radius","","",55,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_tag","","",55,{"inputs":[{"name":"self"}],"output":null}],[11,"has_tag","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_tag","","",55,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_tag","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"is_initialized","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",55,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",55,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",55,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",55,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",55,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",55,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",55,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",55,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",55,{"inputs":[],"output":{"name":"powersource"}}],[11,"descriptor_static","","",55,{"inputs":[{"generics":["powersource"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",55,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",55,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"playerraw"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"playerraw"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"playerraw"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"playerraw"}}],[11,"new","","",56,{"inputs":[],"output":{"name":"playerraw"}}],[11,"default_instance","","",56,{"inputs":[],"output":{"name":"playerraw"}}],[11,"clear_power_sources","","",56,{"inputs":[{"name":"self"}],"output":null}],[11,"set_power_sources","","",56,{"inputs":[{"name":"self"},{"generics":["powersource"],"name":"repeatedfield"}],"output":null}],[11,"mut_power_sources","","",56,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_power_sources","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["powersource"],"name":"repeatedfield"}}],[11,"get_power_sources","","",56,null],[11,"clear_camera","","",56,{"inputs":[{"name":"self"}],"output":null}],[11,"has_camera","","",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_camera","","",56,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_camera","","",56,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_camera","","",56,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_camera","","",56,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_upgrade_ids","","",56,{"inputs":[{"name":"self"}],"output":null}],[11,"set_upgrade_ids","","",56,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"vec"}],"output":null}],[11,"mut_upgrade_ids","","",56,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_upgrade_ids","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"vec"}}],[11,"get_upgrade_ids","","",56,null],[11,"is_initialized","","",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",56,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",56,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",56,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",56,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",56,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",56,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",56,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",56,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",56,{"inputs":[],"output":{"name":"playerraw"}}],[11,"descriptor_static","","",56,{"inputs":[{"generics":["playerraw"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",56,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",56,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"unitorder"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"unitorder"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"unitorder"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"unitorder"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"unitorder_oneof_target"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"unitorder_oneof_target"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"unitorder_oneof_target"}],"output":{"name":"bool"}}],[11,"new","","",57,{"inputs":[],"output":{"name":"unitorder"}}],[11,"default_instance","","",57,{"inputs":[],"output":{"name":"unitorder"}}],[11,"clear_ability_id","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",57,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_ability_id","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_target_world_space_pos","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_world_space_pos","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_world_space_pos","","",57,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_target_world_space_pos","","",57,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_target_world_space_pos","","",57,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_target_world_space_pos","","",57,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_target_unit_tag","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_unit_tag","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_unit_tag","","",57,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_target_unit_tag","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_progress","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"has_progress","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_progress","","",57,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_progress","","",57,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",57,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",57,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",57,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",57,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",57,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",57,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",57,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",57,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",57,{"inputs":[],"output":{"name":"unitorder"}}],[11,"descriptor_static","","",57,{"inputs":[{"generics":["unitorder"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",57,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"passengerunit"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"passengerunit"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"passengerunit"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"passengerunit"}}],[11,"new","","",58,{"inputs":[],"output":{"name":"passengerunit"}}],[11,"default_instance","","",58,{"inputs":[],"output":{"name":"passengerunit"}}],[11,"clear_tag","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"has_tag","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_tag","","",58,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_tag","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_health","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"has_health","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_health","","",58,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_health","","",58,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_health_max","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"has_health_max","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_health_max","","",58,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_health_max","","",58,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_shield","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"has_shield","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_shield","","",58,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_shield","","",58,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_energy","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"has_energy","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_energy","","",58,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_energy","","",58,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_unit_type","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type","","",58,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_type","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",58,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",58,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",58,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",58,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",58,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",58,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",58,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",58,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",58,{"inputs":[],"output":{"name":"passengerunit"}}],[11,"descriptor_static","","",58,{"inputs":[{"generics":["passengerunit"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",58,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"unit"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"unit"}}],[11,"new","","",59,{"inputs":[],"output":{"name":"unit"}}],[11,"default_instance","","",59,{"inputs":[],"output":{"name":"unit"}}],[11,"clear_display_type","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_display_type","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_display_type","","",59,{"inputs":[{"name":"self"},{"name":"displaytype"}],"output":null}],[11,"get_display_type","","",59,{"inputs":[{"name":"self"}],"output":{"name":"displaytype"}}],[11,"clear_alliance","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_alliance","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_alliance","","",59,{"inputs":[{"name":"self"},{"name":"alliance"}],"output":null}],[11,"get_alliance","","",59,{"inputs":[{"name":"self"}],"output":{"name":"alliance"}}],[11,"clear_tag","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_tag","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_tag","","",59,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_tag","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_unit_type","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type","","",59,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_type","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_owner","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_owner","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_owner","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_owner","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_pos","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_pos","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_pos","","",59,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_pos","","",59,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_pos","","",59,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_pos","","",59,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"clear_facing","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_facing","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_facing","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_facing","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_radius","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_radius","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_radius","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_radius","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_build_progress","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_build_progress","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_build_progress","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_build_progress","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_cloak","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cloak","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cloak","","",59,{"inputs":[{"name":"self"},{"name":"cloakstate"}],"output":null}],[11,"get_cloak","","",59,{"inputs":[{"name":"self"}],"output":{"name":"cloakstate"}}],[11,"clear_detect_range","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_detect_range","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_detect_range","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_detect_range","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_radar_range","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_radar_range","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_radar_range","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_radar_range","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_is_selected","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_selected","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_selected","","",59,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_selected","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_is_on_screen","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_on_screen","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_on_screen","","",59,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_on_screen","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_is_blip","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_blip","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_blip","","",59,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_blip","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_is_powered","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_powered","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_powered","","",59,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_powered","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_health","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_health","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_health","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_health","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_health_max","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_health_max","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_health_max","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_health_max","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_shield","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_shield","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_shield","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_shield","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_energy","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_energy","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_energy","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_energy","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_mineral_contents","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_mineral_contents","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_mineral_contents","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_mineral_contents","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_vespene_contents","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_vespene_contents","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_vespene_contents","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_vespene_contents","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_is_flying","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_flying","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_flying","","",59,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_flying","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_is_burrowed","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_is_burrowed","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_is_burrowed","","",59,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_is_burrowed","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_orders","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"set_orders","","",59,{"inputs":[{"name":"self"},{"generics":["unitorder"],"name":"repeatedfield"}],"output":null}],[11,"mut_orders","","",59,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_orders","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["unitorder"],"name":"repeatedfield"}}],[11,"get_orders","","",59,null],[11,"clear_add_on_tag","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_add_on_tag","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_add_on_tag","","",59,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_add_on_tag","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_passengers","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"set_passengers","","",59,{"inputs":[{"name":"self"},{"generics":["passengerunit"],"name":"repeatedfield"}],"output":null}],[11,"mut_passengers","","",59,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_passengers","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["passengerunit"],"name":"repeatedfield"}}],[11,"get_passengers","","",59,null],[11,"clear_cargo_space_taken","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cargo_space_taken","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cargo_space_taken","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_cargo_space_taken","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_cargo_space_max","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cargo_space_max","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cargo_space_max","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_cargo_space_max","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_buff_ids","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"set_buff_ids","","",59,{"inputs":[{"name":"self"},{"generics":["u32"],"name":"vec"}],"output":null}],[11,"mut_buff_ids","","",59,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_buff_ids","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"vec"}}],[11,"get_buff_ids","","",59,null],[11,"clear_assigned_harvesters","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_assigned_harvesters","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_assigned_harvesters","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_assigned_harvesters","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_ideal_harvesters","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ideal_harvesters","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ideal_harvesters","","",59,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ideal_harvesters","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_weapon_cooldown","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_weapon_cooldown","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_weapon_cooldown","","",59,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_weapon_cooldown","","",59,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_engaged_target_tag","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"has_engaged_target_tag","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_engaged_target_tag","","",59,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_engaged_target_tag","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"is_initialized","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",59,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",59,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",59,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",59,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",59,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",59,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",59,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",59,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",59,{"inputs":[],"output":{"name":"unit"}}],[11,"descriptor_static","","",59,{"inputs":[{"generics":["unit"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",59,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"mapstate"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"mapstate"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"mapstate"}}],[11,"default","","",60,{"inputs":[],"output":{"name":"mapstate"}}],[11,"new","","",60,{"inputs":[],"output":{"name":"mapstate"}}],[11,"default_instance","","",60,{"inputs":[],"output":{"name":"mapstate"}}],[11,"clear_visibility","","",60,{"inputs":[{"name":"self"}],"output":null}],[11,"has_visibility","","",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_visibility","","",60,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_visibility","","",60,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_visibility","","",60,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_visibility","","",60,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_creep","","",60,{"inputs":[{"name":"self"}],"output":null}],[11,"has_creep","","",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_creep","","",60,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_creep","","",60,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_creep","","",60,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_creep","","",60,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"is_initialized","","",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",60,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",60,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",60,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",60,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",60,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",60,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",60,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",60,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",60,{"inputs":[],"output":{"name":"mapstate"}}],[11,"descriptor_static","","",60,{"inputs":[{"generics":["mapstate"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",60,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",60,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"actionraw"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"actionraw"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionraw"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"actionraw"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"actionraw_oneof_action"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"actionraw_oneof_action"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"actionraw_oneof_action"}],"output":{"name":"bool"}}],[11,"new","","",61,{"inputs":[],"output":{"name":"actionraw"}}],[11,"default_instance","","",61,{"inputs":[],"output":{"name":"actionraw"}}],[11,"clear_unit_command","","",61,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_command","","",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_command","","",61,{"inputs":[{"name":"self"},{"name":"actionrawunitcommand"}],"output":null}],[11,"mut_unit_command","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawunitcommand"}}],[11,"take_unit_command","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawunitcommand"}}],[11,"get_unit_command","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawunitcommand"}}],[11,"clear_camera_move","","",61,{"inputs":[{"name":"self"}],"output":null}],[11,"has_camera_move","","",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_camera_move","","",61,{"inputs":[{"name":"self"},{"name":"actionrawcameramove"}],"output":null}],[11,"mut_camera_move","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawcameramove"}}],[11,"take_camera_move","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawcameramove"}}],[11,"get_camera_move","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawcameramove"}}],[11,"clear_toggle_autocast","","",61,{"inputs":[{"name":"self"}],"output":null}],[11,"has_toggle_autocast","","",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_toggle_autocast","","",61,{"inputs":[{"name":"self"},{"name":"actionrawtoggleautocast"}],"output":null}],[11,"mut_toggle_autocast","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawtoggleautocast"}}],[11,"take_toggle_autocast","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawtoggleautocast"}}],[11,"get_toggle_autocast","","",61,{"inputs":[{"name":"self"}],"output":{"name":"actionrawtoggleautocast"}}],[11,"is_initialized","","",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",61,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",61,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",61,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",61,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",61,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",61,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",61,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",61,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",61,{"inputs":[],"output":{"name":"actionraw"}}],[11,"descriptor_static","","",61,{"inputs":[{"generics":["actionraw"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",61,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",61,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"actionrawunitcommand"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"actionrawunitcommand"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"actionrawunitcommand"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"actionrawunitcommand"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"actionrawunitcommand_oneof_target"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"actionrawunitcommand_oneof_target"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"actionrawunitcommand_oneof_target"}],"output":{"name":"bool"}}],[11,"new","","",62,{"inputs":[],"output":{"name":"actionrawunitcommand"}}],[11,"default_instance","","",62,{"inputs":[],"output":{"name":"actionrawunitcommand"}}],[11,"clear_ability_id","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",62,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ability_id","","",62,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_target_world_space_pos","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_world_space_pos","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_world_space_pos","","",62,{"inputs":[{"name":"self"},{"name":"point2d"}],"output":null}],[11,"mut_target_world_space_pos","","",62,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"take_target_world_space_pos","","",62,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"get_target_world_space_pos","","",62,{"inputs":[{"name":"self"}],"output":{"name":"point2d"}}],[11,"clear_target_unit_tag","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_unit_tag","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_unit_tag","","",62,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_target_unit_tag","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_unit_tags","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"set_unit_tags","","",62,{"inputs":[{"name":"self"},{"generics":["u64"],"name":"vec"}],"output":null}],[11,"mut_unit_tags","","",62,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_unit_tags","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"vec"}}],[11,"get_unit_tags","","",62,null],[11,"clear_queue_command","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"has_queue_command","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_queue_command","","",62,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_queue_command","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",62,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",62,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",62,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",62,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",62,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",62,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",62,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",62,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",62,{"inputs":[],"output":{"name":"actionrawunitcommand"}}],[11,"descriptor_static","","",62,{"inputs":[{"generics":["actionrawunitcommand"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",62,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"actionrawcameramove"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"actionrawcameramove"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"actionrawcameramove"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"actionrawcameramove"}}],[11,"new","","",63,{"inputs":[],"output":{"name":"actionrawcameramove"}}],[11,"default_instance","","",63,{"inputs":[],"output":{"name":"actionrawcameramove"}}],[11,"clear_center_world_space","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"has_center_world_space","","",63,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_center_world_space","","",63,{"inputs":[{"name":"self"},{"name":"point"}],"output":null}],[11,"mut_center_world_space","","",63,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"take_center_world_space","","",63,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"get_center_world_space","","",63,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"is_initialized","","",63,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",63,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",63,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",63,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",63,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",63,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",63,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",63,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",63,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",63,{"inputs":[],"output":{"name":"actionrawcameramove"}}],[11,"descriptor_static","","",63,{"inputs":[{"generics":["actionrawcameramove"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",63,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"actionrawtoggleautocast"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"actionrawtoggleautocast"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"actionrawtoggleautocast"}}],[11,"default","","",64,{"inputs":[],"output":{"name":"actionrawtoggleautocast"}}],[11,"new","","",64,{"inputs":[],"output":{"name":"actionrawtoggleautocast"}}],[11,"default_instance","","",64,{"inputs":[],"output":{"name":"actionrawtoggleautocast"}}],[11,"clear_ability_id","","",64,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",64,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",64,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ability_id","","",64,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_unit_tags","","",64,{"inputs":[{"name":"self"}],"output":null}],[11,"set_unit_tags","","",64,{"inputs":[{"name":"self"},{"generics":["u64"],"name":"vec"}],"output":null}],[11,"mut_unit_tags","","",64,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_unit_tags","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"vec"}}],[11,"get_unit_tags","","",64,null],[11,"is_initialized","","",64,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",64,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",64,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",64,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",64,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",64,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",64,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",64,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",64,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",64,{"inputs":[],"output":{"name":"actionrawtoggleautocast"}}],[11,"descriptor_static","","",64,{"inputs":[{"generics":["actionrawtoggleautocast"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",64,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",64,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"event"}}],[11,"new","","",65,{"inputs":[],"output":{"name":"event"}}],[11,"default_instance","","",65,{"inputs":[],"output":{"name":"event"}}],[11,"clear_dead_units","","",65,{"inputs":[{"name":"self"}],"output":null}],[11,"set_dead_units","","",65,{"inputs":[{"name":"self"},{"generics":["u64"],"name":"vec"}],"output":null}],[11,"mut_dead_units","","",65,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_dead_units","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"vec"}}],[11,"get_dead_units","","",65,null],[11,"is_initialized","","",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",65,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",65,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",65,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",65,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",65,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",65,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",65,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",65,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",65,{"inputs":[],"output":{"name":"event"}}],[11,"descriptor_static","","",65,{"inputs":[{"generics":["event"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",65,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",65,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"displaytype"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"displaytype"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",50,null],[11,"value","","",50,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",50,{"inputs":[{"name":"i32"}],"output":{"generics":["displaytype"],"name":"option"}}],[11,"values","","",50,null],[11,"enum_descriptor_static","","",50,{"inputs":[{"generics":["displaytype"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",50,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"alliance"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"alliance"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",51,null],[11,"value","","",51,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",51,{"inputs":[{"name":"i32"}],"output":{"generics":["alliance"],"name":"option"}}],[11,"values","","",51,null],[11,"enum_descriptor_static","","",51,{"inputs":[{"generics":["alliance"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",51,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"cloakstate"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"cloakstate"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",52,null],[11,"value","","",52,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",52,{"inputs":[{"name":"i32"}],"output":{"generics":["cloakstate"],"name":"option"}}],[11,"values","","",52,null],[11,"enum_descriptor_static","","",52,{"inputs":[{"generics":["cloakstate"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",52,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"sc2api","sc2_proto","",null,null],[3,"Request","sc2_proto::sc2api","",null,null],[3,"Response","","",null,null],[3,"RequestCreateGame","","",null,null],[3,"LocalMap","","",null,null],[3,"ResponseCreateGame","","",null,null],[3,"RequestJoinGame","","",null,null],[3,"PortSet","","",null,null],[3,"ResponseJoinGame","","",null,null],[3,"RequestRestartGame","","",null,null],[3,"ResponseRestartGame","","",null,null],[3,"RequestStartReplay","","",null,null],[3,"ResponseStartReplay","","",null,null],[3,"RequestLeaveGame","","",null,null],[3,"ResponseLeaveGame","","",null,null],[3,"RequestQuickSave","","",null,null],[3,"ResponseQuickSave","","",null,null],[3,"RequestQuickLoad","","",null,null],[3,"ResponseQuickLoad","","",null,null],[3,"RequestQuit","","",null,null],[3,"ResponseQuit","","",null,null],[3,"RequestGameInfo","","",null,null],[3,"ResponseGameInfo","","",null,null],[3,"RequestObservation","","",null,null],[3,"ResponseObservation","","",null,null],[3,"ChatReceived","","",null,null],[3,"RequestAction","","",null,null],[3,"ResponseAction","","",null,null],[3,"RequestStep","","",null,null],[3,"ResponseStep","","",null,null],[3,"RequestData","","",null,null],[3,"ResponseData","","",null,null],[3,"RequestSaveReplay","","",null,null],[3,"ResponseSaveReplay","","",null,null],[3,"RequestReplayInfo","","",null,null],[3,"PlayerInfoExtra","","",null,null],[3,"ResponseReplayInfo","","",null,null],[3,"RequestAvailableMaps","","",null,null],[3,"ResponseAvailableMaps","","",null,null],[3,"RequestSaveMap","","",null,null],[3,"ResponseSaveMap","","",null,null],[3,"RequestPing","","",null,null],[3,"ResponsePing","","",null,null],[3,"RequestDebug","","",null,null],[3,"ResponseDebug","","",null,null],[3,"PlayerSetup","","",null,null],[3,"SpatialCameraSetup","","",null,null],[3,"InterfaceOptions","","",null,null],[3,"PlayerInfo","","",null,null],[3,"PlayerCommon","","",null,null],[3,"Observation","","",null,null],[3,"Action","","",null,null],[3,"ActionChat","","",null,null],[3,"ActionError","","",null,null],[3,"PlayerResult","","",null,null],[4,"Request_oneof_request","","",null,null],[13,"create_game","","",66,null],[13,"join_game","","",66,null],[13,"restart_game","","",66,null],[13,"start_replay","","",66,null],[13,"leave_game","","",66,null],[13,"quick_save","","",66,null],[13,"quick_load","","",66,null],[13,"quit","","",66,null],[13,"game_info","","",66,null],[13,"observation","","",66,null],[13,"action","","",66,null],[13,"step","","",66,null],[13,"data","","",66,null],[13,"query","","",66,null],[13,"save_replay","","",66,null],[13,"replay_info","","",66,null],[13,"available_maps","","",66,null],[13,"save_map","","",66,null],[13,"ping","","",66,null],[13,"debug","","",66,null],[4,"Response_oneof_response","","",null,null],[13,"create_game","","",67,null],[13,"join_game","","",67,null],[13,"restart_game","","",67,null],[13,"start_replay","","",67,null],[13,"leave_game","","",67,null],[13,"quick_save","","",67,null],[13,"quick_load","","",67,null],[13,"quit","","",67,null],[13,"game_info","","",67,null],[13,"observation","","",67,null],[13,"action","","",67,null],[13,"step","","",67,null],[13,"data","","",67,null],[13,"query","","",67,null],[13,"save_replay","","",67,null],[13,"replay_info","","",67,null],[13,"available_maps","","",67,null],[13,"save_map","","",67,null],[13,"ping","","",67,null],[13,"debug","","",67,null],[4,"RequestCreateGame_oneof_Map","","",null,null],[13,"local_map","","",68,null],[13,"battlenet_map_name","","",68,null],[4,"ResponseCreateGame_Error","","",null,null],[13,"MissingMap","","",69,null],[13,"InvalidMapPath","","",69,null],[13,"InvalidMapData","","",69,null],[13,"InvalidMapName","","",69,null],[13,"InvalidMapHandle","","",69,null],[13,"MissingPlayerSetup","","",69,null],[13,"InvalidPlayerSetup","","",69,null],[13,"MultiplayerUnsupported","","",69,null],[4,"RequestJoinGame_oneof_participation","","",null,null],[13,"race","","",70,null],[13,"observed_player_id","","",70,null],[4,"ResponseJoinGame_Error","","",null,null],[13,"MissingParticipation","","",71,null],[13,"InvalidObservedPlayerId","","",71,null],[13,"MissingOptions","","",71,null],[13,"MissingPorts","","",71,null],[13,"GameFull","","",71,null],[13,"LaunchError","","",71,null],[13,"FeatureUnsupported","","",71,null],[13,"NoSpaceForUser","","",71,null],[13,"MapDoesNotExist","","",71,null],[13,"CannotOpenMap","","",71,null],[13,"ChecksumError","","",71,null],[13,"NetworkError","","",71,null],[13,"OtherError","","",71,null],[4,"ResponseRestartGame_Error","","",null,null],[13,"LaunchError","","",72,null],[4,"RequestStartReplay_oneof_replay","","",null,null],[13,"replay_path","","",73,null],[13,"replay_data","","",73,null],[4,"ResponseStartReplay_Error","","",null,null],[13,"MissingReplay","","",74,null],[13,"InvalidReplayPath","","",74,null],[13,"InvalidReplayData","","",74,null],[13,"InvalidMapData","","",74,null],[13,"InvalidObservedPlayerId","","",74,null],[13,"MissingOptions","","",74,null],[13,"LaunchError","","",74,null],[4,"RequestReplayInfo_oneof_replay","","",null,null],[13,"replay_path","","",75,null],[13,"replay_data","","",75,null],[4,"ResponseReplayInfo_Error","","",null,null],[13,"MissingReplay","","",76,null],[13,"InvalidReplayPath","","",76,null],[13,"InvalidReplayData","","",76,null],[13,"ParsingError","","",76,null],[13,"DownloadError","","",76,null],[4,"ResponseSaveMap_Error","","",null,null],[13,"InvalidMapData","","",77,null],[4,"ActionChat_Channel","","",null,null],[13,"Broadcast","","",78,null],[13,"Team","","",78,null],[4,"Status","","",null,null],[13,"launched","","",79,null],[13,"init_game","","",79,null],[13,"in_game","","",79,null],[13,"in_replay","","",79,null],[13,"ended","","",79,null],[13,"quit","","",79,null],[13,"unknown","","",79,null],[4,"Difficulty","","",null,null],[13,"VeryEasy","","",80,null],[13,"Easy","","",80,null],[13,"Medium","","",80,null],[13,"MediumHard","","",80,null],[13,"Hard","","",80,null],[13,"Harder","","",80,null],[13,"VeryHard","","",80,null],[13,"CheatVision","","",80,null],[13,"CheatMoney","","",80,null],[13,"CheatInsane","","",80,null],[4,"PlayerType","","",null,null],[13,"Participant","","",81,null],[13,"Computer","","",81,null],[13,"Observer","","",81,null],[4,"Alert","","",null,null],[13,"NuclearLaunchDetected","","",82,null],[13,"NydusWormDetected","","",82,null],[4,"Result","","",null,null],[13,"Victory","","",83,null],[13,"Defeat","","",83,null],[13,"Tie","","",83,null],[13,"Undecided","","",83,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"request"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"request"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"request_oneof_request"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"request_oneof_request"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"request_oneof_request"}],"output":{"name":"bool"}}],[11,"new","","",84,{"inputs":[],"output":{"name":"request"}}],[11,"default_instance","","",84,{"inputs":[],"output":{"name":"request"}}],[11,"clear_create_game","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_create_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_create_game","","",84,{"inputs":[{"name":"self"},{"name":"requestcreategame"}],"output":null}],[11,"mut_create_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestcreategame"}}],[11,"take_create_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestcreategame"}}],[11,"get_create_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestcreategame"}}],[11,"clear_join_game","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_join_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_join_game","","",84,{"inputs":[{"name":"self"},{"name":"requestjoingame"}],"output":null}],[11,"mut_join_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestjoingame"}}],[11,"take_join_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestjoingame"}}],[11,"get_join_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestjoingame"}}],[11,"clear_restart_game","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_restart_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_restart_game","","",84,{"inputs":[{"name":"self"},{"name":"requestrestartgame"}],"output":null}],[11,"mut_restart_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestrestartgame"}}],[11,"take_restart_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestrestartgame"}}],[11,"get_restart_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestrestartgame"}}],[11,"clear_start_replay","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_start_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_start_replay","","",84,{"inputs":[{"name":"self"},{"name":"requeststartreplay"}],"output":null}],[11,"mut_start_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requeststartreplay"}}],[11,"take_start_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requeststartreplay"}}],[11,"get_start_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requeststartreplay"}}],[11,"clear_leave_game","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_leave_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_leave_game","","",84,{"inputs":[{"name":"self"},{"name":"requestleavegame"}],"output":null}],[11,"mut_leave_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestleavegame"}}],[11,"take_leave_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestleavegame"}}],[11,"get_leave_game","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestleavegame"}}],[11,"clear_quick_save","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quick_save","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quick_save","","",84,{"inputs":[{"name":"self"},{"name":"requestquicksave"}],"output":null}],[11,"mut_quick_save","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquicksave"}}],[11,"take_quick_save","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquicksave"}}],[11,"get_quick_save","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquicksave"}}],[11,"clear_quick_load","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quick_load","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quick_load","","",84,{"inputs":[{"name":"self"},{"name":"requestquickload"}],"output":null}],[11,"mut_quick_load","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquickload"}}],[11,"take_quick_load","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquickload"}}],[11,"get_quick_load","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquickload"}}],[11,"clear_quit","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quit","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quit","","",84,{"inputs":[{"name":"self"},{"name":"requestquit"}],"output":null}],[11,"mut_quit","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquit"}}],[11,"take_quit","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquit"}}],[11,"get_quit","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquit"}}],[11,"clear_game_info","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_info","","",84,{"inputs":[{"name":"self"},{"name":"requestgameinfo"}],"output":null}],[11,"mut_game_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestgameinfo"}}],[11,"take_game_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestgameinfo"}}],[11,"get_game_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestgameinfo"}}],[11,"clear_observation","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_observation","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_observation","","",84,{"inputs":[{"name":"self"},{"name":"requestobservation"}],"output":null}],[11,"mut_observation","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestobservation"}}],[11,"take_observation","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestobservation"}}],[11,"get_observation","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestobservation"}}],[11,"clear_action","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action","","",84,{"inputs":[{"name":"self"},{"name":"requestaction"}],"output":null}],[11,"mut_action","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestaction"}}],[11,"take_action","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestaction"}}],[11,"get_action","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestaction"}}],[11,"clear_step","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_step","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_step","","",84,{"inputs":[{"name":"self"},{"name":"requeststep"}],"output":null}],[11,"mut_step","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requeststep"}}],[11,"take_step","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requeststep"}}],[11,"get_step","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requeststep"}}],[11,"clear_data","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data","","",84,{"inputs":[{"name":"self"},{"name":"requestdata"}],"output":null}],[11,"mut_data","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestdata"}}],[11,"take_data","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestdata"}}],[11,"get_data","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestdata"}}],[11,"clear_query","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_query","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_query","","",84,{"inputs":[{"name":"self"},{"name":"requestquery"}],"output":null}],[11,"mut_query","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquery"}}],[11,"take_query","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquery"}}],[11,"get_query","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestquery"}}],[11,"clear_save_replay","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_save_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_save_replay","","",84,{"inputs":[{"name":"self"},{"name":"requestsavereplay"}],"output":null}],[11,"mut_save_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestsavereplay"}}],[11,"take_save_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestsavereplay"}}],[11,"get_save_replay","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestsavereplay"}}],[11,"clear_replay_info","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_replay_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_replay_info","","",84,{"inputs":[{"name":"self"},{"name":"requestreplayinfo"}],"output":null}],[11,"mut_replay_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestreplayinfo"}}],[11,"take_replay_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestreplayinfo"}}],[11,"get_replay_info","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestreplayinfo"}}],[11,"clear_available_maps","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_available_maps","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_available_maps","","",84,{"inputs":[{"name":"self"},{"name":"requestavailablemaps"}],"output":null}],[11,"mut_available_maps","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestavailablemaps"}}],[11,"take_available_maps","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestavailablemaps"}}],[11,"get_available_maps","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestavailablemaps"}}],[11,"clear_save_map","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_save_map","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_save_map","","",84,{"inputs":[{"name":"self"},{"name":"requestsavemap"}],"output":null}],[11,"mut_save_map","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestsavemap"}}],[11,"take_save_map","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestsavemap"}}],[11,"get_save_map","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestsavemap"}}],[11,"clear_ping","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ping","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ping","","",84,{"inputs":[{"name":"self"},{"name":"requestping"}],"output":null}],[11,"mut_ping","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestping"}}],[11,"take_ping","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestping"}}],[11,"get_ping","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestping"}}],[11,"clear_debug","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"has_debug","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_debug","","",84,{"inputs":[{"name":"self"},{"name":"requestdebug"}],"output":null}],[11,"mut_debug","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestdebug"}}],[11,"take_debug","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestdebug"}}],[11,"get_debug","","",84,{"inputs":[{"name":"self"}],"output":{"name":"requestdebug"}}],[11,"is_initialized","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",84,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",84,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",84,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",84,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",84,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",84,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",84,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",84,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",84,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",84,{"inputs":[],"output":{"name":"request"}}],[11,"descriptor_static","","",84,{"inputs":[{"generics":["request"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",84,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"response"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"response"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"response"}}],[11,"default","","",85,{"inputs":[],"output":{"name":"response"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"response_oneof_response"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"response_oneof_response"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"response_oneof_response"}],"output":{"name":"bool"}}],[11,"new","","",85,{"inputs":[],"output":{"name":"response"}}],[11,"default_instance","","",85,{"inputs":[],"output":{"name":"response"}}],[11,"clear_create_game","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_create_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_create_game","","",85,{"inputs":[{"name":"self"},{"name":"responsecreategame"}],"output":null}],[11,"mut_create_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsecreategame"}}],[11,"take_create_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsecreategame"}}],[11,"get_create_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsecreategame"}}],[11,"clear_join_game","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_join_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_join_game","","",85,{"inputs":[{"name":"self"},{"name":"responsejoingame"}],"output":null}],[11,"mut_join_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsejoingame"}}],[11,"take_join_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsejoingame"}}],[11,"get_join_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsejoingame"}}],[11,"clear_restart_game","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_restart_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_restart_game","","",85,{"inputs":[{"name":"self"},{"name":"responserestartgame"}],"output":null}],[11,"mut_restart_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responserestartgame"}}],[11,"take_restart_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responserestartgame"}}],[11,"get_restart_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responserestartgame"}}],[11,"clear_start_replay","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_start_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_start_replay","","",85,{"inputs":[{"name":"self"},{"name":"responsestartreplay"}],"output":null}],[11,"mut_start_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsestartreplay"}}],[11,"take_start_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsestartreplay"}}],[11,"get_start_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsestartreplay"}}],[11,"clear_leave_game","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_leave_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_leave_game","","",85,{"inputs":[{"name":"self"},{"name":"responseleavegame"}],"output":null}],[11,"mut_leave_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseleavegame"}}],[11,"take_leave_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseleavegame"}}],[11,"get_leave_game","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseleavegame"}}],[11,"clear_quick_save","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quick_save","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quick_save","","",85,{"inputs":[{"name":"self"},{"name":"responsequicksave"}],"output":null}],[11,"mut_quick_save","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequicksave"}}],[11,"take_quick_save","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequicksave"}}],[11,"get_quick_save","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequicksave"}}],[11,"clear_quick_load","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quick_load","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quick_load","","",85,{"inputs":[{"name":"self"},{"name":"responsequickload"}],"output":null}],[11,"mut_quick_load","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequickload"}}],[11,"take_quick_load","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequickload"}}],[11,"get_quick_load","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequickload"}}],[11,"clear_quit","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_quit","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_quit","","",85,{"inputs":[{"name":"self"},{"name":"responsequit"}],"output":null}],[11,"mut_quit","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequit"}}],[11,"take_quit","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequit"}}],[11,"get_quit","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequit"}}],[11,"clear_game_info","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_info","","",85,{"inputs":[{"name":"self"},{"name":"responsegameinfo"}],"output":null}],[11,"mut_game_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsegameinfo"}}],[11,"take_game_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsegameinfo"}}],[11,"get_game_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsegameinfo"}}],[11,"clear_observation","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_observation","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_observation","","",85,{"inputs":[{"name":"self"},{"name":"responseobservation"}],"output":null}],[11,"mut_observation","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseobservation"}}],[11,"take_observation","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseobservation"}}],[11,"get_observation","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseobservation"}}],[11,"clear_action","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action","","",85,{"inputs":[{"name":"self"},{"name":"responseaction"}],"output":null}],[11,"mut_action","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseaction"}}],[11,"take_action","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseaction"}}],[11,"get_action","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseaction"}}],[11,"clear_step","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_step","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_step","","",85,{"inputs":[{"name":"self"},{"name":"responsestep"}],"output":null}],[11,"mut_step","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsestep"}}],[11,"take_step","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsestep"}}],[11,"get_step","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsestep"}}],[11,"clear_data","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data","","",85,{"inputs":[{"name":"self"},{"name":"responsedata"}],"output":null}],[11,"mut_data","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsedata"}}],[11,"take_data","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsedata"}}],[11,"get_data","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsedata"}}],[11,"clear_query","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_query","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_query","","",85,{"inputs":[{"name":"self"},{"name":"responsequery"}],"output":null}],[11,"mut_query","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequery"}}],[11,"take_query","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequery"}}],[11,"get_query","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsequery"}}],[11,"clear_save_replay","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_save_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_save_replay","","",85,{"inputs":[{"name":"self"},{"name":"responsesavereplay"}],"output":null}],[11,"mut_save_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsesavereplay"}}],[11,"take_save_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsesavereplay"}}],[11,"get_save_replay","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsesavereplay"}}],[11,"clear_replay_info","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_replay_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_replay_info","","",85,{"inputs":[{"name":"self"},{"name":"responsereplayinfo"}],"output":null}],[11,"mut_replay_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsereplayinfo"}}],[11,"take_replay_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsereplayinfo"}}],[11,"get_replay_info","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsereplayinfo"}}],[11,"clear_available_maps","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_available_maps","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_available_maps","","",85,{"inputs":[{"name":"self"},{"name":"responseavailablemaps"}],"output":null}],[11,"mut_available_maps","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseavailablemaps"}}],[11,"take_available_maps","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseavailablemaps"}}],[11,"get_available_maps","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseavailablemaps"}}],[11,"clear_save_map","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_save_map","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_save_map","","",85,{"inputs":[{"name":"self"},{"name":"responsesavemap"}],"output":null}],[11,"mut_save_map","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsesavemap"}}],[11,"take_save_map","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsesavemap"}}],[11,"get_save_map","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsesavemap"}}],[11,"clear_ping","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ping","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ping","","",85,{"inputs":[{"name":"self"},{"name":"responseping"}],"output":null}],[11,"mut_ping","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseping"}}],[11,"take_ping","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseping"}}],[11,"get_ping","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responseping"}}],[11,"clear_debug","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_debug","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_debug","","",85,{"inputs":[{"name":"self"},{"name":"responsedebug"}],"output":null}],[11,"mut_debug","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsedebug"}}],[11,"take_debug","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsedebug"}}],[11,"get_debug","","",85,{"inputs":[{"name":"self"}],"output":{"name":"responsedebug"}}],[11,"clear_error","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"set_error","","",85,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_error","","",85,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_error","","",85,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_error","","",85,null],[11,"clear_status","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"has_status","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_status","","",85,{"inputs":[{"name":"self"},{"name":"status"}],"output":null}],[11,"get_status","","",85,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"is_initialized","","",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",85,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",85,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",85,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",85,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",85,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",85,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",85,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",85,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",85,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",85,{"inputs":[],"output":{"name":"response"}}],[11,"descriptor_static","","",85,{"inputs":[{"generics":["response"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",85,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"requestcreategame"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"requestcreategame"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"requestcreategame"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"requestcreategame"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"requestcreategame_oneof_map"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"requestcreategame_oneof_map"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"requestcreategame_oneof_map"}],"output":{"name":"bool"}}],[11,"new","","",86,{"inputs":[],"output":{"name":"requestcreategame"}}],[11,"default_instance","","",86,{"inputs":[],"output":{"name":"requestcreategame"}}],[11,"clear_local_map","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"has_local_map","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_local_map","","",86,{"inputs":[{"name":"self"},{"name":"localmap"}],"output":null}],[11,"mut_local_map","","",86,{"inputs":[{"name":"self"}],"output":{"name":"localmap"}}],[11,"take_local_map","","",86,{"inputs":[{"name":"self"}],"output":{"name":"localmap"}}],[11,"get_local_map","","",86,{"inputs":[{"name":"self"}],"output":{"name":"localmap"}}],[11,"clear_battlenet_map_name","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"has_battlenet_map_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_battlenet_map_name","","",86,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_battlenet_map_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_battlenet_map_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_battlenet_map_name","","",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_player_setup","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"set_player_setup","","",86,{"inputs":[{"name":"self"},{"generics":["playersetup"],"name":"repeatedfield"}],"output":null}],[11,"mut_player_setup","","",86,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_player_setup","","",86,{"inputs":[{"name":"self"}],"output":{"generics":["playersetup"],"name":"repeatedfield"}}],[11,"get_player_setup","","",86,null],[11,"clear_disable_fog","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"has_disable_fog","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_disable_fog","","",86,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_disable_fog","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_random_seed","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"has_random_seed","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_random_seed","","",86,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_random_seed","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_realtime","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"has_realtime","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_realtime","","",86,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_realtime","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",86,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",86,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",86,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",86,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",86,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",86,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",86,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",86,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",86,{"inputs":[],"output":{"name":"requestcreategame"}}],[11,"descriptor_static","","",86,{"inputs":[{"generics":["requestcreategame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",86,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"localmap"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"localmap"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"localmap"}}],[11,"default","","",87,{"inputs":[],"output":{"name":"localmap"}}],[11,"new","","",87,{"inputs":[],"output":{"name":"localmap"}}],[11,"default_instance","","",87,{"inputs":[],"output":{"name":"localmap"}}],[11,"clear_map_path","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_path","","",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_path","","",87,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_map_path","","",87,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_map_path","","",87,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_map_path","","",87,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_map_data","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_data","","",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_data","","",87,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_map_data","","",87,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_map_data","","",87,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_map_data","","",87,null],[11,"is_initialized","","",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",87,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",87,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",87,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",87,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",87,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",87,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",87,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",87,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",87,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",87,{"inputs":[],"output":{"name":"localmap"}}],[11,"descriptor_static","","",87,{"inputs":[{"generics":["localmap"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",87,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"responsecreategame"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"responsecreategame"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"responsecreategame"}}],[11,"default","","",88,{"inputs":[],"output":{"name":"responsecreategame"}}],[11,"new","","",88,{"inputs":[],"output":{"name":"responsecreategame"}}],[11,"default_instance","","",88,{"inputs":[],"output":{"name":"responsecreategame"}}],[11,"clear_error","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",88,{"inputs":[{"name":"self"},{"name":"responsecreategame_error"}],"output":null}],[11,"get_error","","",88,{"inputs":[{"name":"self"}],"output":{"name":"responsecreategame_error"}}],[11,"clear_error_details","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error_details","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error_details","","",88,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_error_details","","",88,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_error_details","","",88,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_error_details","","",88,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",88,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",88,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",88,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",88,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",88,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",88,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",88,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",88,{"inputs":[],"output":{"name":"responsecreategame"}}],[11,"descriptor_static","","",88,{"inputs":[{"generics":["responsecreategame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"responsecreategame_error"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"responsecreategame_error"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",69,null],[11,"value","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",69,{"inputs":[{"name":"i32"}],"output":{"generics":["responsecreategame_error"],"name":"option"}}],[11,"values","","",69,null],[11,"enum_descriptor_static","","",69,{"inputs":[{"generics":["responsecreategame_error"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",69,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"requestjoingame"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"requestjoingame"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"requestjoingame"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"requestjoingame"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"requestjoingame_oneof_participation"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"requestjoingame_oneof_participation"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"requestjoingame_oneof_participation"}],"output":{"name":"bool"}}],[11,"new","","",89,{"inputs":[],"output":{"name":"requestjoingame"}}],[11,"default_instance","","",89,{"inputs":[],"output":{"name":"requestjoingame"}}],[11,"clear_race","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"has_race","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_race","","",89,{"inputs":[{"name":"self"},{"name":"race"}],"output":null}],[11,"get_race","","",89,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"clear_observed_player_id","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"has_observed_player_id","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_observed_player_id","","",89,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_observed_player_id","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_options","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",89,{"inputs":[{"name":"self"},{"name":"interfaceoptions"}],"output":null}],[11,"mut_options","","",89,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"take_options","","",89,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"get_options","","",89,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"clear_server_ports","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"has_server_ports","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_server_ports","","",89,{"inputs":[{"name":"self"},{"name":"portset"}],"output":null}],[11,"mut_server_ports","","",89,{"inputs":[{"name":"self"}],"output":{"name":"portset"}}],[11,"take_server_ports","","",89,{"inputs":[{"name":"self"}],"output":{"name":"portset"}}],[11,"get_server_ports","","",89,{"inputs":[{"name":"self"}],"output":{"name":"portset"}}],[11,"clear_client_ports","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"set_client_ports","","",89,{"inputs":[{"name":"self"},{"generics":["portset"],"name":"repeatedfield"}],"output":null}],[11,"mut_client_ports","","",89,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_client_ports","","",89,{"inputs":[{"name":"self"}],"output":{"generics":["portset"],"name":"repeatedfield"}}],[11,"get_client_ports","","",89,null],[11,"clear_shared_port","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"has_shared_port","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_shared_port","","",89,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_shared_port","","",89,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",89,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",89,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",89,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",89,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",89,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",89,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",89,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",89,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",89,{"inputs":[],"output":{"name":"requestjoingame"}}],[11,"descriptor_static","","",89,{"inputs":[{"generics":["requestjoingame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",89,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"portset"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"portset"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"portset"}}],[11,"default","","",90,{"inputs":[],"output":{"name":"portset"}}],[11,"new","","",90,{"inputs":[],"output":{"name":"portset"}}],[11,"default_instance","","",90,{"inputs":[],"output":{"name":"portset"}}],[11,"clear_game_port","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_port","","",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_port","","",90,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_game_port","","",90,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_base_port","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"has_base_port","","",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_base_port","","",90,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_base_port","","",90,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",90,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",90,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",90,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",90,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",90,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",90,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",90,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",90,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",90,{"inputs":[],"output":{"name":"portset"}}],[11,"descriptor_static","","",90,{"inputs":[{"generics":["portset"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",90,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"responsejoingame"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"responsejoingame"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"responsejoingame"}}],[11,"default","","",91,{"inputs":[],"output":{"name":"responsejoingame"}}],[11,"new","","",91,{"inputs":[],"output":{"name":"responsejoingame"}}],[11,"default_instance","","",91,{"inputs":[],"output":{"name":"responsejoingame"}}],[11,"clear_player_id","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",91,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_player_id","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_error","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",91,{"inputs":[{"name":"self"},{"name":"responsejoingame_error"}],"output":null}],[11,"get_error","","",91,{"inputs":[{"name":"self"}],"output":{"name":"responsejoingame_error"}}],[11,"clear_error_details","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error_details","","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error_details","","",91,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_error_details","","",91,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_error_details","","",91,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_error_details","","",91,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",91,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",91,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",91,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",91,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",91,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",91,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",91,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",91,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",91,{"inputs":[],"output":{"name":"responsejoingame"}}],[11,"descriptor_static","","",91,{"inputs":[{"generics":["responsejoingame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"responsejoingame_error"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"responsejoingame_error"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",71,null],[11,"value","","",71,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",71,{"inputs":[{"name":"i32"}],"output":{"generics":["responsejoingame_error"],"name":"option"}}],[11,"values","","",71,null],[11,"enum_descriptor_static","","",71,{"inputs":[{"generics":["responsejoingame_error"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",71,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"requestrestartgame"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"requestrestartgame"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"requestrestartgame"}}],[11,"default","","",92,{"inputs":[],"output":{"name":"requestrestartgame"}}],[11,"new","","",92,{"inputs":[],"output":{"name":"requestrestartgame"}}],[11,"default_instance","","",92,{"inputs":[],"output":{"name":"requestrestartgame"}}],[11,"is_initialized","","",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",92,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",92,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",92,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",92,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",92,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",92,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",92,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",92,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",92,{"inputs":[],"output":{"name":"requestrestartgame"}}],[11,"descriptor_static","","",92,{"inputs":[{"generics":["requestrestartgame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",92,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",92,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"responserestartgame"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"responserestartgame"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"responserestartgame"}}],[11,"default","","",93,{"inputs":[],"output":{"name":"responserestartgame"}}],[11,"new","","",93,{"inputs":[],"output":{"name":"responserestartgame"}}],[11,"default_instance","","",93,{"inputs":[],"output":{"name":"responserestartgame"}}],[11,"clear_error","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",93,{"inputs":[{"name":"self"},{"name":"responserestartgame_error"}],"output":null}],[11,"get_error","","",93,{"inputs":[{"name":"self"}],"output":{"name":"responserestartgame_error"}}],[11,"clear_error_details","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error_details","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error_details","","",93,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_error_details","","",93,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_error_details","","",93,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_error_details","","",93,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",93,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",93,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",93,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",93,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",93,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",93,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",93,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",93,{"inputs":[],"output":{"name":"responserestartgame"}}],[11,"descriptor_static","","",93,{"inputs":[{"generics":["responserestartgame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"responserestartgame_error"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"responserestartgame_error"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",72,null],[11,"value","","",72,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",72,{"inputs":[{"name":"i32"}],"output":{"generics":["responserestartgame_error"],"name":"option"}}],[11,"values","","",72,null],[11,"enum_descriptor_static","","",72,{"inputs":[{"generics":["responserestartgame_error"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",72,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"requeststartreplay"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"self"},{"name":"requeststartreplay"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"requeststartreplay"}}],[11,"default","","",94,{"inputs":[],"output":{"name":"requeststartreplay"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"requeststartreplay_oneof_replay"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"requeststartreplay_oneof_replay"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"requeststartreplay_oneof_replay"}],"output":{"name":"bool"}}],[11,"new","","",94,{"inputs":[],"output":{"name":"requeststartreplay"}}],[11,"default_instance","","",94,{"inputs":[],"output":{"name":"requeststartreplay"}}],[11,"clear_replay_path","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_replay_path","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_replay_path","","",94,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_replay_path","","",94,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_replay_path","","",94,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_replay_path","","",94,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_replay_data","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_replay_data","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_replay_data","","",94,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_replay_data","","",94,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_replay_data","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_replay_data","","",94,null],[11,"clear_map_data","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_data","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_data","","",94,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_map_data","","",94,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_map_data","","",94,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_map_data","","",94,null],[11,"clear_observed_player_id","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_observed_player_id","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_observed_player_id","","",94,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_observed_player_id","","",94,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_options","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",94,{"inputs":[{"name":"self"},{"name":"interfaceoptions"}],"output":null}],[11,"mut_options","","",94,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"take_options","","",94,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"get_options","","",94,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"clear_disable_fog","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"has_disable_fog","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_disable_fog","","",94,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_disable_fog","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",94,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",94,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",94,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",94,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",94,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",94,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",94,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",94,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",94,{"inputs":[],"output":{"name":"requeststartreplay"}}],[11,"descriptor_static","","",94,{"inputs":[{"generics":["requeststartreplay"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",94,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"responsestartreplay"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"responsestartreplay"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"responsestartreplay"}}],[11,"default","","",95,{"inputs":[],"output":{"name":"responsestartreplay"}}],[11,"new","","",95,{"inputs":[],"output":{"name":"responsestartreplay"}}],[11,"default_instance","","",95,{"inputs":[],"output":{"name":"responsestartreplay"}}],[11,"clear_error","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",95,{"inputs":[{"name":"self"},{"name":"responsestartreplay_error"}],"output":null}],[11,"get_error","","",95,{"inputs":[{"name":"self"}],"output":{"name":"responsestartreplay_error"}}],[11,"clear_error_details","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error_details","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error_details","","",95,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_error_details","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_error_details","","",95,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_error_details","","",95,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",95,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",95,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",95,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",95,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",95,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",95,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",95,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",95,{"inputs":[],"output":{"name":"responsestartreplay"}}],[11,"descriptor_static","","",95,{"inputs":[{"generics":["responsestartreplay"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"responsestartreplay_error"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"responsestartreplay_error"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",74,null],[11,"value","","",74,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",74,{"inputs":[{"name":"i32"}],"output":{"generics":["responsestartreplay_error"],"name":"option"}}],[11,"values","","",74,null],[11,"enum_descriptor_static","","",74,{"inputs":[{"generics":["responsestartreplay_error"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"requestleavegame"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"requestleavegame"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"requestleavegame"}}],[11,"default","","",96,{"inputs":[],"output":{"name":"requestleavegame"}}],[11,"new","","",96,{"inputs":[],"output":{"name":"requestleavegame"}}],[11,"default_instance","","",96,{"inputs":[],"output":{"name":"requestleavegame"}}],[11,"is_initialized","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",96,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",96,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",96,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",96,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",96,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",96,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",96,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",96,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",96,{"inputs":[],"output":{"name":"requestleavegame"}}],[11,"descriptor_static","","",96,{"inputs":[{"generics":["requestleavegame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",96,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"responseleavegame"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"self"},{"name":"responseleavegame"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"responseleavegame"}}],[11,"default","","",97,{"inputs":[],"output":{"name":"responseleavegame"}}],[11,"new","","",97,{"inputs":[],"output":{"name":"responseleavegame"}}],[11,"default_instance","","",97,{"inputs":[],"output":{"name":"responseleavegame"}}],[11,"is_initialized","","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",97,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",97,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",97,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",97,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",97,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",97,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",97,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",97,{"inputs":[],"output":{"name":"responseleavegame"}}],[11,"descriptor_static","","",97,{"inputs":[{"generics":["responseleavegame"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"requestquicksave"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"self"},{"name":"requestquicksave"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"requestquicksave"}}],[11,"default","","",98,{"inputs":[],"output":{"name":"requestquicksave"}}],[11,"new","","",98,{"inputs":[],"output":{"name":"requestquicksave"}}],[11,"default_instance","","",98,{"inputs":[],"output":{"name":"requestquicksave"}}],[11,"is_initialized","","",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",98,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",98,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",98,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",98,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",98,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",98,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",98,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",98,{"inputs":[],"output":{"name":"requestquicksave"}}],[11,"descriptor_static","","",98,{"inputs":[{"generics":["requestquicksave"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",98,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",98,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"responsequicksave"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"responsequicksave"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"responsequicksave"}}],[11,"default","","",99,{"inputs":[],"output":{"name":"responsequicksave"}}],[11,"new","","",99,{"inputs":[],"output":{"name":"responsequicksave"}}],[11,"default_instance","","",99,{"inputs":[],"output":{"name":"responsequicksave"}}],[11,"is_initialized","","",99,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",99,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",99,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",99,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",99,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",99,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",99,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",99,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",99,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",99,{"inputs":[],"output":{"name":"responsequicksave"}}],[11,"descriptor_static","","",99,{"inputs":[{"generics":["responsequicksave"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",99,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",99,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"requestquickload"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"self"},{"name":"requestquickload"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"requestquickload"}}],[11,"default","","",100,{"inputs":[],"output":{"name":"requestquickload"}}],[11,"new","","",100,{"inputs":[],"output":{"name":"requestquickload"}}],[11,"default_instance","","",100,{"inputs":[],"output":{"name":"requestquickload"}}],[11,"is_initialized","","",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",100,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",100,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",100,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",100,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",100,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",100,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",100,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",100,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",100,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",100,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",100,{"inputs":[],"output":{"name":"requestquickload"}}],[11,"descriptor_static","","",100,{"inputs":[{"generics":["requestquickload"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",100,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",100,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"responsequickload"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"responsequickload"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"responsequickload"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"responsequickload"}}],[11,"new","","",101,{"inputs":[],"output":{"name":"responsequickload"}}],[11,"default_instance","","",101,{"inputs":[],"output":{"name":"responsequickload"}}],[11,"is_initialized","","",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",101,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",101,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",101,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",101,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",101,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",101,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",101,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",101,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",101,{"inputs":[],"output":{"name":"responsequickload"}}],[11,"descriptor_static","","",101,{"inputs":[{"generics":["responsequickload"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",101,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"requestquit"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"requestquit"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"requestquit"}}],[11,"default","","",102,{"inputs":[],"output":{"name":"requestquit"}}],[11,"new","","",102,{"inputs":[],"output":{"name":"requestquit"}}],[11,"default_instance","","",102,{"inputs":[],"output":{"name":"requestquit"}}],[11,"is_initialized","","",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",102,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",102,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",102,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",102,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",102,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",102,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",102,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",102,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",102,{"inputs":[],"output":{"name":"requestquit"}}],[11,"descriptor_static","","",102,{"inputs":[{"generics":["requestquit"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"responsequit"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"responsequit"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"responsequit"}}],[11,"default","","",103,{"inputs":[],"output":{"name":"responsequit"}}],[11,"new","","",103,{"inputs":[],"output":{"name":"responsequit"}}],[11,"default_instance","","",103,{"inputs":[],"output":{"name":"responsequit"}}],[11,"is_initialized","","",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",103,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",103,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",103,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",103,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",103,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",103,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",103,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",103,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",103,{"inputs":[],"output":{"name":"responsequit"}}],[11,"descriptor_static","","",103,{"inputs":[{"generics":["responsequit"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",103,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",103,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"requestgameinfo"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"requestgameinfo"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"requestgameinfo"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"requestgameinfo"}}],[11,"new","","",104,{"inputs":[],"output":{"name":"requestgameinfo"}}],[11,"default_instance","","",104,{"inputs":[],"output":{"name":"requestgameinfo"}}],[11,"is_initialized","","",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",104,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",104,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",104,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",104,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",104,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",104,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",104,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",104,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",104,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",104,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",104,{"inputs":[],"output":{"name":"requestgameinfo"}}],[11,"descriptor_static","","",104,{"inputs":[{"generics":["requestgameinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",104,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"responsegameinfo"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"self"},{"name":"responsegameinfo"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"responsegameinfo"}}],[11,"default","","",105,{"inputs":[],"output":{"name":"responsegameinfo"}}],[11,"new","","",105,{"inputs":[],"output":{"name":"responsegameinfo"}}],[11,"default_instance","","",105,{"inputs":[],"output":{"name":"responsegameinfo"}}],[11,"clear_map_name","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_name","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_name","","",105,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_map_name","","",105,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_map_name","","",105,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_map_name","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_mod_names","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"set_mod_names","","",105,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_mod_names","","",105,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_mod_names","","",105,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_mod_names","","",105,null],[11,"clear_local_map_path","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"has_local_map_path","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_local_map_path","","",105,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_local_map_path","","",105,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_local_map_path","","",105,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_local_map_path","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_player_info","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"set_player_info","","",105,{"inputs":[{"name":"self"},{"generics":["playerinfo"],"name":"repeatedfield"}],"output":null}],[11,"mut_player_info","","",105,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_player_info","","",105,{"inputs":[{"name":"self"}],"output":{"generics":["playerinfo"],"name":"repeatedfield"}}],[11,"get_player_info","","",105,null],[11,"clear_start_raw","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"has_start_raw","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_start_raw","","",105,{"inputs":[{"name":"self"},{"name":"startraw"}],"output":null}],[11,"mut_start_raw","","",105,{"inputs":[{"name":"self"}],"output":{"name":"startraw"}}],[11,"take_start_raw","","",105,{"inputs":[{"name":"self"}],"output":{"name":"startraw"}}],[11,"get_start_raw","","",105,{"inputs":[{"name":"self"}],"output":{"name":"startraw"}}],[11,"clear_options","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"has_options","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_options","","",105,{"inputs":[{"name":"self"},{"name":"interfaceoptions"}],"output":null}],[11,"mut_options","","",105,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"take_options","","",105,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"get_options","","",105,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"is_initialized","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",105,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",105,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",105,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",105,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",105,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",105,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",105,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",105,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",105,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",105,{"inputs":[],"output":{"name":"responsegameinfo"}}],[11,"descriptor_static","","",105,{"inputs":[{"generics":["responsegameinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",105,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"requestobservation"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"self"},{"name":"requestobservation"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"requestobservation"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"requestobservation"}}],[11,"new","","",106,{"inputs":[],"output":{"name":"requestobservation"}}],[11,"default_instance","","",106,{"inputs":[],"output":{"name":"requestobservation"}}],[11,"clear_disable_fog","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"has_disable_fog","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_disable_fog","","",106,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_disable_fog","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",106,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",106,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",106,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",106,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",106,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",106,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",106,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",106,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",106,{"inputs":[],"output":{"name":"requestobservation"}}],[11,"descriptor_static","","",106,{"inputs":[{"generics":["requestobservation"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",106,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"responseobservation"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"self"},{"name":"responseobservation"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"responseobservation"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"responseobservation"}}],[11,"new","","",107,{"inputs":[],"output":{"name":"responseobservation"}}],[11,"default_instance","","",107,{"inputs":[],"output":{"name":"responseobservation"}}],[11,"clear_actions","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"set_actions","","",107,{"inputs":[{"name":"self"},{"generics":["action"],"name":"repeatedfield"}],"output":null}],[11,"mut_actions","","",107,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_actions","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["action"],"name":"repeatedfield"}}],[11,"get_actions","","",107,null],[11,"clear_action_errors","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"set_action_errors","","",107,{"inputs":[{"name":"self"},{"generics":["actionerror"],"name":"repeatedfield"}],"output":null}],[11,"mut_action_errors","","",107,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_action_errors","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["actionerror"],"name":"repeatedfield"}}],[11,"get_action_errors","","",107,null],[11,"clear_observation","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"has_observation","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_observation","","",107,{"inputs":[{"name":"self"},{"name":"observation"}],"output":null}],[11,"mut_observation","","",107,{"inputs":[{"name":"self"}],"output":{"name":"observation"}}],[11,"take_observation","","",107,{"inputs":[{"name":"self"}],"output":{"name":"observation"}}],[11,"get_observation","","",107,{"inputs":[{"name":"self"}],"output":{"name":"observation"}}],[11,"clear_player_result","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"set_player_result","","",107,{"inputs":[{"name":"self"},{"generics":["playerresult"],"name":"repeatedfield"}],"output":null}],[11,"mut_player_result","","",107,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_player_result","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["playerresult"],"name":"repeatedfield"}}],[11,"get_player_result","","",107,null],[11,"clear_chat","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"set_chat","","",107,{"inputs":[{"name":"self"},{"generics":["chatreceived"],"name":"repeatedfield"}],"output":null}],[11,"mut_chat","","",107,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_chat","","",107,{"inputs":[{"name":"self"}],"output":{"generics":["chatreceived"],"name":"repeatedfield"}}],[11,"get_chat","","",107,null],[11,"is_initialized","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",107,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",107,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",107,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",107,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",107,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",107,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",107,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",107,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",107,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",107,{"inputs":[],"output":{"name":"responseobservation"}}],[11,"descriptor_static","","",107,{"inputs":[{"generics":["responseobservation"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",107,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"chatreceived"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"chatreceived"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"chatreceived"}}],[11,"default","","",108,{"inputs":[],"output":{"name":"chatreceived"}}],[11,"new","","",108,{"inputs":[],"output":{"name":"chatreceived"}}],[11,"default_instance","","",108,{"inputs":[],"output":{"name":"chatreceived"}}],[11,"clear_player_id","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",108,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_player_id","","",108,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_message","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"has_message","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_message","","",108,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_message","","",108,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_message","","",108,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_message","","",108,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",108,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",108,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",108,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",108,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",108,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",108,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",108,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",108,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",108,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",108,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",108,{"inputs":[],"output":{"name":"chatreceived"}}],[11,"descriptor_static","","",108,{"inputs":[{"generics":["chatreceived"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",108,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"requestaction"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"self"},{"name":"requestaction"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"requestaction"}}],[11,"default","","",109,{"inputs":[],"output":{"name":"requestaction"}}],[11,"new","","",109,{"inputs":[],"output":{"name":"requestaction"}}],[11,"default_instance","","",109,{"inputs":[],"output":{"name":"requestaction"}}],[11,"clear_actions","","",109,{"inputs":[{"name":"self"}],"output":null}],[11,"set_actions","","",109,{"inputs":[{"name":"self"},{"generics":["action"],"name":"repeatedfield"}],"output":null}],[11,"mut_actions","","",109,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_actions","","",109,{"inputs":[{"name":"self"}],"output":{"generics":["action"],"name":"repeatedfield"}}],[11,"get_actions","","",109,null],[11,"is_initialized","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",109,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",109,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",109,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",109,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",109,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",109,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",109,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",109,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",109,{"inputs":[],"output":{"name":"requestaction"}}],[11,"descriptor_static","","",109,{"inputs":[{"generics":["requestaction"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",109,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",109,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"responseaction"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"responseaction"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"responseaction"}}],[11,"default","","",110,{"inputs":[],"output":{"name":"responseaction"}}],[11,"new","","",110,{"inputs":[],"output":{"name":"responseaction"}}],[11,"default_instance","","",110,{"inputs":[],"output":{"name":"responseaction"}}],[11,"clear_result","","",110,{"inputs":[{"name":"self"}],"output":null}],[11,"set_result","","",110,{"inputs":[{"name":"self"},{"generics":["actionresult"],"name":"vec"}],"output":null}],[11,"mut_result","","",110,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_result","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["actionresult"],"name":"vec"}}],[11,"get_result","","",110,null],[11,"is_initialized","","",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",110,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",110,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",110,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",110,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",110,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",110,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",110,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",110,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",110,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",110,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",110,{"inputs":[],"output":{"name":"responseaction"}}],[11,"descriptor_static","","",110,{"inputs":[{"generics":["responseaction"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",110,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",110,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"requeststep"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"requeststep"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"requeststep"}}],[11,"default","","",111,{"inputs":[],"output":{"name":"requeststep"}}],[11,"new","","",111,{"inputs":[],"output":{"name":"requeststep"}}],[11,"default_instance","","",111,{"inputs":[],"output":{"name":"requeststep"}}],[11,"clear_count","","",111,{"inputs":[{"name":"self"}],"output":null}],[11,"has_count","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_count","","",111,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_count","","",111,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",111,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",111,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",111,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",111,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",111,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",111,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",111,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",111,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",111,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",111,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",111,{"inputs":[],"output":{"name":"requeststep"}}],[11,"descriptor_static","","",111,{"inputs":[{"generics":["requeststep"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",111,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",111,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"responsestep"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"responsestep"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"responsestep"}}],[11,"default","","",112,{"inputs":[],"output":{"name":"responsestep"}}],[11,"new","","",112,{"inputs":[],"output":{"name":"responsestep"}}],[11,"default_instance","","",112,{"inputs":[],"output":{"name":"responsestep"}}],[11,"is_initialized","","",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",112,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",112,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",112,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",112,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",112,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",112,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",112,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",112,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",112,{"inputs":[],"output":{"name":"responsestep"}}],[11,"descriptor_static","","",112,{"inputs":[{"generics":["responsestep"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",112,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",112,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"requestdata"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"requestdata"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"requestdata"}}],[11,"default","","",113,{"inputs":[],"output":{"name":"requestdata"}}],[11,"new","","",113,{"inputs":[],"output":{"name":"requestdata"}}],[11,"default_instance","","",113,{"inputs":[],"output":{"name":"requestdata"}}],[11,"clear_ability_id","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",113,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_ability_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_unit_type_id","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type_id","","",113,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_unit_type_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_upgrade_id","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"has_upgrade_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_upgrade_id","","",113,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_upgrade_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_buff_id","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"has_buff_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_buff_id","","",113,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_buff_id","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",113,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",113,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",113,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",113,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",113,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",113,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",113,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",113,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",113,{"inputs":[],"output":{"name":"requestdata"}}],[11,"descriptor_static","","",113,{"inputs":[{"generics":["requestdata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",113,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",113,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"responsedata"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"responsedata"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"responsedata"}}],[11,"default","","",114,{"inputs":[],"output":{"name":"responsedata"}}],[11,"new","","",114,{"inputs":[],"output":{"name":"responsedata"}}],[11,"default_instance","","",114,{"inputs":[],"output":{"name":"responsedata"}}],[11,"clear_abilities","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"set_abilities","","",114,{"inputs":[{"name":"self"},{"generics":["abilitydata"],"name":"repeatedfield"}],"output":null}],[11,"mut_abilities","","",114,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_abilities","","",114,{"inputs":[{"name":"self"}],"output":{"generics":["abilitydata"],"name":"repeatedfield"}}],[11,"get_abilities","","",114,null],[11,"clear_units","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"set_units","","",114,{"inputs":[{"name":"self"},{"generics":["unittypedata"],"name":"repeatedfield"}],"output":null}],[11,"mut_units","","",114,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_units","","",114,{"inputs":[{"name":"self"}],"output":{"generics":["unittypedata"],"name":"repeatedfield"}}],[11,"get_units","","",114,null],[11,"clear_upgrades","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"set_upgrades","","",114,{"inputs":[{"name":"self"},{"generics":["upgradedata"],"name":"repeatedfield"}],"output":null}],[11,"mut_upgrades","","",114,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_upgrades","","",114,{"inputs":[{"name":"self"}],"output":{"generics":["upgradedata"],"name":"repeatedfield"}}],[11,"get_upgrades","","",114,null],[11,"clear_buffs","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"set_buffs","","",114,{"inputs":[{"name":"self"},{"generics":["buffdata"],"name":"repeatedfield"}],"output":null}],[11,"mut_buffs","","",114,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_buffs","","",114,{"inputs":[{"name":"self"}],"output":{"generics":["buffdata"],"name":"repeatedfield"}}],[11,"get_buffs","","",114,null],[11,"is_initialized","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",114,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",114,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",114,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",114,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",114,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",114,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",114,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",114,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",114,{"inputs":[],"output":{"name":"responsedata"}}],[11,"descriptor_static","","",114,{"inputs":[{"generics":["responsedata"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",114,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",114,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"requestsavereplay"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"self"},{"name":"requestsavereplay"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"requestsavereplay"}}],[11,"default","","",115,{"inputs":[],"output":{"name":"requestsavereplay"}}],[11,"new","","",115,{"inputs":[],"output":{"name":"requestsavereplay"}}],[11,"default_instance","","",115,{"inputs":[],"output":{"name":"requestsavereplay"}}],[11,"is_initialized","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",115,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",115,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",115,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",115,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",115,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",115,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",115,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",115,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",115,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",115,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",115,{"inputs":[],"output":{"name":"requestsavereplay"}}],[11,"descriptor_static","","",115,{"inputs":[{"generics":["requestsavereplay"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",115,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",115,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"responsesavereplay"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"self"},{"name":"responsesavereplay"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"responsesavereplay"}}],[11,"default","","",116,{"inputs":[],"output":{"name":"responsesavereplay"}}],[11,"new","","",116,{"inputs":[],"output":{"name":"responsesavereplay"}}],[11,"default_instance","","",116,{"inputs":[],"output":{"name":"responsesavereplay"}}],[11,"clear_data","","",116,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data","","",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data","","",116,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_data","","",116,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_data","","",116,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_data","","",116,null],[11,"is_initialized","","",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",116,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",116,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",116,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",116,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",116,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",116,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",116,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",116,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",116,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",116,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",116,{"inputs":[],"output":{"name":"responsesavereplay"}}],[11,"descriptor_static","","",116,{"inputs":[{"generics":["responsesavereplay"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",116,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",116,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"requestreplayinfo"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"requestreplayinfo"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"requestreplayinfo"}}],[11,"default","","",117,{"inputs":[],"output":{"name":"requestreplayinfo"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"requestreplayinfo_oneof_replay"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"requestreplayinfo_oneof_replay"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"requestreplayinfo_oneof_replay"}],"output":{"name":"bool"}}],[11,"new","","",117,{"inputs":[],"output":{"name":"requestreplayinfo"}}],[11,"default_instance","","",117,{"inputs":[],"output":{"name":"requestreplayinfo"}}],[11,"clear_replay_path","","",117,{"inputs":[{"name":"self"}],"output":null}],[11,"has_replay_path","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_replay_path","","",117,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_replay_path","","",117,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_replay_path","","",117,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_replay_path","","",117,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_replay_data","","",117,{"inputs":[{"name":"self"}],"output":null}],[11,"has_replay_data","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_replay_data","","",117,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_replay_data","","",117,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_replay_data","","",117,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_replay_data","","",117,null],[11,"clear_download_data","","",117,{"inputs":[{"name":"self"}],"output":null}],[11,"has_download_data","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_download_data","","",117,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_download_data","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",117,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",117,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",117,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",117,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",117,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",117,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",117,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",117,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",117,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",117,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",117,{"inputs":[],"output":{"name":"requestreplayinfo"}}],[11,"descriptor_static","","",117,{"inputs":[{"generics":["requestreplayinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",117,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",117,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"playerinfoextra"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"playerinfoextra"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerinfoextra"}}],[11,"default","","",118,{"inputs":[],"output":{"name":"playerinfoextra"}}],[11,"new","","",118,{"inputs":[],"output":{"name":"playerinfoextra"}}],[11,"default_instance","","",118,{"inputs":[],"output":{"name":"playerinfoextra"}}],[11,"clear_player_info","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_info","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_info","","",118,{"inputs":[{"name":"self"},{"name":"playerinfo"}],"output":null}],[11,"mut_player_info","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerinfo"}}],[11,"take_player_info","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerinfo"}}],[11,"get_player_info","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerinfo"}}],[11,"clear_player_result","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_result","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_result","","",118,{"inputs":[{"name":"self"},{"name":"playerresult"}],"output":null}],[11,"mut_player_result","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerresult"}}],[11,"take_player_result","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerresult"}}],[11,"get_player_result","","",118,{"inputs":[{"name":"self"}],"output":{"name":"playerresult"}}],[11,"clear_player_mmr","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_mmr","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_mmr","","",118,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_player_mmr","","",118,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_player_apm","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_apm","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_apm","","",118,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_player_apm","","",118,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",118,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",118,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",118,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",118,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",118,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",118,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",118,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",118,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",118,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",118,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",118,{"inputs":[],"output":{"name":"playerinfoextra"}}],[11,"descriptor_static","","",118,{"inputs":[{"generics":["playerinfoextra"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",118,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"responsereplayinfo"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"self"},{"name":"responsereplayinfo"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"responsereplayinfo"}}],[11,"default","","",119,{"inputs":[],"output":{"name":"responsereplayinfo"}}],[11,"new","","",119,{"inputs":[],"output":{"name":"responsereplayinfo"}}],[11,"default_instance","","",119,{"inputs":[],"output":{"name":"responsereplayinfo"}}],[11,"clear_map_name","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_name","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_name","","",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_map_name","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_map_name","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_map_name","","",119,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_local_map_path","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_local_map_path","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_local_map_path","","",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_local_map_path","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_local_map_path","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_local_map_path","","",119,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_player_info","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"set_player_info","","",119,{"inputs":[{"name":"self"},{"generics":["playerinfoextra"],"name":"repeatedfield"}],"output":null}],[11,"mut_player_info","","",119,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_player_info","","",119,{"inputs":[{"name":"self"}],"output":{"generics":["playerinfoextra"],"name":"repeatedfield"}}],[11,"get_player_info","","",119,null],[11,"clear_game_duration_loops","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_duration_loops","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_duration_loops","","",119,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_game_duration_loops","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_game_duration_seconds","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_duration_seconds","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_duration_seconds","","",119,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_game_duration_seconds","","",119,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_game_version","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_version","","",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_game_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_game_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_game_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_data_version","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data_version","","",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_data_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_data_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_data_version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_data_build","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data_build","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data_build","","",119,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_data_build","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_base_build","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_base_build","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_base_build","","",119,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_base_build","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_error","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",119,{"inputs":[{"name":"self"},{"name":"responsereplayinfo_error"}],"output":null}],[11,"get_error","","",119,{"inputs":[{"name":"self"}],"output":{"name":"responsereplayinfo_error"}}],[11,"clear_error_details","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error_details","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error_details","","",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_error_details","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_error_details","","",119,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_error_details","","",119,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",119,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",119,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",119,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",119,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",119,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",119,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",119,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",119,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",119,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",119,{"inputs":[],"output":{"name":"responsereplayinfo"}}],[11,"descriptor_static","","",119,{"inputs":[{"generics":["responsereplayinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",119,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"responsereplayinfo_error"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"responsereplayinfo_error"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",76,null],[11,"value","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",76,{"inputs":[{"name":"i32"}],"output":{"generics":["responsereplayinfo_error"],"name":"option"}}],[11,"values","","",76,null],[11,"enum_descriptor_static","","",76,{"inputs":[{"generics":["responsereplayinfo_error"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",76,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"requestavailablemaps"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"self"},{"name":"requestavailablemaps"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"requestavailablemaps"}}],[11,"default","","",120,{"inputs":[],"output":{"name":"requestavailablemaps"}}],[11,"new","","",120,{"inputs":[],"output":{"name":"requestavailablemaps"}}],[11,"default_instance","","",120,{"inputs":[],"output":{"name":"requestavailablemaps"}}],[11,"is_initialized","","",120,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",120,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",120,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",120,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",120,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",120,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",120,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",120,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",120,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",120,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",120,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",120,{"inputs":[],"output":{"name":"requestavailablemaps"}}],[11,"descriptor_static","","",120,{"inputs":[{"generics":["requestavailablemaps"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",120,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",120,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"responseavailablemaps"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"self"},{"name":"responseavailablemaps"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"responseavailablemaps"}}],[11,"default","","",121,{"inputs":[],"output":{"name":"responseavailablemaps"}}],[11,"new","","",121,{"inputs":[],"output":{"name":"responseavailablemaps"}}],[11,"default_instance","","",121,{"inputs":[],"output":{"name":"responseavailablemaps"}}],[11,"clear_local_map_paths","","",121,{"inputs":[{"name":"self"}],"output":null}],[11,"set_local_map_paths","","",121,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_local_map_paths","","",121,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_local_map_paths","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_local_map_paths","","",121,null],[11,"clear_battlenet_map_names","","",121,{"inputs":[{"name":"self"}],"output":null}],[11,"set_battlenet_map_names","","",121,{"inputs":[{"name":"self"},{"generics":["string"],"name":"repeatedfield"}],"output":null}],[11,"mut_battlenet_map_names","","",121,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_battlenet_map_names","","",121,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"repeatedfield"}}],[11,"get_battlenet_map_names","","",121,null],[11,"is_initialized","","",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",121,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",121,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",121,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",121,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",121,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",121,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",121,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",121,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",121,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",121,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",121,{"inputs":[],"output":{"name":"responseavailablemaps"}}],[11,"descriptor_static","","",121,{"inputs":[{"generics":["responseavailablemaps"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",121,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",121,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"requestsavemap"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"self"},{"name":"requestsavemap"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"requestsavemap"}}],[11,"default","","",122,{"inputs":[],"output":{"name":"requestsavemap"}}],[11,"new","","",122,{"inputs":[],"output":{"name":"requestsavemap"}}],[11,"default_instance","","",122,{"inputs":[],"output":{"name":"requestsavemap"}}],[11,"clear_map_path","","",122,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_path","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_path","","",122,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_map_path","","",122,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_map_path","","",122,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_map_path","","",122,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_map_data","","",122,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map_data","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map_data","","",122,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":null}],[11,"mut_map_data","","",122,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_map_data","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"get_map_data","","",122,null],[11,"is_initialized","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",122,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",122,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",122,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",122,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",122,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",122,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",122,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",122,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",122,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",122,{"inputs":[],"output":{"name":"requestsavemap"}}],[11,"descriptor_static","","",122,{"inputs":[{"generics":["requestsavemap"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",122,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",122,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"responsesavemap"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"self"},{"name":"responsesavemap"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"responsesavemap"}}],[11,"default","","",123,{"inputs":[],"output":{"name":"responsesavemap"}}],[11,"new","","",123,{"inputs":[],"output":{"name":"responsesavemap"}}],[11,"default_instance","","",123,{"inputs":[],"output":{"name":"responsesavemap"}}],[11,"clear_error","","",123,{"inputs":[{"name":"self"}],"output":null}],[11,"has_error","","",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_error","","",123,{"inputs":[{"name":"self"},{"name":"responsesavemap_error"}],"output":null}],[11,"get_error","","",123,{"inputs":[{"name":"self"}],"output":{"name":"responsesavemap_error"}}],[11,"is_initialized","","",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",123,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",123,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",123,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",123,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",123,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",123,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",123,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",123,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",123,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",123,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",123,{"inputs":[],"output":{"name":"responsesavemap"}}],[11,"descriptor_static","","",123,{"inputs":[{"generics":["responsesavemap"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",123,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",123,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"responsesavemap_error"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"responsesavemap_error"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",77,null],[11,"value","","",77,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",77,{"inputs":[{"name":"i32"}],"output":{"generics":["responsesavemap_error"],"name":"option"}}],[11,"values","","",77,null],[11,"enum_descriptor_static","","",77,{"inputs":[{"generics":["responsesavemap_error"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",77,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"requestping"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"self"},{"name":"requestping"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"requestping"}}],[11,"default","","",124,{"inputs":[],"output":{"name":"requestping"}}],[11,"new","","",124,{"inputs":[],"output":{"name":"requestping"}}],[11,"default_instance","","",124,{"inputs":[],"output":{"name":"requestping"}}],[11,"is_initialized","","",124,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",124,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",124,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",124,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",124,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",124,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",124,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",124,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",124,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",124,{"inputs":[],"output":{"name":"requestping"}}],[11,"descriptor_static","","",124,{"inputs":[{"generics":["requestping"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",124,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",124,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"responseping"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"self"},{"name":"responseping"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"responseping"}}],[11,"default","","",125,{"inputs":[],"output":{"name":"responseping"}}],[11,"new","","",125,{"inputs":[],"output":{"name":"responseping"}}],[11,"default_instance","","",125,{"inputs":[],"output":{"name":"responseping"}}],[11,"clear_game_version","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_version","","",125,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_game_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_game_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_game_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_data_version","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data_version","","",125,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_data_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_data_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_data_version","","",125,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clear_data_build","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"has_data_build","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_data_build","","",125,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_data_build","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_base_build","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"has_base_build","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_base_build","","",125,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_base_build","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",125,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",125,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",125,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",125,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",125,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",125,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",125,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",125,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",125,{"inputs":[],"output":{"name":"responseping"}}],[11,"descriptor_static","","",125,{"inputs":[{"generics":["responseping"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",125,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",125,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"requestdebug"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"self"},{"name":"requestdebug"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"requestdebug"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"requestdebug"}}],[11,"new","","",126,{"inputs":[],"output":{"name":"requestdebug"}}],[11,"default_instance","","",126,{"inputs":[],"output":{"name":"requestdebug"}}],[11,"clear_debug","","",126,{"inputs":[{"name":"self"}],"output":null}],[11,"set_debug","","",126,{"inputs":[{"name":"self"},{"generics":["debugcommand"],"name":"repeatedfield"}],"output":null}],[11,"mut_debug","","",126,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_debug","","",126,{"inputs":[{"name":"self"}],"output":{"generics":["debugcommand"],"name":"repeatedfield"}}],[11,"get_debug","","",126,null],[11,"is_initialized","","",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",126,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",126,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",126,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",126,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",126,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",126,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",126,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",126,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",126,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",126,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",126,{"inputs":[],"output":{"name":"requestdebug"}}],[11,"descriptor_static","","",126,{"inputs":[{"generics":["requestdebug"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",126,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",126,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"responsedebug"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"self"},{"name":"responsedebug"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"responsedebug"}}],[11,"default","","",127,{"inputs":[],"output":{"name":"responsedebug"}}],[11,"new","","",127,{"inputs":[],"output":{"name":"responsedebug"}}],[11,"default_instance","","",127,{"inputs":[],"output":{"name":"responsedebug"}}],[11,"is_initialized","","",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",127,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",127,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",127,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",127,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",127,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",127,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",127,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",127,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",127,{"inputs":[],"output":{"name":"responsedebug"}}],[11,"descriptor_static","","",127,{"inputs":[{"generics":["responsedebug"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",127,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",127,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"playersetup"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"self"},{"name":"playersetup"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"playersetup"}}],[11,"default","","",128,{"inputs":[],"output":{"name":"playersetup"}}],[11,"new","","",128,{"inputs":[],"output":{"name":"playersetup"}}],[11,"default_instance","","",128,{"inputs":[],"output":{"name":"playersetup"}}],[11,"clear_field_type","","",128,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",128,{"inputs":[{"name":"self"},{"name":"playertype"}],"output":null}],[11,"get_field_type","","",128,{"inputs":[{"name":"self"}],"output":{"name":"playertype"}}],[11,"clear_race","","",128,{"inputs":[{"name":"self"}],"output":null}],[11,"has_race","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_race","","",128,{"inputs":[{"name":"self"},{"name":"race"}],"output":null}],[11,"get_race","","",128,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"clear_difficulty","","",128,{"inputs":[{"name":"self"}],"output":null}],[11,"has_difficulty","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_difficulty","","",128,{"inputs":[{"name":"self"},{"name":"difficulty"}],"output":null}],[11,"get_difficulty","","",128,{"inputs":[{"name":"self"}],"output":{"name":"difficulty"}}],[11,"is_initialized","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",128,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",128,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",128,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",128,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",128,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",128,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",128,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",128,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",128,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",128,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",128,{"inputs":[],"output":{"name":"playersetup"}}],[11,"descriptor_static","","",128,{"inputs":[{"generics":["playersetup"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",128,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",128,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"spatialcamerasetup"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"self"},{"name":"spatialcamerasetup"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"default","","",129,{"inputs":[],"output":{"name":"spatialcamerasetup"}}],[11,"new","","",129,{"inputs":[],"output":{"name":"spatialcamerasetup"}}],[11,"default_instance","","",129,{"inputs":[],"output":{"name":"spatialcamerasetup"}}],[11,"clear_width","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"has_width","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_width","","",129,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_width","","",129,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_resolution","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"has_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_resolution","","",129,{"inputs":[{"name":"self"},{"name":"size2di"}],"output":null}],[11,"mut_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"take_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"get_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"clear_minimap_resolution","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"has_minimap_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_minimap_resolution","","",129,{"inputs":[{"name":"self"},{"name":"size2di"}],"output":null}],[11,"mut_minimap_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"take_minimap_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"get_minimap_resolution","","",129,{"inputs":[{"name":"self"}],"output":{"name":"size2di"}}],[11,"is_initialized","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",129,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",129,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",129,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",129,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",129,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",129,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",129,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",129,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",129,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",129,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",129,{"inputs":[],"output":{"name":"spatialcamerasetup"}}],[11,"descriptor_static","","",129,{"inputs":[{"generics":["spatialcamerasetup"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",129,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"interfaceoptions"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"self"},{"name":"interfaceoptions"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"interfaceoptions"}}],[11,"default","","",130,{"inputs":[],"output":{"name":"interfaceoptions"}}],[11,"new","","",130,{"inputs":[],"output":{"name":"interfaceoptions"}}],[11,"default_instance","","",130,{"inputs":[],"output":{"name":"interfaceoptions"}}],[11,"clear_raw","","",130,{"inputs":[{"name":"self"}],"output":null}],[11,"has_raw","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_raw","","",130,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_raw","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_score","","",130,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score","","",130,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_score","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clear_feature_layer","","",130,{"inputs":[{"name":"self"}],"output":null}],[11,"has_feature_layer","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_feature_layer","","",130,{"inputs":[{"name":"self"},{"name":"spatialcamerasetup"}],"output":null}],[11,"mut_feature_layer","","",130,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"take_feature_layer","","",130,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"get_feature_layer","","",130,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"clear_render","","",130,{"inputs":[{"name":"self"}],"output":null}],[11,"has_render","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_render","","",130,{"inputs":[{"name":"self"},{"name":"spatialcamerasetup"}],"output":null}],[11,"mut_render","","",130,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"take_render","","",130,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"get_render","","",130,{"inputs":[{"name":"self"}],"output":{"name":"spatialcamerasetup"}}],[11,"is_initialized","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",130,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",130,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",130,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",130,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",130,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",130,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",130,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",130,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",130,{"inputs":[],"output":{"name":"interfaceoptions"}}],[11,"descriptor_static","","",130,{"inputs":[{"generics":["interfaceoptions"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",130,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",130,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"playerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"self"},{"name":"playerinfo"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"playerinfo"}}],[11,"default","","",131,{"inputs":[],"output":{"name":"playerinfo"}}],[11,"new","","",131,{"inputs":[],"output":{"name":"playerinfo"}}],[11,"default_instance","","",131,{"inputs":[],"output":{"name":"playerinfo"}}],[11,"clear_player_id","","",131,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",131,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_player_id","","",131,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_field_type","","",131,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",131,{"inputs":[{"name":"self"},{"name":"playertype"}],"output":null}],[11,"get_field_type","","",131,{"inputs":[{"name":"self"}],"output":{"name":"playertype"}}],[11,"clear_race_requested","","",131,{"inputs":[{"name":"self"}],"output":null}],[11,"has_race_requested","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_race_requested","","",131,{"inputs":[{"name":"self"},{"name":"race"}],"output":null}],[11,"get_race_requested","","",131,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"clear_race_actual","","",131,{"inputs":[{"name":"self"}],"output":null}],[11,"has_race_actual","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_race_actual","","",131,{"inputs":[{"name":"self"},{"name":"race"}],"output":null}],[11,"get_race_actual","","",131,{"inputs":[{"name":"self"}],"output":{"name":"race"}}],[11,"clear_difficulty","","",131,{"inputs":[{"name":"self"}],"output":null}],[11,"has_difficulty","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_difficulty","","",131,{"inputs":[{"name":"self"},{"name":"difficulty"}],"output":null}],[11,"get_difficulty","","",131,{"inputs":[{"name":"self"}],"output":{"name":"difficulty"}}],[11,"is_initialized","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",131,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",131,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",131,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",131,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",131,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",131,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",131,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",131,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",131,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",131,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",131,{"inputs":[],"output":{"name":"playerinfo"}}],[11,"descriptor_static","","",131,{"inputs":[{"generics":["playerinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",131,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",131,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"playercommon"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"self"},{"name":"playercommon"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"playercommon"}}],[11,"default","","",132,{"inputs":[],"output":{"name":"playercommon"}}],[11,"new","","",132,{"inputs":[],"output":{"name":"playercommon"}}],[11,"default_instance","","",132,{"inputs":[],"output":{"name":"playercommon"}}],[11,"clear_player_id","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_player_id","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_minerals","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_minerals","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_minerals","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_minerals","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_vespene","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_vespene","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_vespene","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_vespene","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_food_cap","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_cap","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_cap","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_food_cap","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_food_used","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_used","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_used","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_food_used","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_food_army","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_army","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_army","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_food_army","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_food_workers","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_workers","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_workers","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_food_workers","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_idle_worker_count","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_idle_worker_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_idle_worker_count","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_idle_worker_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_army_count","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_army_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_army_count","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_army_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_warp_gate_count","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_warp_gate_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_warp_gate_count","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_warp_gate_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_larva_count","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"has_larva_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_larva_count","","",132,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_larva_count","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",132,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",132,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",132,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",132,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",132,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",132,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",132,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",132,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",132,{"inputs":[],"output":{"name":"playercommon"}}],[11,"descriptor_static","","",132,{"inputs":[{"generics":["playercommon"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",132,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",132,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"observation"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"self"},{"name":"observation"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observation"}}],[11,"default","","",133,{"inputs":[],"output":{"name":"observation"}}],[11,"new","","",133,{"inputs":[],"output":{"name":"observation"}}],[11,"default_instance","","",133,{"inputs":[],"output":{"name":"observation"}}],[11,"clear_game_loop","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_game_loop","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_game_loop","","",133,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_game_loop","","",133,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_player_common","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_common","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_common","","",133,{"inputs":[{"name":"self"},{"name":"playercommon"}],"output":null}],[11,"mut_player_common","","",133,{"inputs":[{"name":"self"}],"output":{"name":"playercommon"}}],[11,"take_player_common","","",133,{"inputs":[{"name":"self"}],"output":{"name":"playercommon"}}],[11,"get_player_common","","",133,{"inputs":[{"name":"self"}],"output":{"name":"playercommon"}}],[11,"clear_alerts","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"set_alerts","","",133,{"inputs":[{"name":"self"},{"generics":["alert"],"name":"vec"}],"output":null}],[11,"mut_alerts","","",133,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"take_alerts","","",133,{"inputs":[{"name":"self"}],"output":{"generics":["alert"],"name":"vec"}}],[11,"get_alerts","","",133,null],[11,"clear_abilities","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"set_abilities","","",133,{"inputs":[{"name":"self"},{"generics":["availableability"],"name":"repeatedfield"}],"output":null}],[11,"mut_abilities","","",133,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_abilities","","",133,{"inputs":[{"name":"self"}],"output":{"generics":["availableability"],"name":"repeatedfield"}}],[11,"get_abilities","","",133,null],[11,"clear_score","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score","","",133,{"inputs":[{"name":"self"},{"name":"score"}],"output":null}],[11,"mut_score","","",133,{"inputs":[{"name":"self"}],"output":{"name":"score"}}],[11,"take_score","","",133,{"inputs":[{"name":"self"}],"output":{"name":"score"}}],[11,"get_score","","",133,{"inputs":[{"name":"self"}],"output":{"name":"score"}}],[11,"clear_raw_data","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_raw_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_raw_data","","",133,{"inputs":[{"name":"self"},{"name":"observationraw"}],"output":null}],[11,"mut_raw_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationraw"}}],[11,"take_raw_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationraw"}}],[11,"get_raw_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationraw"}}],[11,"clear_feature_layer_data","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_feature_layer_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_feature_layer_data","","",133,{"inputs":[{"name":"self"},{"name":"observationfeaturelayer"}],"output":null}],[11,"mut_feature_layer_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationfeaturelayer"}}],[11,"take_feature_layer_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationfeaturelayer"}}],[11,"get_feature_layer_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationfeaturelayer"}}],[11,"clear_render_data","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_render_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_render_data","","",133,{"inputs":[{"name":"self"},{"name":"observationrender"}],"output":null}],[11,"mut_render_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationrender"}}],[11,"take_render_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationrender"}}],[11,"get_render_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationrender"}}],[11,"clear_ui_data","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ui_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ui_data","","",133,{"inputs":[{"name":"self"},{"name":"observationui"}],"output":null}],[11,"mut_ui_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationui"}}],[11,"take_ui_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationui"}}],[11,"get_ui_data","","",133,{"inputs":[{"name":"self"}],"output":{"name":"observationui"}}],[11,"is_initialized","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",133,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",133,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",133,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",133,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",133,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",133,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",133,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",133,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",133,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",133,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",133,{"inputs":[],"output":{"name":"observation"}}],[11,"descriptor_static","","",133,{"inputs":[{"generics":["observation"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",133,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",133,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"action"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"self"},{"name":"action"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"action"}}],[11,"default","","",134,{"inputs":[],"output":{"name":"action"}}],[11,"new","","",134,{"inputs":[],"output":{"name":"action"}}],[11,"default_instance","","",134,{"inputs":[],"output":{"name":"action"}}],[11,"clear_action_raw","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action_raw","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action_raw","","",134,{"inputs":[{"name":"self"},{"name":"actionraw"}],"output":null}],[11,"mut_action_raw","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionraw"}}],[11,"take_action_raw","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionraw"}}],[11,"get_action_raw","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionraw"}}],[11,"clear_action_feature_layer","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action_feature_layer","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action_feature_layer","","",134,{"inputs":[{"name":"self"},{"name":"actionspatial"}],"output":null}],[11,"mut_action_feature_layer","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"take_action_feature_layer","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"get_action_feature_layer","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"clear_action_render","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action_render","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action_render","","",134,{"inputs":[{"name":"self"},{"name":"actionspatial"}],"output":null}],[11,"mut_action_render","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"take_action_render","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"get_action_render","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"clear_action_ui","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action_ui","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action_ui","","",134,{"inputs":[{"name":"self"},{"name":"actionui"}],"output":null}],[11,"mut_action_ui","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionui"}}],[11,"take_action_ui","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionui"}}],[11,"get_action_ui","","",134,{"inputs":[{"name":"self"}],"output":{"name":"actionui"}}],[11,"clear_chat","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"set_chat","","",134,{"inputs":[{"name":"self"},{"generics":["actionchat"],"name":"repeatedfield"}],"output":null}],[11,"mut_chat","","",134,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_chat","","",134,{"inputs":[{"name":"self"}],"output":{"generics":["actionchat"],"name":"repeatedfield"}}],[11,"get_chat","","",134,null],[11,"is_initialized","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",134,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",134,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",134,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",134,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",134,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",134,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",134,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",134,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",134,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",134,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",134,{"inputs":[],"output":{"name":"action"}}],[11,"descriptor_static","","",134,{"inputs":[{"generics":["action"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",134,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",134,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"actionchat"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"self"},{"name":"actionchat"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"actionchat"}}],[11,"default","","",135,{"inputs":[],"output":{"name":"actionchat"}}],[11,"new","","",135,{"inputs":[],"output":{"name":"actionchat"}}],[11,"default_instance","","",135,{"inputs":[],"output":{"name":"actionchat"}}],[11,"clear_channel","","",135,{"inputs":[{"name":"self"}],"output":null}],[11,"has_channel","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_channel","","",135,{"inputs":[{"name":"self"},{"name":"actionchat_channel"}],"output":null}],[11,"get_channel","","",135,{"inputs":[{"name":"self"}],"output":{"name":"actionchat_channel"}}],[11,"clear_message","","",135,{"inputs":[{"name":"self"}],"output":null}],[11,"has_message","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_message","","",135,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"mut_message","","",135,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"take_message","","",135,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_message","","",135,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_initialized","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",135,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",135,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",135,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",135,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",135,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",135,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",135,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",135,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",135,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",135,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",135,{"inputs":[],"output":{"name":"actionchat"}}],[11,"descriptor_static","","",135,{"inputs":[{"generics":["actionchat"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",135,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",135,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"actionchat_channel"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"actionchat_channel"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",78,null],[11,"value","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",78,{"inputs":[{"name":"i32"}],"output":{"generics":["actionchat_channel"],"name":"option"}}],[11,"values","","",78,null],[11,"enum_descriptor_static","","",78,{"inputs":[{"generics":["actionchat_channel"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",78,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"actionerror"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"self"},{"name":"actionerror"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"actionerror"}}],[11,"default","","",136,{"inputs":[],"output":{"name":"actionerror"}}],[11,"new","","",136,{"inputs":[],"output":{"name":"actionerror"}}],[11,"default_instance","","",136,{"inputs":[],"output":{"name":"actionerror"}}],[11,"clear_unit_tag","","",136,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_tag","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_tag","","",136,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_unit_tag","","",136,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_ability_id","","",136,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",136,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"get_ability_id","","",136,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clear_result","","",136,{"inputs":[{"name":"self"}],"output":null}],[11,"has_result","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_result","","",136,{"inputs":[{"name":"self"},{"name":"actionresult"}],"output":null}],[11,"get_result","","",136,{"inputs":[{"name":"self"}],"output":{"name":"actionresult"}}],[11,"is_initialized","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",136,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",136,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",136,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",136,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",136,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",136,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",136,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",136,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",136,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",136,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",136,{"inputs":[],"output":{"name":"actionerror"}}],[11,"descriptor_static","","",136,{"inputs":[{"generics":["actionerror"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",136,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",136,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"playerresult"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"self"},{"name":"playerresult"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"playerresult"}}],[11,"default","","",137,{"inputs":[],"output":{"name":"playerresult"}}],[11,"new","","",137,{"inputs":[],"output":{"name":"playerresult"}}],[11,"default_instance","","",137,{"inputs":[],"output":{"name":"playerresult"}}],[11,"clear_player_id","","",137,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",137,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_player_id","","",137,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_result","","",137,{"inputs":[{"name":"self"}],"output":null}],[11,"has_result","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_result","","",137,{"inputs":[{"name":"self"},{"name":"result"}],"output":null}],[11,"get_result","","",137,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is_initialized","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",137,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",137,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",137,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",137,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",137,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",137,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",137,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",137,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",137,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",137,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",137,{"inputs":[],"output":{"name":"playerresult"}}],[11,"descriptor_static","","",137,{"inputs":[{"generics":["playerresult"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",137,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",137,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,null],[11,"value","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",79,{"inputs":[{"name":"i32"}],"output":{"generics":["status"],"name":"option"}}],[11,"values","","",79,null],[11,"enum_descriptor_static","","",79,{"inputs":[{"generics":["status"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",79,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"difficulty"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"difficulty"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",80,null],[11,"value","","",80,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",80,{"inputs":[{"name":"i32"}],"output":{"generics":["difficulty"],"name":"option"}}],[11,"values","","",80,null],[11,"enum_descriptor_static","","",80,{"inputs":[{"generics":["difficulty"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",80,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"playertype"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"playertype"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",81,null],[11,"value","","",81,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",81,{"inputs":[{"name":"i32"}],"output":{"generics":["playertype"],"name":"option"}}],[11,"values","","",81,null],[11,"enum_descriptor_static","","",81,{"inputs":[{"generics":["playertype"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",81,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"alert"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"alert"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"value","","",82,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",82,{"inputs":[{"name":"i32"}],"output":{"generics":["alert"],"name":"option"}}],[11,"values","","",82,null],[11,"enum_descriptor_static","","",82,{"inputs":[{"generics":["alert"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",82,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"result"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",83,null],[11,"value","","",83,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",83,{"inputs":[{"name":"i32"}],"output":{"generics":["result"],"name":"option"}}],[11,"values","","",83,null],[11,"enum_descriptor_static","","",83,{"inputs":[{"generics":["result"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",83,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"score","sc2_proto","",null,null],[3,"Score","sc2_proto::score","",null,null],[3,"CategoryScoreDetails","","",null,null],[3,"VitalScoreDetails","","",null,null],[3,"ScoreDetails","","",null,null],[4,"Score_ScoreType","","",null,null],[13,"Curriculum","","",138,null],[13,"Melee","","",138,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"score"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"self"},{"name":"score"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"score"}}],[11,"default","","",139,{"inputs":[],"output":{"name":"score"}}],[11,"new","","",139,{"inputs":[],"output":{"name":"score"}}],[11,"default_instance","","",139,{"inputs":[],"output":{"name":"score"}}],[11,"clear_score_type","","",139,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score_type","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score_type","","",139,{"inputs":[{"name":"self"},{"name":"score_scoretype"}],"output":null}],[11,"get_score_type","","",139,{"inputs":[{"name":"self"}],"output":{"name":"score_scoretype"}}],[11,"clear_score","","",139,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score","","",139,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_score","","",139,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_score_details","","",139,{"inputs":[{"name":"self"}],"output":null}],[11,"has_score_details","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_score_details","","",139,{"inputs":[{"name":"self"},{"name":"scoredetails"}],"output":null}],[11,"mut_score_details","","",139,{"inputs":[{"name":"self"}],"output":{"name":"scoredetails"}}],[11,"take_score_details","","",139,{"inputs":[{"name":"self"}],"output":{"name":"scoredetails"}}],[11,"get_score_details","","",139,{"inputs":[{"name":"self"}],"output":{"name":"scoredetails"}}],[11,"is_initialized","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",139,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",139,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",139,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",139,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",139,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",139,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",139,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",139,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",139,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",139,{"inputs":[],"output":{"name":"score"}}],[11,"descriptor_static","","",139,{"inputs":[{"generics":["score"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",139,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",139,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"score_scoretype"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"score_scoretype"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",138,null],[11,"value","","",138,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",138,{"inputs":[{"name":"i32"}],"output":{"generics":["score_scoretype"],"name":"option"}}],[11,"values","","",138,null],[11,"enum_descriptor_static","","",138,{"inputs":[{"generics":["score_scoretype"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",138,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"default","","",140,{"inputs":[],"output":{"name":"categoryscoredetails"}}],[11,"new","","",140,{"inputs":[],"output":{"name":"categoryscoredetails"}}],[11,"default_instance","","",140,{"inputs":[],"output":{"name":"categoryscoredetails"}}],[11,"clear_none","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"has_none","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_none","","",140,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_none","","",140,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_army","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"has_army","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_army","","",140,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_army","","",140,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_economy","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"has_economy","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_economy","","",140,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_economy","","",140,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_technology","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"has_technology","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_technology","","",140,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_technology","","",140,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_upgrade","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"has_upgrade","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_upgrade","","",140,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_upgrade","","",140,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",140,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",140,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",140,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",140,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",140,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",140,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",140,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",140,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",140,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",140,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",140,{"inputs":[],"output":{"name":"categoryscoredetails"}}],[11,"descriptor_static","","",140,{"inputs":[{"generics":["categoryscoredetails"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",140,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",140,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"vitalscoredetails"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"self"},{"name":"vitalscoredetails"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"default","","",141,{"inputs":[],"output":{"name":"vitalscoredetails"}}],[11,"new","","",141,{"inputs":[],"output":{"name":"vitalscoredetails"}}],[11,"default_instance","","",141,{"inputs":[],"output":{"name":"vitalscoredetails"}}],[11,"clear_life","","",141,{"inputs":[{"name":"self"}],"output":null}],[11,"has_life","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_life","","",141,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_life","","",141,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_shields","","",141,{"inputs":[{"name":"self"}],"output":null}],[11,"has_shields","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_shields","","",141,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_shields","","",141,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_energy","","",141,{"inputs":[{"name":"self"}],"output":null}],[11,"has_energy","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_energy","","",141,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_energy","","",141,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"is_initialized","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",141,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",141,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",141,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",141,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",141,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",141,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",141,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",141,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",141,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",141,{"inputs":[],"output":{"name":"vitalscoredetails"}}],[11,"descriptor_static","","",141,{"inputs":[{"generics":["vitalscoredetails"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",141,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",141,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"scoredetails"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"self"},{"name":"scoredetails"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"scoredetails"}}],[11,"default","","",142,{"inputs":[],"output":{"name":"scoredetails"}}],[11,"new","","",142,{"inputs":[],"output":{"name":"scoredetails"}}],[11,"default_instance","","",142,{"inputs":[],"output":{"name":"scoredetails"}}],[11,"clear_idle_production_time","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_idle_production_time","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_idle_production_time","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_idle_production_time","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_idle_worker_time","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_idle_worker_time","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_idle_worker_time","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_idle_worker_time","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_total_value_units","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_value_units","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_value_units","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_total_value_units","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_total_value_structures","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_value_structures","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_value_structures","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_total_value_structures","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_killed_value_units","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_killed_value_units","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_killed_value_units","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_killed_value_units","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_killed_value_structures","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_killed_value_structures","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_killed_value_structures","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_killed_value_structures","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_collected_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_collected_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_collected_minerals","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_collected_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_collected_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_collected_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_collected_vespene","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_collected_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_collection_rate_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_collection_rate_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_collection_rate_minerals","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_collection_rate_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_collection_rate_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_collection_rate_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_collection_rate_vespene","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_collection_rate_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_spent_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_spent_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_spent_minerals","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_spent_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_spent_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_spent_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_spent_vespene","","",142,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_spent_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_food_used","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_food_used","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_food_used","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_food_used","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_food_used","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_food_used","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_killed_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_killed_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_killed_minerals","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_killed_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_killed_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_killed_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_killed_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_killed_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_killed_vespene","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_killed_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_killed_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_killed_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_lost_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_lost_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_lost_minerals","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_lost_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_lost_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_lost_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_lost_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_lost_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_lost_vespene","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_lost_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_lost_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_lost_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_friendly_fire_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_friendly_fire_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_friendly_fire_minerals","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_friendly_fire_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_friendly_fire_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_friendly_fire_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_friendly_fire_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_friendly_fire_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_friendly_fire_vespene","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_friendly_fire_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_friendly_fire_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_friendly_fire_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_used_minerals","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_used_vespene","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_total_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_used_minerals","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_total_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_total_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_total_used_minerals","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_total_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_used_vespene","","",142,{"inputs":[{"name":"self"},{"name":"categoryscoredetails"}],"output":null}],[11,"mut_total_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"take_total_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"get_total_used_vespene","","",142,{"inputs":[{"name":"self"}],"output":{"name":"categoryscoredetails"}}],[11,"clear_total_damage_dealt","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_damage_dealt","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_damage_dealt","","",142,{"inputs":[{"name":"self"},{"name":"vitalscoredetails"}],"output":null}],[11,"mut_total_damage_dealt","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"take_total_damage_dealt","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"get_total_damage_dealt","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"clear_total_damage_taken","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_damage_taken","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_damage_taken","","",142,{"inputs":[{"name":"self"},{"name":"vitalscoredetails"}],"output":null}],[11,"mut_total_damage_taken","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"take_total_damage_taken","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"get_total_damage_taken","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"clear_total_healed","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"has_total_healed","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_total_healed","","",142,{"inputs":[{"name":"self"},{"name":"vitalscoredetails"}],"output":null}],[11,"mut_total_healed","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"take_total_healed","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"get_total_healed","","",142,{"inputs":[{"name":"self"}],"output":{"name":"vitalscoredetails"}}],[11,"is_initialized","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",142,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",142,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",142,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",142,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",142,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",142,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",142,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",142,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",142,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",142,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",142,{"inputs":[],"output":{"name":"scoredetails"}}],[11,"descriptor_static","","",142,{"inputs":[{"generics":["scoredetails"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",142,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",142,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"spatial","sc2_proto","",null,null],[3,"ObservationFeatureLayer","sc2_proto::spatial","",null,null],[3,"FeatureLayers","","",null,null],[3,"FeatureLayersMinimap","","",null,null],[3,"ObservationRender","","",null,null],[3,"ActionSpatial","","",null,null],[3,"ActionSpatialUnitCommand","","",null,null],[3,"ActionSpatialCameraMove","","",null,null],[3,"ActionSpatialUnitSelectionPoint","","",null,null],[3,"ActionSpatialUnitSelectionRect","","",null,null],[4,"ActionSpatial_oneof_action","","",null,null],[13,"unit_command","","",143,null],[13,"camera_move","","",143,null],[13,"unit_selection_point","","",143,null],[13,"unit_selection_rect","","",143,null],[4,"ActionSpatialUnitCommand_oneof_target","","",null,null],[13,"target_screen_coord","","",144,null],[13,"target_minimap_coord","","",144,null],[4,"ActionSpatialUnitSelectionPoint_Type","","",null,null],[13,"Select","","",145,null],[13,"Toggle","","",145,null],[13,"AllType","","",145,null],[13,"AddAllType","","",145,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"observationfeaturelayer"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"self"},{"name":"observationfeaturelayer"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"observationfeaturelayer"}}],[11,"default","","",146,{"inputs":[],"output":{"name":"observationfeaturelayer"}}],[11,"new","","",146,{"inputs":[],"output":{"name":"observationfeaturelayer"}}],[11,"default_instance","","",146,{"inputs":[],"output":{"name":"observationfeaturelayer"}}],[11,"clear_renders","","",146,{"inputs":[{"name":"self"}],"output":null}],[11,"has_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_renders","","",146,{"inputs":[{"name":"self"},{"name":"featurelayers"}],"output":null}],[11,"mut_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"featurelayers"}}],[11,"take_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"featurelayers"}}],[11,"get_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"featurelayers"}}],[11,"clear_minimap_renders","","",146,{"inputs":[{"name":"self"}],"output":null}],[11,"has_minimap_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_minimap_renders","","",146,{"inputs":[{"name":"self"},{"name":"featurelayersminimap"}],"output":null}],[11,"mut_minimap_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"featurelayersminimap"}}],[11,"take_minimap_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"featurelayersminimap"}}],[11,"get_minimap_renders","","",146,{"inputs":[{"name":"self"}],"output":{"name":"featurelayersminimap"}}],[11,"is_initialized","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",146,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",146,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",146,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",146,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",146,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",146,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",146,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",146,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",146,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",146,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",146,{"inputs":[],"output":{"name":"observationfeaturelayer"}}],[11,"descriptor_static","","",146,{"inputs":[{"generics":["observationfeaturelayer"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",146,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",146,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"featurelayers"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"self"},{"name":"featurelayers"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"featurelayers"}}],[11,"default","","",147,{"inputs":[],"output":{"name":"featurelayers"}}],[11,"new","","",147,{"inputs":[],"output":{"name":"featurelayers"}}],[11,"default_instance","","",147,{"inputs":[],"output":{"name":"featurelayers"}}],[11,"clear_height_map","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_height_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_height_map","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_height_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_height_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_height_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_visibility_map","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_visibility_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_visibility_map","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_visibility_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_visibility_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_visibility_map","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_creep","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_creep","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_creep","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_creep","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_creep","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_creep","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_power","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_power","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_power","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_power","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_power","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_power","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_player_id","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_player_id","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_player_id","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_player_id","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_type","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_type","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_type","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_type","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_selected","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_selected","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_selected","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_selected","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_selected","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_selected","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_hit_points","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_hit_points","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_hit_points","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_hit_points","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_hit_points","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_hit_points","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_hit_points_ratio","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_hit_points_ratio","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_hit_points_ratio","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_hit_points_ratio","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_hit_points_ratio","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_hit_points_ratio","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_energy","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_energy","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_energy","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_energy","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_energy","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_energy","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_shields","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_shields","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_shields","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_shields","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_shields","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_shields","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_player_relative","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_relative","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_relative","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_player_relative","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_player_relative","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_player_relative","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_density_aa","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_density_aa","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_density_aa","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_density_aa","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_density_aa","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_density_aa","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_density","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_density","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_density","","",147,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_density","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_density","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_density","","",147,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"is_initialized","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",147,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",147,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",147,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",147,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",147,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",147,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",147,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",147,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",147,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",147,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",147,{"inputs":[],"output":{"name":"featurelayers"}}],[11,"descriptor_static","","",147,{"inputs":[{"generics":["featurelayers"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",147,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",147,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"featurelayersminimap"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"self"},{"name":"featurelayersminimap"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"featurelayersminimap"}}],[11,"default","","",148,{"inputs":[],"output":{"name":"featurelayersminimap"}}],[11,"new","","",148,{"inputs":[],"output":{"name":"featurelayersminimap"}}],[11,"default_instance","","",148,{"inputs":[],"output":{"name":"featurelayersminimap"}}],[11,"clear_height_map","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_height_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_height_map","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_height_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_height_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_height_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_visibility_map","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_visibility_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_visibility_map","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_visibility_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_visibility_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_visibility_map","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_creep","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_creep","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_creep","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_creep","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_creep","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_creep","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_camera","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_camera","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_camera","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_camera","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_camera","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_camera","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_player_id","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_id","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_id","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_player_id","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_player_id","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_player_id","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_player_relative","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_relative","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_relative","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_player_relative","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_player_relative","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_player_relative","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_selected","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_selected","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_selected","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_selected","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_selected","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_selected","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_unit_type","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type","","",148,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_unit_type","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_unit_type","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_unit_type","","",148,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"is_initialized","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",148,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",148,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",148,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",148,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",148,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",148,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",148,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",148,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",148,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",148,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",148,{"inputs":[],"output":{"name":"featurelayersminimap"}}],[11,"descriptor_static","","",148,{"inputs":[{"generics":["featurelayersminimap"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",148,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",148,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"observationrender"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"self"},{"name":"observationrender"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"observationrender"}}],[11,"default","","",149,{"inputs":[],"output":{"name":"observationrender"}}],[11,"new","","",149,{"inputs":[],"output":{"name":"observationrender"}}],[11,"default_instance","","",149,{"inputs":[],"output":{"name":"observationrender"}}],[11,"clear_map","","",149,{"inputs":[{"name":"self"}],"output":null}],[11,"has_map","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_map","","",149,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_map","","",149,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_map","","",149,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_map","","",149,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"clear_minimap","","",149,{"inputs":[{"name":"self"}],"output":null}],[11,"has_minimap","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_minimap","","",149,{"inputs":[{"name":"self"},{"name":"imagedata"}],"output":null}],[11,"mut_minimap","","",149,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"take_minimap","","",149,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"get_minimap","","",149,{"inputs":[{"name":"self"}],"output":{"name":"imagedata"}}],[11,"is_initialized","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",149,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",149,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",149,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",149,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",149,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",149,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",149,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",149,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",149,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",149,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",149,{"inputs":[],"output":{"name":"observationrender"}}],[11,"descriptor_static","","",149,{"inputs":[{"generics":["observationrender"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",149,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",149,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"actionspatial"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"self"},{"name":"actionspatial"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial"}}],[11,"default","","",150,{"inputs":[],"output":{"name":"actionspatial"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"actionspatial_oneof_action"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"actionspatial_oneof_action"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"self"},{"name":"actionspatial_oneof_action"}],"output":{"name":"bool"}}],[11,"new","","",150,{"inputs":[],"output":{"name":"actionspatial"}}],[11,"default_instance","","",150,{"inputs":[],"output":{"name":"actionspatial"}}],[11,"clear_unit_command","","",150,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_command","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_command","","",150,{"inputs":[{"name":"self"},{"name":"actionspatialunitcommand"}],"output":null}],[11,"mut_unit_command","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitcommand"}}],[11,"take_unit_command","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitcommand"}}],[11,"get_unit_command","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitcommand"}}],[11,"clear_camera_move","","",150,{"inputs":[{"name":"self"}],"output":null}],[11,"has_camera_move","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_camera_move","","",150,{"inputs":[{"name":"self"},{"name":"actionspatialcameramove"}],"output":null}],[11,"mut_camera_move","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialcameramove"}}],[11,"take_camera_move","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialcameramove"}}],[11,"get_camera_move","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialcameramove"}}],[11,"clear_unit_selection_point","","",150,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_selection_point","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_selection_point","","",150,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionpoint"}],"output":null}],[11,"mut_unit_selection_point","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"take_unit_selection_point","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"get_unit_selection_point","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"clear_unit_selection_rect","","",150,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_selection_rect","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_selection_rect","","",150,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionrect"}],"output":null}],[11,"mut_unit_selection_rect","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionrect"}}],[11,"take_unit_selection_rect","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionrect"}}],[11,"get_unit_selection_rect","","",150,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionrect"}}],[11,"is_initialized","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",150,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",150,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",150,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",150,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",150,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",150,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",150,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",150,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",150,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",150,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",150,{"inputs":[],"output":{"name":"actionspatial"}}],[11,"descriptor_static","","",150,{"inputs":[{"generics":["actionspatial"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",150,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",150,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"actionspatialunitcommand"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"self"},{"name":"actionspatialunitcommand"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitcommand"}}],[11,"default","","",151,{"inputs":[],"output":{"name":"actionspatialunitcommand"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitcommand_oneof_target"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"actionspatialunitcommand_oneof_target"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"self"},{"name":"actionspatialunitcommand_oneof_target"}],"output":{"name":"bool"}}],[11,"new","","",151,{"inputs":[],"output":{"name":"actionspatialunitcommand"}}],[11,"default_instance","","",151,{"inputs":[],"output":{"name":"actionspatialunitcommand"}}],[11,"clear_ability_id","","",151,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",151,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ability_id","","",151,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_target_screen_coord","","",151,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_screen_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_screen_coord","","",151,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":null}],[11,"mut_target_screen_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"take_target_screen_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"get_target_screen_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"clear_target_minimap_coord","","",151,{"inputs":[{"name":"self"}],"output":null}],[11,"has_target_minimap_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_target_minimap_coord","","",151,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":null}],[11,"mut_target_minimap_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"take_target_minimap_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"get_target_minimap_coord","","",151,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"clear_queue_command","","",151,{"inputs":[{"name":"self"}],"output":null}],[11,"has_queue_command","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_queue_command","","",151,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_queue_command","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",151,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",151,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",151,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",151,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",151,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",151,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",151,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",151,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",151,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",151,{"inputs":[],"output":{"name":"actionspatialunitcommand"}}],[11,"descriptor_static","","",151,{"inputs":[{"generics":["actionspatialunitcommand"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",151,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",151,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"actionspatialcameramove"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"self"},{"name":"actionspatialcameramove"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialcameramove"}}],[11,"default","","",152,{"inputs":[],"output":{"name":"actionspatialcameramove"}}],[11,"new","","",152,{"inputs":[],"output":{"name":"actionspatialcameramove"}}],[11,"default_instance","","",152,{"inputs":[],"output":{"name":"actionspatialcameramove"}}],[11,"clear_center_minimap","","",152,{"inputs":[{"name":"self"}],"output":null}],[11,"has_center_minimap","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_center_minimap","","",152,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":null}],[11,"mut_center_minimap","","",152,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"take_center_minimap","","",152,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"get_center_minimap","","",152,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"is_initialized","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",152,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",152,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",152,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",152,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",152,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",152,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",152,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",152,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",152,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",152,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",152,{"inputs":[],"output":{"name":"actionspatialcameramove"}}],[11,"descriptor_static","","",152,{"inputs":[{"generics":["actionspatialcameramove"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",152,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",152,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionpoint"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionpoint"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"default","","",153,{"inputs":[],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"new","","",153,{"inputs":[],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"default_instance","","",153,{"inputs":[],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"clear_selection_screen_coord","","",153,{"inputs":[{"name":"self"}],"output":null}],[11,"has_selection_screen_coord","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_selection_screen_coord","","",153,{"inputs":[{"name":"self"},{"name":"pointi"}],"output":null}],[11,"mut_selection_screen_coord","","",153,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"take_selection_screen_coord","","",153,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"get_selection_screen_coord","","",153,{"inputs":[{"name":"self"}],"output":{"name":"pointi"}}],[11,"clear_field_type","","",153,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",153,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionpoint_type"}],"output":null}],[11,"get_field_type","","",153,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionpoint_type"}}],[11,"is_initialized","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",153,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",153,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",153,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",153,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",153,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",153,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",153,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",153,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",153,{"inputs":[],"output":{"name":"actionspatialunitselectionpoint"}}],[11,"descriptor_static","","",153,{"inputs":[{"generics":["actionspatialunitselectionpoint"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",153,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",153,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionpoint_type"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionpoint_type"}],"output":{"name":"bool"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",145,null],[11,"value","","",145,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",145,{"inputs":[{"name":"i32"}],"output":{"generics":["actionspatialunitselectionpoint_type"],"name":"option"}}],[11,"values","","",145,null],[11,"enum_descriptor_static","","",145,{"inputs":[{"generics":["actionspatialunitselectionpoint_type"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",145,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionrect"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"self"},{"name":"actionspatialunitselectionrect"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"actionspatialunitselectionrect"}}],[11,"default","","",154,{"inputs":[],"output":{"name":"actionspatialunitselectionrect"}}],[11,"new","","",154,{"inputs":[],"output":{"name":"actionspatialunitselectionrect"}}],[11,"default_instance","","",154,{"inputs":[],"output":{"name":"actionspatialunitselectionrect"}}],[11,"clear_selection_screen_coord","","",154,{"inputs":[{"name":"self"}],"output":null}],[11,"set_selection_screen_coord","","",154,{"inputs":[{"name":"self"},{"generics":["rectanglei"],"name":"repeatedfield"}],"output":null}],[11,"mut_selection_screen_coord","","",154,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_selection_screen_coord","","",154,{"inputs":[{"name":"self"}],"output":{"generics":["rectanglei"],"name":"repeatedfield"}}],[11,"get_selection_screen_coord","","",154,null],[11,"clear_selection_add","","",154,{"inputs":[{"name":"self"}],"output":null}],[11,"has_selection_add","","",154,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_selection_add","","",154,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_selection_add","","",154,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",154,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",154,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",154,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",154,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",154,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",154,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",154,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",154,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",154,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",154,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",154,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",154,{"inputs":[],"output":{"name":"actionspatialunitselectionrect"}}],[11,"descriptor_static","","",154,{"inputs":[{"generics":["actionspatialunitselectionrect"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",154,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",154,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[0,"ui","sc2_proto","",null,null],[3,"ObservationUI","sc2_proto::ui","",null,null],[3,"ControlGroup","","",null,null],[3,"UnitInfo","","",null,null],[3,"SinglePanel","","",null,null],[3,"MultiPanel","","",null,null],[3,"CargoPanel","","",null,null],[3,"ProductionPanel","","",null,null],[3,"ActionUI","","",null,null],[3,"ActionControlGroup","","",null,null],[3,"ActionSelectArmy","","",null,null],[3,"ActionSelectWarpGates","","",null,null],[3,"ActionSelectLarva","","",null,null],[3,"ActionSelectIdleWorker","","",null,null],[3,"ActionMultiPanel","","",null,null],[3,"ActionCargoPanelUnload","","",null,null],[3,"ActionProductionPanelRemoveFromQueue","","",null,null],[3,"ActionToggleAutocast","","",null,null],[4,"ObservationUI_oneof_panel","","",null,null],[13,"single","","",155,null],[13,"multi","","",155,null],[13,"cargo","","",155,null],[13,"production","","",155,null],[4,"ActionUI_oneof_action","","",null,null],[13,"control_group","","",156,null],[13,"select_army","","",156,null],[13,"select_warp_gates","","",156,null],[13,"select_larva","","",156,null],[13,"select_idle_worker","","",156,null],[13,"multi_panel","","",156,null],[13,"cargo_panel","","",156,null],[13,"production_panel","","",156,null],[13,"toggle_autocast","","",156,null],[4,"ActionControlGroup_ControlGroupAction","","",null,null],[13,"Recall","","",157,null],[13,"Set","","",157,null],[13,"Append","","",157,null],[13,"SetAndSteal","","",157,null],[13,"AppendAndSteal","","",157,null],[4,"ActionSelectIdleWorker_Type","","",null,null],[13,"Set","","",158,null],[13,"Add","","",158,null],[13,"All","","",158,null],[13,"AddAll","","",158,null],[4,"ActionMultiPanel_Type","","",null,null],[13,"SingleSelect","","",159,null],[13,"DeselectUnit","","",159,null],[13,"SelectAllOfType","","",159,null],[13,"DeselectAllOfType","","",159,null],[5,"file_descriptor_proto","","",null,{"inputs":[],"output":{"name":"filedescriptorproto"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"observationui"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"self"},{"name":"observationui"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"observationui"}}],[11,"default","","",160,{"inputs":[],"output":{"name":"observationui"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"observationui_oneof_panel"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"observationui_oneof_panel"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"self"},{"name":"observationui_oneof_panel"}],"output":{"name":"bool"}}],[11,"new","","",160,{"inputs":[],"output":{"name":"observationui"}}],[11,"default_instance","","",160,{"inputs":[],"output":{"name":"observationui"}}],[11,"clear_groups","","",160,{"inputs":[{"name":"self"}],"output":null}],[11,"set_groups","","",160,{"inputs":[{"name":"self"},{"generics":["controlgroup"],"name":"repeatedfield"}],"output":null}],[11,"mut_groups","","",160,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_groups","","",160,{"inputs":[{"name":"self"}],"output":{"generics":["controlgroup"],"name":"repeatedfield"}}],[11,"get_groups","","",160,null],[11,"clear_single","","",160,{"inputs":[{"name":"self"}],"output":null}],[11,"has_single","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_single","","",160,{"inputs":[{"name":"self"},{"name":"singlepanel"}],"output":null}],[11,"mut_single","","",160,{"inputs":[{"name":"self"}],"output":{"name":"singlepanel"}}],[11,"take_single","","",160,{"inputs":[{"name":"self"}],"output":{"name":"singlepanel"}}],[11,"get_single","","",160,{"inputs":[{"name":"self"}],"output":{"name":"singlepanel"}}],[11,"clear_multi","","",160,{"inputs":[{"name":"self"}],"output":null}],[11,"has_multi","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_multi","","",160,{"inputs":[{"name":"self"},{"name":"multipanel"}],"output":null}],[11,"mut_multi","","",160,{"inputs":[{"name":"self"}],"output":{"name":"multipanel"}}],[11,"take_multi","","",160,{"inputs":[{"name":"self"}],"output":{"name":"multipanel"}}],[11,"get_multi","","",160,{"inputs":[{"name":"self"}],"output":{"name":"multipanel"}}],[11,"clear_cargo","","",160,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cargo","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cargo","","",160,{"inputs":[{"name":"self"},{"name":"cargopanel"}],"output":null}],[11,"mut_cargo","","",160,{"inputs":[{"name":"self"}],"output":{"name":"cargopanel"}}],[11,"take_cargo","","",160,{"inputs":[{"name":"self"}],"output":{"name":"cargopanel"}}],[11,"get_cargo","","",160,{"inputs":[{"name":"self"}],"output":{"name":"cargopanel"}}],[11,"clear_production","","",160,{"inputs":[{"name":"self"}],"output":null}],[11,"has_production","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_production","","",160,{"inputs":[{"name":"self"},{"name":"productionpanel"}],"output":null}],[11,"mut_production","","",160,{"inputs":[{"name":"self"}],"output":{"name":"productionpanel"}}],[11,"take_production","","",160,{"inputs":[{"name":"self"}],"output":{"name":"productionpanel"}}],[11,"get_production","","",160,{"inputs":[{"name":"self"}],"output":{"name":"productionpanel"}}],[11,"is_initialized","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",160,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",160,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",160,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",160,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",160,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",160,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",160,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",160,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",160,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",160,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",160,{"inputs":[],"output":{"name":"observationui"}}],[11,"descriptor_static","","",160,{"inputs":[{"generics":["observationui"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",160,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",160,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"controlgroup"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"self"},{"name":"controlgroup"}],"output":{"name":"bool"}}],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"controlgroup"}}],[11,"default","","",161,{"inputs":[],"output":{"name":"controlgroup"}}],[11,"new","","",161,{"inputs":[],"output":{"name":"controlgroup"}}],[11,"default_instance","","",161,{"inputs":[],"output":{"name":"controlgroup"}}],[11,"clear_control_group_index","","",161,{"inputs":[{"name":"self"}],"output":null}],[11,"has_control_group_index","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_control_group_index","","",161,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_control_group_index","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_leader_unit_type","","",161,{"inputs":[{"name":"self"}],"output":null}],[11,"has_leader_unit_type","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_leader_unit_type","","",161,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_leader_unit_type","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_count","","",161,{"inputs":[{"name":"self"}],"output":null}],[11,"has_count","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_count","","",161,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_count","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",161,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",161,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",161,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",161,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",161,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",161,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",161,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",161,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",161,{"inputs":[],"output":{"name":"controlgroup"}}],[11,"descriptor_static","","",161,{"inputs":[{"generics":["controlgroup"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",161,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",161,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"unitinfo"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"self"},{"name":"unitinfo"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"default","","",162,{"inputs":[],"output":{"name":"unitinfo"}}],[11,"new","","",162,{"inputs":[],"output":{"name":"unitinfo"}}],[11,"default_instance","","",162,{"inputs":[],"output":{"name":"unitinfo"}}],[11,"clear_unit_type","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_type","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_type","","",162,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_unit_type","","",162,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_player_relative","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_player_relative","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_player_relative","","",162,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_player_relative","","",162,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear_health","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_health","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_health","","",162,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_health","","",162,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_shields","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_shields","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_shields","","",162,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_shields","","",162,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_energy","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_energy","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_energy","","",162,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_energy","","",162,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_transport_slots_taken","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_transport_slots_taken","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_transport_slots_taken","","",162,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_transport_slots_taken","","",162,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clear_build_progress","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_build_progress","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_build_progress","","",162,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[11,"get_build_progress","","",162,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"clear_add_on","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"has_add_on","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_add_on","","",162,{"inputs":[{"name":"self"},{"name":"unitinfo"}],"output":null}],[11,"mut_add_on","","",162,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"take_add_on","","",162,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"get_add_on","","",162,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"is_initialized","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",162,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",162,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",162,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",162,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",162,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",162,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",162,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",162,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",162,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",162,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",162,{"inputs":[],"output":{"name":"unitinfo"}}],[11,"descriptor_static","","",162,{"inputs":[{"generics":["unitinfo"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",162,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",162,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"singlepanel"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"self"},{"name":"singlepanel"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"singlepanel"}}],[11,"default","","",163,{"inputs":[],"output":{"name":"singlepanel"}}],[11,"new","","",163,{"inputs":[],"output":{"name":"singlepanel"}}],[11,"default_instance","","",163,{"inputs":[],"output":{"name":"singlepanel"}}],[11,"clear_unit","","",163,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit","","",163,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit","","",163,{"inputs":[{"name":"self"},{"name":"unitinfo"}],"output":null}],[11,"mut_unit","","",163,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"take_unit","","",163,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"get_unit","","",163,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"is_initialized","","",163,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",163,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",163,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",163,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",163,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",163,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",163,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",163,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",163,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",163,{"inputs":[],"output":{"name":"singlepanel"}}],[11,"descriptor_static","","",163,{"inputs":[{"generics":["singlepanel"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",163,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",163,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"multipanel"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"self"},{"name":"multipanel"}],"output":{"name":"bool"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"multipanel"}}],[11,"default","","",164,{"inputs":[],"output":{"name":"multipanel"}}],[11,"new","","",164,{"inputs":[],"output":{"name":"multipanel"}}],[11,"default_instance","","",164,{"inputs":[],"output":{"name":"multipanel"}}],[11,"clear_units","","",164,{"inputs":[{"name":"self"}],"output":null}],[11,"set_units","","",164,{"inputs":[{"name":"self"},{"generics":["unitinfo"],"name":"repeatedfield"}],"output":null}],[11,"mut_units","","",164,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_units","","",164,{"inputs":[{"name":"self"}],"output":{"generics":["unitinfo"],"name":"repeatedfield"}}],[11,"get_units","","",164,null],[11,"is_initialized","","",164,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",164,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",164,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",164,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",164,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",164,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",164,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",164,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",164,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",164,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",164,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",164,{"inputs":[],"output":{"name":"multipanel"}}],[11,"descriptor_static","","",164,{"inputs":[{"generics":["multipanel"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",164,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",164,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"cargopanel"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"self"},{"name":"cargopanel"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"cargopanel"}}],[11,"default","","",165,{"inputs":[],"output":{"name":"cargopanel"}}],[11,"new","","",165,{"inputs":[],"output":{"name":"cargopanel"}}],[11,"default_instance","","",165,{"inputs":[],"output":{"name":"cargopanel"}}],[11,"clear_unit","","",165,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit","","",165,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit","","",165,{"inputs":[{"name":"self"},{"name":"unitinfo"}],"output":null}],[11,"mut_unit","","",165,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"take_unit","","",165,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"get_unit","","",165,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"clear_passengers","","",165,{"inputs":[{"name":"self"}],"output":null}],[11,"set_passengers","","",165,{"inputs":[{"name":"self"},{"generics":["unitinfo"],"name":"repeatedfield"}],"output":null}],[11,"mut_passengers","","",165,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_passengers","","",165,{"inputs":[{"name":"self"}],"output":{"generics":["unitinfo"],"name":"repeatedfield"}}],[11,"get_passengers","","",165,null],[11,"clear_slots_available","","",165,{"inputs":[{"name":"self"}],"output":null}],[11,"has_slots_available","","",165,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_slots_available","","",165,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_slots_available","","",165,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",165,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",165,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",165,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",165,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",165,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",165,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",165,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",165,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",165,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",165,{"inputs":[],"output":{"name":"cargopanel"}}],[11,"descriptor_static","","",165,{"inputs":[{"generics":["cargopanel"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",165,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",165,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",166,{"inputs":[{"name":"self"},{"name":"productionpanel"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"self"},{"name":"productionpanel"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"self"}],"output":{"name":"productionpanel"}}],[11,"default","","",166,{"inputs":[],"output":{"name":"productionpanel"}}],[11,"new","","",166,{"inputs":[],"output":{"name":"productionpanel"}}],[11,"default_instance","","",166,{"inputs":[],"output":{"name":"productionpanel"}}],[11,"clear_unit","","",166,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit","","",166,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit","","",166,{"inputs":[{"name":"self"},{"name":"unitinfo"}],"output":null}],[11,"mut_unit","","",166,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"take_unit","","",166,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"get_unit","","",166,{"inputs":[{"name":"self"}],"output":{"name":"unitinfo"}}],[11,"clear_build_queue","","",166,{"inputs":[{"name":"self"}],"output":null}],[11,"set_build_queue","","",166,{"inputs":[{"name":"self"},{"generics":["unitinfo"],"name":"repeatedfield"}],"output":null}],[11,"mut_build_queue","","",166,{"inputs":[{"name":"self"}],"output":{"name":"repeatedfield"}}],[11,"take_build_queue","","",166,{"inputs":[{"name":"self"}],"output":{"generics":["unitinfo"],"name":"repeatedfield"}}],[11,"get_build_queue","","",166,null],[11,"is_initialized","","",166,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",166,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",166,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",166,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",166,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",166,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",166,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",166,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",166,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",166,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",166,{"inputs":[],"output":{"name":"productionpanel"}}],[11,"descriptor_static","","",166,{"inputs":[{"generics":["productionpanel"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",166,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",166,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"actionui"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"self"},{"name":"actionui"}],"output":{"name":"bool"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionui"}}],[11,"default","","",167,{"inputs":[],"output":{"name":"actionui"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"actionui_oneof_action"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"actionui_oneof_action"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"self"},{"name":"actionui_oneof_action"}],"output":{"name":"bool"}}],[11,"new","","",167,{"inputs":[],"output":{"name":"actionui"}}],[11,"default_instance","","",167,{"inputs":[],"output":{"name":"actionui"}}],[11,"clear_control_group","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_control_group","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_control_group","","",167,{"inputs":[{"name":"self"},{"name":"actioncontrolgroup"}],"output":null}],[11,"mut_control_group","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actioncontrolgroup"}}],[11,"take_control_group","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actioncontrolgroup"}}],[11,"get_control_group","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actioncontrolgroup"}}],[11,"clear_select_army","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_select_army","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_select_army","","",167,{"inputs":[{"name":"self"},{"name":"actionselectarmy"}],"output":null}],[11,"mut_select_army","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectarmy"}}],[11,"take_select_army","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectarmy"}}],[11,"get_select_army","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectarmy"}}],[11,"clear_select_warp_gates","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_select_warp_gates","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_select_warp_gates","","",167,{"inputs":[{"name":"self"},{"name":"actionselectwarpgates"}],"output":null}],[11,"mut_select_warp_gates","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectwarpgates"}}],[11,"take_select_warp_gates","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectwarpgates"}}],[11,"get_select_warp_gates","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectwarpgates"}}],[11,"clear_select_larva","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_select_larva","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_select_larva","","",167,{"inputs":[{"name":"self"},{"name":"actionselectlarva"}],"output":null}],[11,"mut_select_larva","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectlarva"}}],[11,"take_select_larva","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectlarva"}}],[11,"get_select_larva","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectlarva"}}],[11,"clear_select_idle_worker","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_select_idle_worker","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_select_idle_worker","","",167,{"inputs":[{"name":"self"},{"name":"actionselectidleworker"}],"output":null}],[11,"mut_select_idle_worker","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectidleworker"}}],[11,"take_select_idle_worker","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectidleworker"}}],[11,"get_select_idle_worker","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionselectidleworker"}}],[11,"clear_multi_panel","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_multi_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_multi_panel","","",167,{"inputs":[{"name":"self"},{"name":"actionmultipanel"}],"output":null}],[11,"mut_multi_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionmultipanel"}}],[11,"take_multi_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionmultipanel"}}],[11,"get_multi_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionmultipanel"}}],[11,"clear_cargo_panel","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_cargo_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_cargo_panel","","",167,{"inputs":[{"name":"self"},{"name":"actioncargopanelunload"}],"output":null}],[11,"mut_cargo_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actioncargopanelunload"}}],[11,"take_cargo_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actioncargopanelunload"}}],[11,"get_cargo_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actioncargopanelunload"}}],[11,"clear_production_panel","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_production_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_production_panel","","",167,{"inputs":[{"name":"self"},{"name":"actionproductionpanelremovefromqueue"}],"output":null}],[11,"mut_production_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"take_production_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"get_production_panel","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"clear_toggle_autocast","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"has_toggle_autocast","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_toggle_autocast","","",167,{"inputs":[{"name":"self"},{"name":"actiontoggleautocast"}],"output":null}],[11,"mut_toggle_autocast","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actiontoggleautocast"}}],[11,"take_toggle_autocast","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actiontoggleautocast"}}],[11,"get_toggle_autocast","","",167,{"inputs":[{"name":"self"}],"output":{"name":"actiontoggleautocast"}}],[11,"is_initialized","","",167,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",167,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",167,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",167,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",167,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",167,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",167,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",167,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",167,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",167,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",167,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",167,{"inputs":[],"output":{"name":"actionui"}}],[11,"descriptor_static","","",167,{"inputs":[{"generics":["actionui"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",167,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",167,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",168,{"inputs":[{"name":"self"},{"name":"actioncontrolgroup"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"self"},{"name":"actioncontrolgroup"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"self"}],"output":{"name":"actioncontrolgroup"}}],[11,"default","","",168,{"inputs":[],"output":{"name":"actioncontrolgroup"}}],[11,"new","","",168,{"inputs":[],"output":{"name":"actioncontrolgroup"}}],[11,"default_instance","","",168,{"inputs":[],"output":{"name":"actioncontrolgroup"}}],[11,"clear_action","","",168,{"inputs":[{"name":"self"}],"output":null}],[11,"has_action","","",168,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_action","","",168,{"inputs":[{"name":"self"},{"name":"actioncontrolgroup_controlgroupaction"}],"output":null}],[11,"get_action","","",168,{"inputs":[{"name":"self"}],"output":{"name":"actioncontrolgroup_controlgroupaction"}}],[11,"clear_control_group_index","","",168,{"inputs":[{"name":"self"}],"output":null}],[11,"has_control_group_index","","",168,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_control_group_index","","",168,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"get_control_group_index","","",168,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"is_initialized","","",168,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",168,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",168,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",168,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",168,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",168,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",168,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",168,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",168,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",168,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",168,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",168,{"inputs":[],"output":{"name":"actioncontrolgroup"}}],[11,"descriptor_static","","",168,{"inputs":[{"generics":["actioncontrolgroup"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",168,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",168,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"actioncontrolgroup_controlgroupaction"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"actioncontrolgroup_controlgroupaction"}],"output":{"name":"bool"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"value","","",157,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",157,{"inputs":[{"name":"i32"}],"output":{"generics":["actioncontrolgroup_controlgroupaction"],"name":"option"}}],[11,"values","","",157,null],[11,"enum_descriptor_static","","",157,{"inputs":[{"generics":["actioncontrolgroup_controlgroupaction"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",157,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"actionselectarmy"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"self"},{"name":"actionselectarmy"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"self"}],"output":{"name":"actionselectarmy"}}],[11,"default","","",169,{"inputs":[],"output":{"name":"actionselectarmy"}}],[11,"new","","",169,{"inputs":[],"output":{"name":"actionselectarmy"}}],[11,"default_instance","","",169,{"inputs":[],"output":{"name":"actionselectarmy"}}],[11,"clear_selection_add","","",169,{"inputs":[{"name":"self"}],"output":null}],[11,"has_selection_add","","",169,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_selection_add","","",169,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_selection_add","","",169,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",169,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",169,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",169,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",169,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",169,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",169,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",169,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",169,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",169,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",169,{"inputs":[],"output":{"name":"actionselectarmy"}}],[11,"descriptor_static","","",169,{"inputs":[{"generics":["actionselectarmy"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",169,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",169,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"actionselectwarpgates"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"self"},{"name":"actionselectwarpgates"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"actionselectwarpgates"}}],[11,"default","","",170,{"inputs":[],"output":{"name":"actionselectwarpgates"}}],[11,"new","","",170,{"inputs":[],"output":{"name":"actionselectwarpgates"}}],[11,"default_instance","","",170,{"inputs":[],"output":{"name":"actionselectwarpgates"}}],[11,"clear_selection_add","","",170,{"inputs":[{"name":"self"}],"output":null}],[11,"has_selection_add","","",170,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_selection_add","","",170,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_selection_add","","",170,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_initialized","","",170,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",170,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",170,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",170,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",170,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",170,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",170,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",170,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",170,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",170,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",170,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",170,{"inputs":[],"output":{"name":"actionselectwarpgates"}}],[11,"descriptor_static","","",170,{"inputs":[{"generics":["actionselectwarpgates"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",170,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",170,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"actionselectlarva"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"self"},{"name":"actionselectlarva"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"self"}],"output":{"name":"actionselectlarva"}}],[11,"default","","",171,{"inputs":[],"output":{"name":"actionselectlarva"}}],[11,"new","","",171,{"inputs":[],"output":{"name":"actionselectlarva"}}],[11,"default_instance","","",171,{"inputs":[],"output":{"name":"actionselectlarva"}}],[11,"is_initialized","","",171,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",171,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",171,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",171,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",171,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",171,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",171,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",171,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",171,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",171,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",171,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",171,{"inputs":[],"output":{"name":"actionselectlarva"}}],[11,"descriptor_static","","",171,{"inputs":[{"generics":["actionselectlarva"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",171,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",171,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",172,{"inputs":[{"name":"self"},{"name":"actionselectidleworker"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"self"},{"name":"actionselectidleworker"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"self"}],"output":{"name":"actionselectidleworker"}}],[11,"default","","",172,{"inputs":[],"output":{"name":"actionselectidleworker"}}],[11,"new","","",172,{"inputs":[],"output":{"name":"actionselectidleworker"}}],[11,"default_instance","","",172,{"inputs":[],"output":{"name":"actionselectidleworker"}}],[11,"clear_field_type","","",172,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",172,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",172,{"inputs":[{"name":"self"},{"name":"actionselectidleworker_type"}],"output":null}],[11,"get_field_type","","",172,{"inputs":[{"name":"self"}],"output":{"name":"actionselectidleworker_type"}}],[11,"is_initialized","","",172,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",172,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",172,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",172,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",172,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",172,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",172,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",172,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",172,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",172,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",172,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",172,{"inputs":[],"output":{"name":"actionselectidleworker"}}],[11,"descriptor_static","","",172,{"inputs":[{"generics":["actionselectidleworker"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",172,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",172,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"actionselectidleworker_type"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"actionselectidleworker_type"}],"output":{"name":"bool"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",158,null],[11,"value","","",158,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",158,{"inputs":[{"name":"i32"}],"output":{"generics":["actionselectidleworker_type"],"name":"option"}}],[11,"values","","",158,null],[11,"enum_descriptor_static","","",158,{"inputs":[{"generics":["actionselectidleworker_type"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",158,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",173,{"inputs":[{"name":"self"},{"name":"actionmultipanel"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"self"},{"name":"actionmultipanel"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"self"}],"output":{"name":"actionmultipanel"}}],[11,"default","","",173,{"inputs":[],"output":{"name":"actionmultipanel"}}],[11,"new","","",173,{"inputs":[],"output":{"name":"actionmultipanel"}}],[11,"default_instance","","",173,{"inputs":[],"output":{"name":"actionmultipanel"}}],[11,"clear_field_type","","",173,{"inputs":[{"name":"self"}],"output":null}],[11,"has_field_type","","",173,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_field_type","","",173,{"inputs":[{"name":"self"},{"name":"actionmultipanel_type"}],"output":null}],[11,"get_field_type","","",173,{"inputs":[{"name":"self"}],"output":{"name":"actionmultipanel_type"}}],[11,"clear_unit_index","","",173,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_index","","",173,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_index","","",173,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_unit_index","","",173,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",173,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",173,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",173,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",173,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",173,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",173,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",173,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",173,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",173,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",173,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",173,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",173,{"inputs":[],"output":{"name":"actionmultipanel"}}],[11,"descriptor_static","","",173,{"inputs":[{"generics":["actionmultipanel"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",173,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",173,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"actionmultipanel_type"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"actionmultipanel_type"}],"output":{"name":"bool"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",159,null],[11,"value","","",159,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_i32","","",159,{"inputs":[{"name":"i32"}],"output":{"generics":["actionmultipanel_type"],"name":"option"}}],[11,"values","","",159,null],[11,"enum_descriptor_static","","",159,{"inputs":[{"generics":["actionmultipanel_type"],"name":"option"}],"output":{"name":"enumdescriptor"}}],[11,"as_ref","","",159,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",174,{"inputs":[{"name":"self"},{"name":"actioncargopanelunload"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"self"},{"name":"actioncargopanelunload"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"self"}],"output":{"name":"actioncargopanelunload"}}],[11,"default","","",174,{"inputs":[],"output":{"name":"actioncargopanelunload"}}],[11,"new","","",174,{"inputs":[],"output":{"name":"actioncargopanelunload"}}],[11,"default_instance","","",174,{"inputs":[],"output":{"name":"actioncargopanelunload"}}],[11,"clear_unit_index","","",174,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_index","","",174,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_index","","",174,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_unit_index","","",174,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",174,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",174,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",174,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",174,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",174,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",174,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",174,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",174,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",174,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",174,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",174,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",174,{"inputs":[],"output":{"name":"actioncargopanelunload"}}],[11,"descriptor_static","","",174,{"inputs":[{"generics":["actioncargopanelunload"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",174,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",174,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"actionproductionpanelremovefromqueue"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"self"},{"name":"actionproductionpanelremovefromqueue"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"default","","",175,{"inputs":[],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"new","","",175,{"inputs":[],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"default_instance","","",175,{"inputs":[],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"clear_unit_index","","",175,{"inputs":[{"name":"self"}],"output":null}],[11,"has_unit_index","","",175,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unit_index","","",175,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_unit_index","","",175,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",175,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",175,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",175,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",175,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",175,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",175,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",175,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",175,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",175,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",175,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",175,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",175,{"inputs":[],"output":{"name":"actionproductionpanelremovefromqueue"}}],[11,"descriptor_static","","",175,{"inputs":[{"generics":["actionproductionpanelremovefromqueue"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",175,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",175,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"actiontoggleautocast"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"actiontoggleautocast"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"actiontoggleautocast"}}],[11,"default","","",176,{"inputs":[],"output":{"name":"actiontoggleautocast"}}],[11,"new","","",176,{"inputs":[],"output":{"name":"actiontoggleautocast"}}],[11,"default_instance","","",176,{"inputs":[],"output":{"name":"actiontoggleautocast"}}],[11,"clear_ability_id","","",176,{"inputs":[{"name":"self"}],"output":null}],[11,"has_ability_id","","",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_ability_id","","",176,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"get_ability_id","","",176,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_initialized","","",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"merge_from","","",176,{"inputs":[{"name":"self"},{"name":"codedinputstream"}],"output":{"name":"protobufresult"}}],[11,"compute_size","","",176,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write_to_with_cached_sizes","","",176,{"inputs":[{"name":"self"},{"name":"codedoutputstream"}],"output":{"name":"protobufresult"}}],[11,"get_cached_size","","",176,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_unknown_fields","","",176,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"mut_unknown_fields","","",176,{"inputs":[{"name":"self"}],"output":{"name":"unknownfields"}}],[11,"as_any","","",176,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"as_any_mut","","",176,{"inputs":[{"name":"self"}],"output":{"name":"any"}}],[11,"into_any","","",176,{"inputs":[{"name":"box"}],"output":{"generics":["any"],"name":"box"}}],[11,"descriptor","","",176,{"inputs":[{"name":"self"}],"output":{"name":"messagedescriptor"}}],[11,"new","","",176,{"inputs":[],"output":{"name":"actiontoggleautocast"}}],[11,"descriptor_static","","",176,{"inputs":[{"generics":["actiontoggleautocast"],"name":"option"}],"output":{"name":"messagedescriptor"}}],[11,"clear","","",176,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",176,{"inputs":[{"name":"self"}],"output":{"name":"protobufvalueref"}}]],"paths":[[4,"Race"],[3,"AvailableAbility"],[3,"ImageData"],[3,"PointI"],[3,"RectangleI"],[3,"Point2D"],[3,"Point"],[3,"Size2DI"],[4,"AbilityData_Target"],[4,"Weapon_TargetType"],[4,"Attribute"],[3,"AbilityData"],[3,"DamageBonus"],[3,"Weapon"],[3,"UnitTypeData"],[3,"UpgradeData"],[3,"BuffData"],[4,"DebugCommand_oneof_command"],[4,"DebugTestProcess_Test"],[4,"DebugEndGame_EndResult"],[4,"DebugSetUnitValue_UnitValue"],[4,"DebugGameState"],[3,"DebugCommand"],[3,"DebugDraw"],[3,"Line"],[3,"Color"],[3,"DebugText"],[3,"DebugLine"],[3,"DebugBox"],[3,"DebugSphere"],[3,"DebugCreateUnit"],[3,"DebugKillUnit"],[3,"DebugTestProcess"],[3,"DebugSetScore"],[3,"DebugEndGame"],[3,"DebugSetUnitValue"],[3,"DebugChat"],[4,"ActionResult"],[4,"RequestQueryPathing_oneof_start"],[3,"RequestQuery"],[3,"ResponseQuery"],[3,"RequestQueryPathing"],[3,"ResponseQueryPathing"],[3,"RequestQueryAvailableAbilities"],[3,"ResponseQueryAvailableAbilities"],[3,"RequestQueryBuildingPlacement"],[3,"ResponseQueryBuildingPlacement"],[4,"UnitOrder_oneof_target"],[4,"ActionRaw_oneof_action"],[4,"ActionRawUnitCommand_oneof_target"],[4,"DisplayType"],[4,"Alliance"],[4,"CloakState"],[3,"StartRaw"],[3,"ObservationRaw"],[3,"PowerSource"],[3,"PlayerRaw"],[3,"UnitOrder"],[3,"PassengerUnit"],[3,"Unit"],[3,"MapState"],[3,"ActionRaw"],[3,"ActionRawUnitCommand"],[3,"ActionRawCameraMove"],[3,"ActionRawToggleAutocast"],[3,"Event"],[4,"Request_oneof_request"],[4,"Response_oneof_response"],[4,"RequestCreateGame_oneof_Map"],[4,"ResponseCreateGame_Error"],[4,"RequestJoinGame_oneof_participation"],[4,"ResponseJoinGame_Error"],[4,"ResponseRestartGame_Error"],[4,"RequestStartReplay_oneof_replay"],[4,"ResponseStartReplay_Error"],[4,"RequestReplayInfo_oneof_replay"],[4,"ResponseReplayInfo_Error"],[4,"ResponseSaveMap_Error"],[4,"ActionChat_Channel"],[4,"Status"],[4,"Difficulty"],[4,"PlayerType"],[4,"Alert"],[4,"Result"],[3,"Request"],[3,"Response"],[3,"RequestCreateGame"],[3,"LocalMap"],[3,"ResponseCreateGame"],[3,"RequestJoinGame"],[3,"PortSet"],[3,"ResponseJoinGame"],[3,"RequestRestartGame"],[3,"ResponseRestartGame"],[3,"RequestStartReplay"],[3,"ResponseStartReplay"],[3,"RequestLeaveGame"],[3,"ResponseLeaveGame"],[3,"RequestQuickSave"],[3,"ResponseQuickSave"],[3,"RequestQuickLoad"],[3,"ResponseQuickLoad"],[3,"RequestQuit"],[3,"ResponseQuit"],[3,"RequestGameInfo"],[3,"ResponseGameInfo"],[3,"RequestObservation"],[3,"ResponseObservation"],[3,"ChatReceived"],[3,"RequestAction"],[3,"ResponseAction"],[3,"RequestStep"],[3,"ResponseStep"],[3,"RequestData"],[3,"ResponseData"],[3,"RequestSaveReplay"],[3,"ResponseSaveReplay"],[3,"RequestReplayInfo"],[3,"PlayerInfoExtra"],[3,"ResponseReplayInfo"],[3,"RequestAvailableMaps"],[3,"ResponseAvailableMaps"],[3,"RequestSaveMap"],[3,"ResponseSaveMap"],[3,"RequestPing"],[3,"ResponsePing"],[3,"RequestDebug"],[3,"ResponseDebug"],[3,"PlayerSetup"],[3,"SpatialCameraSetup"],[3,"InterfaceOptions"],[3,"PlayerInfo"],[3,"PlayerCommon"],[3,"Observation"],[3,"Action"],[3,"ActionChat"],[3,"ActionError"],[3,"PlayerResult"],[4,"Score_ScoreType"],[3,"Score"],[3,"CategoryScoreDetails"],[3,"VitalScoreDetails"],[3,"ScoreDetails"],[4,"ActionSpatial_oneof_action"],[4,"ActionSpatialUnitCommand_oneof_target"],[4,"ActionSpatialUnitSelectionPoint_Type"],[3,"ObservationFeatureLayer"],[3,"FeatureLayers"],[3,"FeatureLayersMinimap"],[3,"ObservationRender"],[3,"ActionSpatial"],[3,"ActionSpatialUnitCommand"],[3,"ActionSpatialCameraMove"],[3,"ActionSpatialUnitSelectionPoint"],[3,"ActionSpatialUnitSelectionRect"],[4,"ObservationUI_oneof_panel"],[4,"ActionUI_oneof_action"],[4,"ActionControlGroup_ControlGroupAction"],[4,"ActionSelectIdleWorker_Type"],[4,"ActionMultiPanel_Type"],[3,"ObservationUI"],[3,"ControlGroup"],[3,"UnitInfo"],[3,"SinglePanel"],[3,"MultiPanel"],[3,"CargoPanel"],[3,"ProductionPanel"],[3,"ActionUI"],[3,"ActionControlGroup"],[3,"ActionSelectArmy"],[3,"ActionSelectWarpGates"],[3,"ActionSelectLarva"],[3,"ActionSelectIdleWorker"],[3,"ActionMultiPanel"],[3,"ActionCargoPanelUnload"],[3,"ActionProductionPanelRemoveFromQueue"],[3,"ActionToggleAutocast"]]};
searchIndex["scoped_tls"] = {"doc":"Scoped thread-local storage","items":[[3,"ScopedKey","scoped_tls","Type representing a thread local storage key corresponding to a reference to the type parameter `T`.",null,null],[11,"set","","Inserts a value into this scoped thread local storage slot for a duration of a closure.",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[14,"scoped_thread_local","","",null,null]],"paths":[[3,"ScopedKey"]]};
searchIndex["serde"] = {"doc":"Serde","items":[[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",null,null],[11,"serialize_element","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_element","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_key","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_value","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"serialize_field","","",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"end","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",3,null],[16,"Error","","The error type when some error occurs during serialization.",3,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",3,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",3,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",3,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",3,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",3,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",3,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",3,null],[10,"serialize_bool","","Serialize a `bool` value.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",3,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",3,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"serialize_char","","Serialize a character.",3,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serialize a `&str`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",3,null],[10,"serialize_none","","Serialize a [`None`] value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_map","","Collect an iterator as a map.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",4,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",4,null],[10,"serialize_element","","Serialize a sequence element.",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a sequence.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",5,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",5,null],[10,"serialize_element","","Serialize a tuple element.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",6,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",6,null],[10,"serialize_field","","Serialize a tuple struct field.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple struct.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",7,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",7,null],[10,"serialize_field","","Serialize a tuple variant field.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a tuple variant.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",8,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",8,null],[10,"serialize_key","","Serialize a map key.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_value","","Serialize a map value.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",8,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a map.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",9,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",9,null],[10,"serialize_field","","Serialize a struct field.",9,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"skip_field","","Indicate that a struct field has been skipped.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a struct.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",10,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",10,null],[10,"serialize_field","","Serialize a struct variant field.",10,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"skip_field","","Indicate that a struct variant field has been skipped.",10,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"end","","Finish serializing a struct variant.",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",11,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",11,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",11,null],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",11,null],[13,"Char","","The input contained a `char` that was not expected.",11,null],[13,"Str","","The input contained a `&str` or `String` that was not expected.",11,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",11,null],[13,"Unit","","The input contained a unit `()` that was not expected.",11,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",11,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",11,null],[13,"Seq","","The input contained a sequence that was not expected.",11,null],[13,"Map","","The input contained a map that was not expected.",11,null],[13,"Enum","","The input contained an enum that was not expected.",11,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",11,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",11,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",11,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",11,null],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",11,null],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"custom","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"custom","","",12,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"unitdeserializer"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",13,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_identifier","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",13,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"booldeserializer"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",14,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",14,null],[11,"deserialize_enum","","",14,null],[11,"deserialize_identifier","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",14,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"i8deserializer"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",15,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",15,null],[11,"deserialize_enum","","",15,null],[11,"deserialize_identifier","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",15,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"i16deserializer"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",16,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",16,null],[11,"deserialize_enum","","",16,null],[11,"deserialize_identifier","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",16,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"i32deserializer"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",17,null],[11,"deserialize_enum","","",17,null],[11,"deserialize_identifier","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i64deserializer"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",18,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",18,null],[11,"deserialize_enum","","",18,null],[11,"deserialize_identifier","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",18,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isizedeserializer"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",19,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",19,null],[11,"deserialize_enum","","",19,null],[11,"deserialize_identifier","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",19,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u8deserializer"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",20,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",20,null],[11,"deserialize_enum","","",20,null],[11,"deserialize_identifier","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",20,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u16deserializer"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",21,null],[11,"deserialize_enum","","",21,null],[11,"deserialize_identifier","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",21,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"u64deserializer"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",22,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",22,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",22,null],[11,"deserialize_enum","","",22,null],[11,"deserialize_identifier","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",22,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"usizedeserializer"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",23,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",23,null],[11,"deserialize_enum","","",23,null],[11,"deserialize_identifier","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",23,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"f32deserializer"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",24,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",24,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",24,null],[11,"deserialize_enum","","",24,null],[11,"deserialize_identifier","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",24,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"f64deserializer"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",25,null],[11,"deserialize_enum","","",25,null],[11,"deserialize_identifier","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",25,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"chardeserializer"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",26,null],[11,"deserialize_enum","","",26,null],[11,"deserialize_identifier","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32deserializer"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",27,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",27,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",27,null],[11,"deserialize_identifier","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_any","","",27,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",27,null],[11,"variant_seed","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"strdeserializer"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",28,null],[11,"deserialize_bool","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",28,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",28,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",28,null],[11,"deserialize_identifier","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",28,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",28,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"borrowedstrdeserializer"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new borrowed deserializer from the given string.",29,{"inputs":[{"name":"str"}],"output":{"name":"borrowedstrdeserializer"}}],[11,"deserialize_any","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",29,null],[11,"deserialize_bool","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",29,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",29,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",29,null],[11,"deserialize_identifier","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",29,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",29,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"stringdeserializer"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",30,null],[11,"deserialize_bool","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",30,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",30,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",30,null],[11,"deserialize_identifier","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",30,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",30,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"cowstrdeserializer"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize_any","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",31,null],[11,"deserialize_bool","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",31,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",31,null],[11,"deserialize_identifier","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant_seed","","",31,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"borrowedbytesdeserializer"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new borrowed deserializer from the given byte slice.",32,null],[11,"deserialize_any","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",32,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",32,null],[11,"deserialize_identifier","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_enum","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"seqdeserializer"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",33,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",33,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"deserialize_any","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",33,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",33,null],[11,"deserialize_enum","","",33,null],[11,"deserialize_identifier","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_element_seed","","",33,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","",33,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"seqaccessdeserializer"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",34,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"deserialize_any","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",34,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",34,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_identifier","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",34,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapDeserializer<I, E>`.",35,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"deserialize_any","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",35,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",35,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_identifier","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",35,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_key_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_value_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"next_entry_seed","","",35,{"inputs":[{"name":"self"},{"name":"tk"},{"name":"tv"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"next_element_seed","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"mapaccessdeserializer"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",36,{"inputs":[{"name":"a"}],"output":{"name":"self"}}],[11,"deserialize_any","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bool","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i8","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i16","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_i64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u8","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u16","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_u64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f32","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_f64","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_char","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_str","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_string","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_bytes","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_byte_buf","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_option","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_unit_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_newtype_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_seq","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple","","",36,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_tuple_struct","","",36,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_map","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_struct","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_identifier","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize_ignored_any","","",36,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"clone","serde::de","",37,{"inputs":[{"name":"self"}],"output":{"name":"ignoredany"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"ignoredany"}}],[11,"expecting","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_bool","","",37,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i64","","",37,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u64","","",37,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f64","","",37,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_str","","",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_some","","",37,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","",37,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","","",37,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_seq","","",37,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_map","","",37,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_bytes","","",37,null],[11,"deserialize","","",37,{"inputs":[{"name":"d"}],"output":{"generics":["ignoredany"],"name":"result"}}],[8,"Error","","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",38,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",38,{"inputs":[{"name":"unexpected"},{"name":"expected"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",38,{"inputs":[{"name":"unexpected"},{"name":"expected"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",38,{"inputs":[{"name":"usize"},{"name":"expected"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",38,null],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",38,null],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",38,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",38,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",null,null],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",null,null],[16,"Value","","The type produced by using this seed.",41,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",41,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",42,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",42,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",42,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",43,null],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_bool","","The input contains a boolean.",43,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i8","","The input contains an `i8`.",43,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","The input contains an `i16`.",43,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","The input contains an `i32`.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","The input contains an `i64`.",43,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u8","","The input contains a `u8`.",43,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","The input contains a `u16`.",43,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","The input contains a `u32`.",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","The input contains a `u64`.",43,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","The input contains an `f32`.",43,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","The input contains an `f64`.",43,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","The input contains a `char`.",43,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",43,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",43,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",43,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"result"}}],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",43,null],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",43,null],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",43,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":{"name":"result"}}],[11,"visit_none","","The input contains an optional that is absent.",43,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_some","","The input contains an optional that is present.",43,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_unit","","The input contains a unit `()`.",43,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"visit_newtype_struct","","The input contains a newtype struct.",43,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_seq","","The input contains a sequence of elements.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_map","","The input contains a key-value map.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[11,"visit_enum","","The input contains an enum.",43,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"result"}}],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",44,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",44,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",44,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",45,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",45,{"inputs":[{"name":"self"},{"name":"k"}],"output":{"generics":["option"],"name":"result"}}],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",45,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",45,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",45,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",45,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",46,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",46,null],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",46,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"variant","","`variant` is called to identify which variant to deserialize.",46,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",47,null],[10,"unit_variant","","Called when deserializing a variant with no values.",47,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"newtype_variant","","Called when deserializing a variant with a single value.",47,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",47,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"struct_variant","","Called when deserializing a struct-like variant.",47,null],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",48,null],[10,"into_deserializer","","Convert this value into a deserializer.",48,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"unexpected"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"unexpected"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"unexpected"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Serialize","serde","A data structure that can be serialized into any data format supported by Serde.",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",2,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",null,null],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",3,null],[16,"Error","","The error type when some error occurs during serialization.",3,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",3,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",3,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",3,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",3,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",3,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",3,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",3,null],[10,"serialize_bool","","Serialize a `bool` value.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"serialize_i8","","Serialize an `i8` value.",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"serialize_i16","","Serialize an `i16` value.",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"serialize_i32","","Serialize an `i32` value.",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"serialize_i64","","Serialize an `i64` value.",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"serialize_u8","","Serialize a `u8` value.",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"serialize_u16","","Serialize a `u16` value.",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"serialize_u32","","Serialize a `u32` value.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"serialize_u64","","Serialize a `u64` value.",3,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"serialize_f32","","Serialize an `f32` value.",3,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"serialize_f64","","Serialize an `f64` value.",3,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"serialize_char","","Serialize a character.",3,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"serialize_str","","Serialize a `&str`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",3,null],[10,"serialize_none","","Serialize a [`None`] value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_some","","Serialize a [`Some(T)`] value.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_unit","","Serialize a `()` value.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"}],"output":{"name":"result"}}],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"option"}],"output":{"name":"result"}}],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"collect_seq","","Collect an iterator as a sequence.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_map","","Collect an iterator as a map.",3,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"result"}}],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",42,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",42,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",42,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",42,null],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",42,null],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",42,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"result"}}],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",null,null]],"paths":[[3,"Impossible"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[4,"Unexpected"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"]]};
searchIndex["sha1"] = {"doc":"A minimal implementation of SHA1 for rust.","items":[[3,"Sha1","sha1","Represents a Sha1 hash object in memory.",null,null],[3,"Digest","","Digest generated from a `Sha1` instance.",null,null],[5,"sha1_first","","Not an intrinsic, but gets the first element of a vector.",null,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32"}}],[5,"sha1_first_add","","Not an intrinsic, but adds a word to the first element of a vector.",null,{"inputs":[{"name":"u32"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[5,"sha1_schedule_x4","","Performs 4 rounds of the message schedule update.",null,{"inputs":[{"name":"u32x4"},{"name":"u32x4"},{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[5,"sha1_first_half","","Emulates `llvm.x86.sha1nexte` intrinsic.",null,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[5,"sha1_digest_round_x4","","Emulates `llvm.x86.sha1rnds4` intrinsic. Performs 4 rounds of the message block digest.",null,{"inputs":[{"name":"u32x4"},{"name":"u32x4"},{"name":"i8"}],"output":{"name":"u32x4"}}],[17,"DIGEST_LENGTH","","The length of a SHA1 digest in bytes",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"sha1"}}],[11,"new","","Creates an fresh sha1 hash object.",0,{"inputs":[],"output":{"name":"sha1"}}],[11,"reset","","Resets the hash object to it's initial state.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"update","","Update hash with input data.",0,null],[11,"digest","","Retrieve digest result.",0,{"inputs":[{"name":"self"}],"output":{"name":"digest"}}],[11,"bytes","","Returns the 160 bit (20 byte) digest as a byte array.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Sha1"],[3,"Digest"]]};
searchIndex["slab"] = {"doc":"","items":[[3,"Slab","slab","A preallocated chunk of memory for storing objects of the same type.",null,null],[3,"Entry","","A handle to an occupied slot in the `Slab`",null,null],[3,"VacantEntry","","A handle to a vacant slot in the `Slab`",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[11,"with_capacity","","Returns an empty `Slab` with the requested capacity",0,{"inputs":[{"name":"usize"}],"output":{"name":"slab"}}],[11,"len","","Returns the number of values stored by the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"capacity","","Returns the total capacity of the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `Slab` is storing no values",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"available","","Returns the number of available slots remaining in the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"has_available","","Returns true if the `Slab` has available slots",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains","","Returns true if the `Slab` contains a value for the given token",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"bool"}}],[11,"get","","Get a reference to the value associated with the given token",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the value associated with the given token",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"insert","","Insert a value into the slab, returning the associated token",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"entry","","Returns a handle to an entry.",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"generics":["entry"],"name":"option"}}],[11,"vacant_entry","","Returns a handle to a vacant entry.",0,{"inputs":[{"name":"self"}],"output":{"generics":["vacantentry"],"name":"option"}}],[11,"remove","","Releases the given slot",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"option"}}],[11,"retain","","Retain only the elements specified by the predicate.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"iter","","An iterator for visiting all elements stored in the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","A mutable iterator for visiting all elements stored in the `Slab`",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"clear","","Empty the slab, by freeing all entries",0,{"inputs":[{"name":"self"}],"output":null}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the given `Slab`. Does nothing if the capacity is already sufficient.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"index","","",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"t"}}],[11,"index_mut","","",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"replace","","Replace the value stored in the entry",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace_with","","Apply the function to the current value, replacing it with the result of the function.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"remove","","Remove and return the value stored in the entry",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get","","Get a reference to the value stored in the entry",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the value stored in the entry",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_mut","","Convert the entry handle to a mutable reference",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"index","","Return the entry index",1,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"insert","","Insert a value into the entry",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"entry"}}],[11,"index","","Returns the entry index",2,{"inputs":[{"name":"self"}],"output":{"name":"i"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Slab"],[3,"Entry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"size_hint","","",1,null],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn't exist.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"get_or_try","","Returns the element for the current thread, or creates it if it doesn't exist. If `create` fails, that error is returned and no element is added.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,{"inputs":[{"name":"self"}],"output":{"name":"cacheditermut"}}],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively reseting it to its original state.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"into_iter","","",3,{"inputs":[{"name":"self"}],"output":{"name":"cachedintoiter"}}],[11,"get_default","","Returns the element for the current thread, or creates a default one if it doesn't exist.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["tokio"] = {"doc":"","items":[],"paths":[]};
searchIndex["tokio_core"] = {"doc":"`Future`-powered I/O at the core of Tokio","items":[[0,"net","tokio_core","TCP/UDP bindings for `tokio-core`",null,null],[3,"TcpStream","tokio_core::net","An I/O object representing a TCP stream connected to a remote endpoint.",null,null],[3,"TcpStreamNew","","Future returned by `TcpStream::connect` which will resolve to a `TcpStream` when the stream is connected.",null,null],[3,"TcpListener","","An I/O object representing a TCP socket listening for incoming connections.",null,null],[3,"Incoming","","Stream returned by the `TcpListener::incoming` function representing the stream of sockets received from a listener.",null,null],[3,"UdpSocket","","An I/O object representing a UDP socket.",null,null],[3,"UdpFramed","","A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using the `UdpCodec` trait to encode and decode frames.",null,null],[3,"SendDgram","","A future used to write the entire contents of some data to a UDP socket.",null,null],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",null,null],[11,"as_raw_fd","","",0,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"as_raw_fd","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"bind","","Create a new TCP listener associated with this event loop.",1,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"accept","","Attempt to accept a connection and create a new connected `TcpStream` if successful.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"accept_std","","Like `accept`, except that it returns a raw `std::net::TcpStream`.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_listener","","Create a new TCP listener from the standard library's TCP listener.",1,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"},{"name":"handle"}],"output":{"generics":["tcplistener"],"name":"result"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",1,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"local_addr","","Returns the local address that this listener is bound to.",1,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"incoming","","Consumes this listener, returning a stream of the sockets this listener accepts.",1,{"inputs":[{"name":"self"}],"output":{"name":"incoming"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"connect","","Create a new TCP stream connected to the specified address.",0,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"tcpstreamnew"}}],[11,"from_stream","","Create a new `TcpStream` from a `net::TcpStream`.",0,{"inputs":[{"name":"tcpstream"},{"name":"handle"}],"output":{"generics":["tcpstream"],"name":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpStream`, connecting it to the address specified.",0,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"},{"name":"handle"}],"output":{"generics":["future"],"name":"box"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Test whether this socket is ready to be written to or not.",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"local_addr","","Returns the local address that this stream is bound to.",0,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"peer_addr","","Returns the remote address that this stream is connected to.",0,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",0,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",0,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",0,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",0,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",0,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",0,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",0,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"prepare_uninitialized_buffer","","",0,null],[11,"read_buf","","",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","error"],"name":"poll"}}],[11,"shutdown","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"write_buf","","",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","error"],"name":"poll"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["tcpstream","error"],"name":"poll"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"start_send","","",4,null],[11,"poll_complete","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"close","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",4,{"inputs":[{"name":"self"}],"output":{"name":"udpsocket"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",4,{"inputs":[{"name":"self"}],"output":{"name":"udpsocket"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"udpsocket"}}],[11,"as_raw_fd","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"bind","","Create a new UDP socket bound to the specified address.",5,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"generics":["udpsocket"],"name":"result"}}],[11,"from_socket","","Creates a new `UdpSocket` from the previously bound socket provided.",5,{"inputs":[{"name":"udpsocket"},{"name":"handle"}],"output":{"generics":["udpsocket"],"name":"result"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `UdpSocket` object, using the provided `UdpCodec` to read and write the raw data.",5,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"udpframed"}}],[11,"local_addr","","Returns the local address that this stream is bound to.",5,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"connect","","Connects the UDP socket setting the default destination for send() and limiting packets that are read via recv from the address specified in addr.",5,{"inputs":[{"name":"self"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"send","","Sends data on the socket to the address previously bound via connect(). On success, returns the number of bytes written.",5,null],[11,"recv","","Receives data from the socket previously bound with connect(). On success, returns the number of bytes read.",5,null],[11,"poll_read","","Test whether this socket is ready to be read or not.",5,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Test whether this socket is ready to be written to or not.",5,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",5,null],[11,"send_dgram","","Creates a future that will write the entire contents of the buffer `buf` provided as a datagram to this socket.",5,{"inputs":[{"name":"self"},{"name":"t"},{"name":"socketaddr"}],"output":{"name":"senddgram"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",5,null],[11,"recv_dgram","","Creates a future that receive a datagram to be written to the buffer provided.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"recvdgram"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",5,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",5,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",5,{"inputs":[{"name":"self"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",5,{"inputs":[{"name":"self"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[8,"UdpCodec","","Encoding of frames via buffers.",null,null],[16,"In","","The type of decoded frames.",8,null],[16,"Out","","The type of frames to be encoded.",8,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",8,null],[10,"encode","","Encodes a frame into the buffer provided.",8,null],[0,"reactor","tokio_core","The core reactor driving all I/O",null,null],[3,"PollEvented","tokio_core::reactor","A concrete implementation of a stream of readiness notifications for I/O objects that originates from an event loop.",null,null],[3,"Timeout","","A future representing the notification that a timeout has occurred.",null,null],[3,"Interval","","A stream representing notifications at fixed interval",null,null],[3,"Core","","An event loop.",null,null],[3,"CoreId","","An unique ID for a Core",null,null],[3,"Remote","","Handle to an event loop, used to construct I/O objects, send messages, and otherwise interact indirectly with the event loop itself.",null,null],[3,"Handle","","A non-sendable handle to an event loop, useful for manufacturing instances of `LoopData`.",null,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new readiness stream associated with the provided `loop_handle` and for the given `source`.",9,{"inputs":[{"name":"e"},{"name":"handle"}],"output":{"generics":["pollevented"],"name":"result"}}],[11,"deregister","","Deregisters this source of events from the reactor core specified.",9,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll_read","","Tests to see if this source is ready to be read from or not.",9,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_write","","Tests to see if this source is ready to be written to or not.",9,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"poll_ready","","Test to see whether this source fulfills any condition listed in `mask` provided.",9,{"inputs":[{"name":"self"},{"name":"ready"}],"output":{"generics":["ready"],"name":"async"}}],[11,"need_read","","Indicates to this source of events that the corresponding I/O object is no longer readable, but it needs to be.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"need_write","","Indicates to this source of events that the corresponding I/O object is no longer writable, but it needs to be.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"remote","","Returns a reference to the event loop handle that this readiness stream is associated with.",9,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"get_ref","","Returns a shared reference to the underlying I/O object this readiness stream is wrapping.",9,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O object this readiness stream is wrapping.",9,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"read","","",9,null],[11,"write","","",9,null],[11,"flush","","",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"drop","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new timeout which will fire at `dur` time into the future.",10,{"inputs":[{"name":"duration"},{"name":"handle"}],"output":{"generics":["timeout"],"name":"result"}}],[11,"new_at","","Creates a new timeout which will fire at the time specified by `at`.",10,{"inputs":[{"name":"instant"},{"name":"handle"}],"output":{"generics":["timeout"],"name":"result"}}],[11,"reset","","Resets this timeout to an new timeout which will fire at the time specified by `at`.",10,{"inputs":[{"name":"self"},{"name":"instant"}],"output":null}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"drop","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new interval which will fire at `dur` time into the future, and will repeat every `dur` interval after",11,{"inputs":[{"name":"duration"},{"name":"handle"}],"output":{"generics":["interval"],"name":"result"}}],[11,"new_at","","Creates a new interval which will fire at the time specified by `at`, and then will repeat every `dur` interval after",11,{"inputs":[{"name":"instant"},{"name":"duration"},{"name":"handle"}],"output":{"generics":["interval"],"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"drop","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"coreid"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"coreid"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"new","","Creates a new event loop, returning any error that happened during the creation.",15,{"inputs":[],"output":{"generics":["core"],"name":"result"}}],[11,"handle","","Returns a handle to this event loop which cannot be sent across threads but can be used as a proxy to the event loop itself.",15,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"remote","","Generates a remote handle to this event loop which can be used to spawn tasks from other threads into this event loop.",15,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"run","","Runs a future until completion, driving the event loop while we're otherwise waiting for the future to complete.",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"turn","","Performs one iteration of the event loop, blocking on waiting for events for at most `max_wait` (forever if `None`).",15,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"id","","Get the ID of this loop",15,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"execute","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"spawn","","Spawns a new future into the event loop this remote is associated with.",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"id","","Return the ID of the represented Core",13,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"handle","","Attempts to \"promote\" this remote to a handle, if possible.",13,{"inputs":[{"name":"self"}],"output":{"generics":["handle"],"name":"option"}}],[11,"execute","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"remote","","Returns a reference to the underlying remote handle to the event loop.",14,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"spawn","","Spawns a new future on the event loop this handle is associated with.",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"spawn_fn","","Spawns a closure on this event loop.",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"id","","Return the ID of the represented Core",14,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"execute","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"try_nb","tokio_core","A convenience macro for working with `io::Result<T>` from the `Read` and `Write` traits.",null,null]],"paths":[[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"TcpStreamNew"],[3,"UdpFramed"],[3,"UdpSocket"],[3,"SendDgram"],[3,"RecvDgram"],[8,"UdpCodec"],[3,"PollEvented"],[3,"Timeout"],[3,"Interval"],[3,"CoreId"],[3,"Remote"],[3,"Handle"],[3,"Core"]]};
searchIndex["tokio_dns"] = {"doc":"This crate offers tools for asynchronous name resolution, and extensions to  the `tokio_core` crate.","items":[[3,"CpuPoolResolver","tokio_dns","A resolver based on a thread pool.",null,null],[4,"Endpoint","","An Endpoint is a way of identifying the target of a connection.",null,null],[13,"Host","","Endpoint is a host.",0,null],[13,"SocketAddr","","Endpoint is a `SocketAddr`.",0,null],[5,"tcp_connect","","Connect to the endpoint using the default resolver.",null,{"inputs":[{"name":"t"},{"name":"remote"}],"output":{"generics":["tcpstream"],"name":"iofuture"}}],[5,"tcp_connect_with","","Connect to the endpoint using a custom resolver.",null,{"inputs":[{"name":"t"},{"name":"remote"},{"name":"r"}],"output":{"generics":["tcpstream"],"name":"iofuture"}}],[5,"tcp_bind","","Bind to the endpoint using the default resolver.",null,{"inputs":[{"name":"t"},{"name":"remote"}],"output":{"generics":["tcplistener"],"name":"iofuture"}}],[5,"tcp_bind_with","","Bind to the endpoint using a custom resolver.",null,{"inputs":[{"name":"t"},{"name":"remote"},{"name":"r"}],"output":{"generics":["tcplistener"],"name":"iofuture"}}],[5,"udp_bind","","Bind to the endpoint using the default resolver.",null,{"inputs":[{"name":"t"},{"name":"remote"}],"output":{"generics":["udpsocket"],"name":"iofuture"}}],[5,"udp_bind_with","","Bind to the endpoint using a custom resolver.",null,{"inputs":[{"name":"t"},{"name":"remote"},{"name":"r"}],"output":{"generics":["udpsocket"],"name":"iofuture"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"endpoint"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"endpoint"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"endpoint"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cpupoolresolver"}}],[11,"new","","Create a new CpuPoolResolver with the given number of threads.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"resolve","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["vec"],"name":"iofuture"}}],[8,"ToEndpoint","","A trait for objects that can be converted into an Endpoint.",null,null],[10,"to_endpoint","","Create an endpoint from this object.",2,{"inputs":[{"name":"self"}],"output":{"generics":["endpoint"],"name":"result"}}],[8,"Resolver","","The Resolver trait represents an object capable of resolving host names into IP addresses.",null,null],[10,"resolve","","Given a host name, this function returns a Future which will eventually resolve into a list of IP addresses.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["vec","error"],"name":"boxfuture"}}]],"paths":[[4,"Endpoint"],[3,"CpuPoolResolver"],[8,"ToEndpoint"],[8,"Resolver"]]};
searchIndex["tokio_io"] = {"doc":"Core I/O traits and combinators when working with Tokio.","items":[[0,"io","tokio_io","I/O conveniences when working with primitives in `tokio-core`",null,null],[3,"AllowStdIo","tokio_io::io","A simple wrapper type which allows types which implement only implement `std::io::Read` or `std::io::Write` to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.",null,null],[3,"Copy","","A future which will copy all data from a reader into a writer.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"Lines","","Combinator created by the top-level `lines` method which is a stream over the lines of text on an I/O object.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[3,"ReadUntil","","A future which can be used to easily read the contents of a stream into a vector until the delimiter is reached.",null,null],[3,"Shutdown","","A future used to fully shutdown an I/O object.",null,null],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",null,null],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[5,"copy","","Creates a future which represents copying all the bytes from one object to another.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"copy"}}],[5,"flush","","Creates a future which will entirely flush an I/O object and then yield the object itself.",null,{"inputs":[{"name":"a"}],"output":{"name":"flush"}}],[5,"lines","","Creates a new stream from the I/O object given representing the lines of input that are found on `A`.",null,{"inputs":[{"name":"a"}],"output":{"name":"lines"}}],[5,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",null,{"inputs":[{"name":"r"},{"name":"t"}],"output":{"name":"read"}}],[5,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"readexact"}}],[5,"read_to_end","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided.",null,{"inputs":[{"name":"a"},{"generics":["u8"],"name":"vec"}],"output":{"name":"readtoend"}}],[5,"read_until","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided until the delimiter `byte` is reached. This method is the async equivalent to [`BufRead::read_until`].",null,{"inputs":[{"name":"a"},{"name":"u8"},{"generics":["u8"],"name":"vec"}],"output":{"name":"readuntil"}}],[5,"shutdown","","Creates a future which will entirely shutdown an I/O object and then yield the object itself.",null,{"inputs":[{"name":"a"}],"output":{"name":"shutdown"}}],[5,"write_all","","Creates a future that will write the entire contents of the buffer `buf` to the stream `a` provided.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"writeall"}}],[0,"codec","tokio_io","Utilities for encoding and decoding frames.",null,null],[3,"BytesCodec","tokio_io::codec","A simple `Codec` implementation that just ships bytes around.",null,null],[3,"LinesCodec","","A simple `Codec` implementation that splits up data into lines.",null,null],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying I/O object, using the `Encoder` and `Decoder` traits to encode and decode frames.",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed transport. It can be used to construct a new `Framed` with a different codec. It contains all current buffers and the inner transport.",null,null],[12,"inner","","The inner transport used to read bytes to and write bytes to",0,null],[12,"readbuf","","The buffer with read but unprocessed data.",0,null],[12,"writebuf","","A buffer with unprocessed data which are not written yet.",0,null],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",null,null],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",null,null],[0,"length_delimited","","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_io::codec::length_delimited","Configure length delimited `FramedRead`, `FramedWrite`, and `Framed` values.",null,null],[3,"Framed","","Adapts a byte stream into a unified `Stream` and `Sink` that works over entire frame values.",null,null],[3,"FramedRead","","Adapts a byte stream to a `Stream` yielding entire frame values.",null,null],[3,"FrameTooBig","","An error when the number of bytes read is more than max frame length.",null,null],[3,"FramedWrite","","Adapts a byte stream to a `Sink` accepting entire frame values.",null,null],[8,"Decoder","tokio_io::codec","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",1,null],[16,"Error","","The type of unrecoverable frame decoding errors.",1,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["option"],"name":"result"}}],[11,"decode_eof","","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["option"],"name":"result"}}],[8,"Encoder","","Trait of helper objects to write out messages as bytes, for use with `FramedWrite`.",null,null],[16,"Item","","The type of items consumed by the `Encoder`",2,null],[16,"Error","","The type of encoding errors.",2,null],[10,"encode","","Encodes a frame into the buffer provided.",2,null],[11,"fmt","tokio_io::io","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"allowstdio"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",3,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"get_ref","","Returns a reference to the contained IO object.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained IO object.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes self and returns the contained IO object.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"write","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write_all","","",3,null],[11,"write_fmt","","",3,{"inputs":[{"name":"self"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"shutdown","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"read","","",3,null],[11,"read_to_end","","",3,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize"],"name":"result"}}],[11,"read_to_string","","",3,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["usize"],"name":"result"}}],[11,"read_exact","","",3,null],[11,"clone","tokio_io::codec","",4,{"inputs":[{"name":"self"}],"output":{"name":"bytescodec"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"bytescodec"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",4,{"inputs":[],"output":{"name":"bytescodec"}}],[11,"decode","","",4,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["option","error"],"name":"result"}}],[11,"encode","","",4,{"inputs":[{"name":"self"},{"name":"bytes"},{"name":"bytesmut"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"linescodec"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"linescodec"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"new","","Returns a `LinesCodec` for splitting up data into lines.",5,{"inputs":[],"output":{"name":"linescodec"}}],[11,"decode","","",5,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["option","error"],"name":"result"}}],[11,"decode_eof","","",5,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["option","error"],"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"self"},{"name":"string"},{"name":"bytesmut"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","tokio_io::io","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"from_parts","tokio_io::codec","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",8,{"inputs":[{"name":"framedparts"},{"name":"u"}],"output":{"name":"framed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Frame`.",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Frame`.",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream and the buffer with unprocessed data.",8,{"inputs":[{"name":"self"}],"output":{"name":"framedparts"}}],[11,"into_parts_and_codec","","Consumes the `Frame`, returning its underlying I/O stream and the buffer with unprocessed data, and also the current codec state.",8,null],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",8,null],[11,"poll_complete","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode_eof","","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",1,{"inputs":[{"name":"self"},{"name":"bytesmut"}],"output":{"generics":["option"],"name":"result"}}],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",9,{"inputs":[{"name":"t"},{"name":"d"}],"output":{"name":"framedread"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedRead`.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedRead`.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O stream.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"decoder","","Returns a reference to the underlying decoder.",9,{"inputs":[{"name":"self"}],"output":{"name":"d"}}],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",9,{"inputs":[{"name":"self"}],"output":{"name":"d"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",9,null],[11,"poll_complete","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",10,{"inputs":[{"name":"t"},{"name":"e"}],"output":{"name":"framedwrite"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedWrite`.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedWrite`.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"encoder","","Returns a reference to the underlying decoder.",10,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",10,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"start_send","","",10,null],[11,"poll_complete","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","tokio_io::codec::length_delimited","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Framed` with default configuration values.",13,{"inputs":[{"name":"t"}],"output":{"name":"framed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",13,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",13,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",13,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"start_send","","",13,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["error"],"name":"startsend"}}],[11,"poll_complete","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"close","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `FramedRead` with default configuration values.",12,{"inputs":[{"name":"t"}],"output":{"name":"framedread"}}],[11,"max_frame_length","","Returns the current max frame setting",12,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_max_frame_length","","Updates the max frame setting.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedRead`.",12,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedRead`.",12,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O stream.",12,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"start_send","","",12,null],[11,"poll_complete","","",12,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",12,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"write","","",12,null],[11,"flush","","",12,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"write_buf","","",12,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","error"],"name":"poll"}}],[11,"new","","Creates a new `FramedWrite` with default configuration values.",14,{"inputs":[{"name":"t"}],"output":{"name":"framedwrite"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedWrite`.",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedWrite`.",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O stream.",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start_send","","",14,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["error"],"name":"startsend"}}],[11,"poll_complete","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"close","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"read","","",14,null],[11,"read_buf","","",14,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","error"],"name":"poll"}}],[11,"prepare_uninitialized_buffer","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new length delimited framer builder with default configuration values.",11,{"inputs":[],"output":{"name":"builder"}}],[11,"big_endian","","Read the length field as a big endian integer",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"little_endian","","Read the length field as a little endian integer",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"max_frame_length","","Sets the max frame length",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"length_field_length","","Sets the number of bytes used to represent the length field",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"length_field_offset","","Sets the number of bytes in the header before the length field",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"length_adjustment","","Delta between the payload length specified in the header and the real payload length",11,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"self"}}],[11,"num_skip","","Sets the number of bytes to skip before reading the payload",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"new_read","","Create a configured length delimited `FramedRead`",11,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framedread"}}],[11,"new_write","","Create a configured length delimited `FramedWrite`",11,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framedwrite"}}],[11,"new_framed","","Create a configured length delimited `Framed`",11,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framed"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",15,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","tokio_io::io","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Returns the underlying I/O object.",16,{"inputs":[{"name":"self"}],"output":{"name":"a"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",22,null],[11,"write","","",23,null],[11,"flush","","",23,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",23,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",24,{"inputs":[{"name":"t"}],"output":{"name":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",24,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",24,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",24,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",24,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_start","","Changes the starting index of this window to the index specified.",24,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"set_end","","Changes the end index of this window to the index specified.",24,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"as_ref","","",24,null],[11,"as_mut","","",24,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error component is `io::Error`",null,null],[6,"IoStream","","A convenience typedef around a `Stream` whose error component is `io::Error`",null,null],[8,"AsyncRead","","A trait for readable objects which operated in an asynchronous and futures-aware fashion.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to `read`. Returns `true` if the supplied buffer was zeroed out.",26,null],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`, returning how many bytes were read.",26,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","error"],"name":"poll"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",26,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",26,null],[8,"AsyncWrite","","A trait for writable objects which operated in an asynchronous and futures-aware fashion.",null,null],[10,"shutdown","","Initiates or attempts to shut down this writer, returning success when the I/O connection has completely shut down.",27,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes were written.",27,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","error"],"name":"poll"}}],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from the `Read` and `Write` traits.",null,null]],"paths":[[3,"FramedParts"],[8,"Decoder"],[8,"Encoder"],[3,"AllowStdIo"],[3,"BytesCodec"],[3,"LinesCodec"],[3,"Copy"],[3,"Flush"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"Builder"],[3,"FramedRead"],[3,"Framed"],[3,"FramedWrite"],[3,"FrameTooBig"],[3,"Lines"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[3,"WriteAll"],[8,"AsyncRead"],[8,"AsyncWrite"]]};
searchIndex["tokio_timer"] = {"doc":"Timer facilities for Tokio","items":[[3,"Interval","tokio_timer","A stream representing notifications at fixed interval",null,null],[3,"Sleep","","A `Future` that does nothing and completes after the requested duration",null,null],[3,"Timer","","A facility for scheduling timeouts",null,null],[3,"Timeout","","Allows a given `Future` to execute for a max duration",null,null],[3,"TimeoutStream","","Allows a given `Stream` to take a max duration to yield the next value.",null,null],[3,"Builder","","Configures and builds a `Timer`",null,null],[4,"TimerError","","The error type for timer operations.",null,null],[13,"TooLong","","The requested timeout exceeds the timer's `max_timeout` setting.",0,null],[13,"NoCapacity","","The timer has reached capacity and cannot support new timeouts.",0,null],[4,"TimeoutError","","The error type for timeout operations.",null,null],[13,"Timer","","An error caused by the timer",1,null],[13,"TimedOut","","The operation timed out",1,null],[5,"wheel","","Configure and build a `Timer` backed by a hashed wheel.",null,{"inputs":[],"output":{"name":"builder"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option","timererror"],"name":"poll"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timer"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"timererror"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"timererror"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"timeouterror"}}],[11,"sleep","","Returns a future that completes once the given instant has been reached",3,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"sleep"}}],[11,"timeout","","Allow the given future to execute for at most `duration` time.",3,{"inputs":[{"name":"self"},{"name":"f"},{"name":"duration"}],"output":{"name":"timeout"}}],[11,"timeout_stream","","Allow the given stream to execute for at most `duration` time per yielded value.",3,{"inputs":[{"name":"self"},{"name":"t"},{"name":"duration"}],"output":{"name":"timeoutstream"}}],[11,"interval","","Creates a new interval which will fire at `dur` time into the future, and will repeat every `dur` interval after",3,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"interval"}}],[11,"interval_at","","Creates a new interval which will fire at the time specified by `at`, and then will repeat every `dur` interval after",3,{"inputs":[{"name":"self"},{"name":"instant"},{"name":"duration"}],"output":{"name":"interval"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"timer"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_expired","","Returns true if the `Sleep` is expired.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"remaining","","Returns the duration remaining",4,{"inputs":[{"name":"self"}],"output":{"name":"duration"}}],[11,"timer","","Returns a ref to the timer backing this `Sleep`",4,{"inputs":[{"name":"self"}],"output":{"name":"timer"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["timererror"],"name":"poll"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"get_ref","","Gets a reference to the underlying future in this timeout.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying future in this timeout.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this timeout, returning the underlying future.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Gets a reference to the underlying stream in this timeout.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying stream in this timeout.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this timeout, returning the underlying stream.",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"tick_duration","","Set the timer tick duration.",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"self"}}],[11,"num_slots","","Set the number of slots in the timer wheel.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"initial_capacity","","Set the initial capacity of the timer",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"max_capacity","","Set the max capacity of the timer",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"max_timeout","","Set the max timeout duration that can be requested",7,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"self"}}],[11,"channel_capacity","","Set the timer communication channel capacity",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"thread_name","","Set the name for the spawned thread.",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"build","","Build the configured `Timer` and return a handle to it.",7,{"inputs":[{"name":"self"}],"output":{"name":"timer"}}]],"paths":[[4,"TimerError"],[4,"TimeoutError"],[3,"Interval"],[3,"Timer"],[3,"Sleep"],[3,"Timeout"],[3,"TimeoutStream"],[3,"Builder"]]};
searchIndex["tokio_tls"] = {"doc":"Async TLS streams","items":[[3,"TlsStream","tokio_tls","A wrapper around an underlying raw stream which implements the TLS or SSL protocol.",null,null],[3,"ConnectAsync","","Future returned from `TlsConnectorExt::connect_async` which will resolve once the connection handshake has finished.",null,null],[3,"AcceptAsync","","Future returned from `TlsAcceptorExt::accept_async` which will resolve once the accept handshake has finished.",null,null],[8,"TlsConnectorExt","","Extension trait for the `TlsConnector` type in the `native_tls` crate.",null,null],[10,"connect_async","","Connects the provided stream with this connector, assuming the provided domain.",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"s"}],"output":{"name":"connectasync"}}],[10,"danger_connect_async_without_providing_domain_for_certificate_verification_and_server_name_indication","","Like `connect_async`, but does not validate the server's domain name against its certificate.",0,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"connectasync"}}],[8,"TlsAcceptorExt","","Extension trait for the `TlsAcceptor` type in the `native_tls` crate.",null,null],[10,"accept_async","","Accepts a new client connection with the provided stream.",1,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"acceptasync"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get access to the internal `native_tls::TlsStream` stream which also transitively allows access to `S`.",2,{"inputs":[{"name":"self"}],"output":{"name":"tlsstream"}}],[11,"get_mut","","Get mutable access to the internal `native_tls::TlsStream` stream which also transitively allows mutable access to `S`.",2,{"inputs":[{"name":"self"}],"output":{"name":"tlsstream"}}],[11,"read","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["tlsstream","error"],"name":"poll"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["tlsstream","error"],"name":"poll"}}]],"paths":[[8,"TlsConnectorExt"],[8,"TlsAcceptorExt"],[3,"TlsStream"],[3,"ConnectAsync"],[3,"AcceptAsync"]]};
searchIndex["tokio_tungstenite"] = {"doc":"Async WebSocket usage.","items":[[3,"WebSocketStream","tokio_tungstenite","A wrapper around an underlying raw stream which implements the WebSocket protocol.",null,null],[3,"ConnectAsync","","Future returned from client_async() which will resolve once the connection handshake has finished.",null,null],[3,"AcceptAsync","","Future returned from accept_async() which will resolve once the connection handshake has finished.",null,null],[5,"connect_async","","Connect to a given URL.",null,{"inputs":[{"name":"r"},{"name":"remote"}],"output":{"generics":["future"],"name":"box"}}],[5,"client_async_tls","","Creates a WebSocket handshake from a request and a stream, upgrading the stream to TLS if required.",null,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"generics":["future"],"name":"box"}}],[5,"client_async","","Creates a WebSocket handshake from a request and a stream. For convenience, the user may call this with a url string, a URL, or a `Request`. Calling with `Request` allows the user to add a WebSocket protocol or other custom headers.",null,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"connectasync"}}],[5,"accept_async","","Accepts a new WebSocket connection with the provided stream.",null,{"inputs":[{"name":"s"}],"output":{"generics":["nocallback"],"name":"acceptasync"}}],[5,"accept_hdr_async","","Accepts a new WebSocket connection with the provided stream.",null,{"inputs":[{"name":"s"},{"name":"c"}],"output":{"name":"acceptasync"}}],[0,"stream","","Convenience wrapper for streams to switch between plain TCP and TLS at runtime.",null,null],[4,"Stream","tokio_tungstenite::stream","Stream, either plain TCP or TLS.",null,null],[13,"Plain","","Unencrypted socket stream.",0,null],[13,"Tls","","Encrypted socket stream.",0,null],[8,"NoDelay","","Trait to switch TCP_NODELAY.",null,null],[10,"set_nodelay","","Set the TCP_NODELAY option to the given value.",1,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"ioresult"}}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"set_nodelay","","",0,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"ioresult"}}],[11,"prepare_uninitialized_buffer","","",0,null],[11,"read_buf","","",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","ioerror"],"name":"poll"}}],[11,"shutdown","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["ioerror"],"name":"poll"}}],[11,"write_buf","","",0,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["usize","ioerror"],"name":"poll"}}],[11,"poll","tokio_tungstenite","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option","wserror"],"name":"poll"}}],[11,"start_send","","",2,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"generics":["message","wserror"],"name":"startsend"}}],[11,"poll_complete","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["wserror"],"name":"poll"}}],[11,"close","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["wserror"],"name":"poll"}}],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["wserror"],"name":"poll"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["wserror"],"name":"poll"}}]],"paths":[[4,"Stream"],[8,"NoDelay"],[3,"WebSocketStream"],[3,"ConnectAsync"],[3,"AcceptAsync"]]};
searchIndex["tungstenite"] = {"doc":"Lightweight, flexible WebSockets for Rust.","items":[[4,"Message","tungstenite","An enum representing the various forms of a WebSocket message.",null,null],[13,"Text","","A text WebSocket message",0,null],[13,"Binary","","A binary WebSocket message",0,null],[13,"Ping","","A ping message with the specified payload",0,null],[13,"Pong","","A pong message with the specified payload",0,null],[0,"error","","Error handling.",null,null],[4,"Error","tungstenite::error","Possible WebSocket errors",null,null],[13,"ConnectionClosed","","WebSocket connection closed (normally)",1,null],[13,"Io","","Input-output error",1,null],[13,"Tls","","TLS error",1,null],[13,"Capacity","","Buffer capacity exhausted",1,null],[13,"Protocol","","Protocol violation",1,null],[13,"Utf8","","UTF coding error",1,null],[13,"Url","","Invlid URL.",1,null],[13,"Http","","HTTP error.",1,null],[0,"tls","","TLS error wrapper module, feature-gated.",null,null],[3,"Error","tungstenite::error::tls","An error returned from the TLS implementation.",null,null],[6,"Result","tungstenite::error","Result type of all Tungstenite library calls.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"utf8error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"protocol","tungstenite","Generic WebSocket message stream.",null,null],[3,"CloseFrame","tungstenite::protocol","A struct representing the close command.",null,null],[12,"code","","The reason as a code.",2,null],[12,"reason","","The reason as text string.",2,null],[3,"WebSocket","","WebSocket input-output stream.",null,null],[4,"Message","","An enum representing the various forms of a WebSocket message.",null,null],[13,"Text","","A text WebSocket message",0,null],[13,"Binary","","A binary WebSocket message",0,null],[13,"Ping","","A ping message with the specified payload",0,null],[13,"Pong","","A pong message with the specified payload",0,null],[4,"Role","","Indicates a Client or Server role of the websocket",null,null],[13,"Server","","This socket is a server",3,null],[13,"Client","","This socket is a client",3,null],[0,"frame","","Utilities to work with raw WebSocket frames.",null,null],[3,"Frame","tungstenite::protocol::frame","A struct representing a WebSocket frame.",null,null],[3,"CloseFrame","","A struct representing the close command.",null,null],[12,"code","","The reason as a code.",2,null],[12,"reason","","The reason as text string.",2,null],[3,"FrameSocket","","A reader and writer for WebSocket frames.",null,null],[0,"coding","","Various codes defined in RFC 6455.",null,null],[4,"OpCode","tungstenite::protocol::frame::coding","WebSocket message opcode as in RFC 6455.",null,null],[13,"Data","","Data (text or binary).",4,null],[13,"Control","","Control message (close, ping, pong).",4,null],[4,"Data","","Data opcodes as in RFC 6455",null,null],[13,"Continue","","0x0 denotes a continuation frame",5,null],[13,"Text","","0x1 denotes a text frame",5,null],[13,"Binary","","0x2 denotes a binary frame",5,null],[13,"Reserved","","0x3-7 are reserved for further non-control frames",5,null],[4,"Control","","Control opcodes as in RFC 6455",null,null],[13,"Close","","0x8 denotes a connection close",6,null],[13,"Ping","","0x9 denotes a ping",6,null],[13,"Pong","","0xa denotes a pong",6,null],[13,"Reserved","","0xb-f are reserved for further control frames",6,null],[4,"CloseCode","","Status code used to indicate why an endpoint is closing the WebSocket connection.",null,null],[13,"Normal","","Indicates a normal closure, meaning that the purpose for which the connection was established has been fulfilled.",7,null],[13,"Away","","Indicates that an endpoint is \"going away\", such as a server going down or a browser having navigated away from a page.",7,null],[13,"Protocol","","Indicates that an endpoint is terminating the connection due to a protocol error.",7,null],[13,"Unsupported","","Indicates that an endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).",7,null],[13,"Status","","Indicates that no status code was included in a closing frame. This close code makes it possible to use a single method, `on_close` to handle even cases where no close code was provided.",7,null],[13,"Abnormal","","Indicates an abnormal closure. If the abnormal closure was due to an error, this close code will not be used. Instead, the `on_error` method of the handler will be called with the error. However, if the connection is simply dropped, without an error, this close code will be sent to the handler.",7,null],[13,"Invalid","","Indicates that an endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [RFC3629] data within a text message).",7,null],[13,"Policy","","Indicates that an endpoint is terminating the connection because it has received a message that violates its policy.  This is a generic status code that can be returned when there is no other more suitable status code (e.g., Unsupported or Size) or if there is a need to hide specific details about the policy.",7,null],[13,"Size","","Indicates that an endpoint is terminating the connection because it has received a message that is too big for it to process.",7,null],[13,"Extension","","Indicates that an endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the response message of the WebSocket handshake.  The list of extensions that are needed should be given as the reason for closing. Note that this status code is not used by the server, because it can fail the WebSocket handshake instead.",7,null],[13,"Error","","Indicates that a server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",7,null],[13,"Restart","","Indicates that the server is restarting. A client may choose to reconnect, and if it does, it should use a randomized delay of 5-30 seconds between attempts.",7,null],[13,"Again","","Indicates that the server is overloaded and the client should either connect to a different IP (when multiple targets exist), or reconnect to the same IP when a user has performed an action.",7,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"opcode"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"opcode"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"data"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"data"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"data"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"control"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"control"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"control"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",4,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from","","",4,{"inputs":[{"name":"u8"}],"output":{"name":"opcode"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"closecode"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"closecode"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"closecode"}}],[11,"is_allowed","","Check if this CloseCode is allowed.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"from","","",7,{"inputs":[{"name":"u16"}],"output":{"name":"closecode"}}],[11,"fmt","tungstenite::protocol","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"closeframe"}}],[11,"into_owned","","Convert into a owned string.",2,{"inputs":[{"name":"self"}],"output":{"name":"closeframe"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","tungstenite::protocol::frame","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[11,"len","","Get the length of the frame. This is the length of the header + the length of the payload.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_final","","Test whether the frame is a final frame.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_rsv1","","Test whether the first reserved bit is set.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_rsv2","","Test whether the second reserved bit is set.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_rsv3","","Test whether the third reserved bit is set.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"opcode","","Get the OpCode of the frame.",8,{"inputs":[{"name":"self"}],"output":{"name":"opcode"}}],[11,"payload","","Get a reference to the frame's payload.",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"set_final","","Make this frame a final frame.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"frame"}}],[11,"set_rsv1","","Set the first reserved bit.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"frame"}}],[11,"set_rsv2","","Set the second reserved bit.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"frame"}}],[11,"set_rsv3","","Set the third reserved bit.",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"frame"}}],[11,"set_opcode","","Set the OpCode.",8,{"inputs":[{"name":"self"},{"name":"opcode"}],"output":{"name":"frame"}}],[11,"payload_mut","","Edit the frame's payload.",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"into_data","","Consume the frame into its payload as binary.",8,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"into_string","","Consume the frame into its payload as string.",8,{"inputs":[{"name":"self"}],"output":{"generics":["string","fromutf8error"],"name":"stdresult"}}],[11,"into_close","","Consume the frame into a closing frame.",8,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"message","","Create a new data frame.",8,{"inputs":[{"generics":["u8"],"name":"vec"},{"name":"opcode"},{"name":"bool"}],"output":{"name":"frame"}}],[11,"pong","","Create a new Pong control frame.",8,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"frame"}}],[11,"ping","","Create a new Ping control frame.",8,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"frame"}}],[11,"close","","Create a new Close control frame.",8,{"inputs":[{"generics":["closeframe"],"name":"option"}],"output":{"name":"frame"}}],[11,"parse","","Parse the input stream into a frame.",8,{"inputs":[{"name":"cursor"}],"output":{"generics":["option"],"name":"result"}}],[11,"format","","Write a frame out to a buffer",8,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"frame"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new frame socket.",9,{"inputs":[{"name":"stream"}],"output":{"name":"self"}}],[11,"from_partially_read","","Create a new frame socket from partially read data.",9,{"inputs":[{"name":"stream"},{"generics":["u8"],"name":"vec"}],"output":{"name":"self"}}],[11,"into_inner","","Extract a stream from the socket.",9,null],[11,"get_ref","","Returns a shared reference to the inner stream.",9,{"inputs":[{"name":"self"}],"output":{"name":"stream"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",9,{"inputs":[{"name":"self"}],"output":{"name":"stream"}}],[11,"read_frame","","Read a frame from stream.",9,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"write_frame","","Write a frame to stream.",9,{"inputs":[{"name":"self"},{"name":"frame"}],"output":{"name":"result"}}],[11,"write_pending","","Complete pending write, if any.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","tungstenite","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"message"}}],[11,"text","","Create a new text WebSocket message from a stringable.",0,{"inputs":[{"name":"s"}],"output":{"name":"message"}}],[11,"binary","","Create a new binary WebSocket message by converting to Vec.",0,{"inputs":[{"name":"b"}],"output":{"name":"message"}}],[11,"is_text","","Indicates whether a message is a text message.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_binary","","Indicates whether a message is a binary message.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ping","","Indicates whether a message is a ping message.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_pong","","Indicates whether a message is a pong message.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","Get the length of the WebSocket message.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the WebSocket message has no content. For example, if the other side of the connection sent an empty string.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_data","","Consume the WebSocket and return it as binary data.",0,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"into_text","","Attempt to consume the WebSocket message and convert it to a String.",0,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"result"}}],[11,"to_text","","Attempt to get a &str from the WebSocket message, this will try to convert binary data to utf8.",0,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"message"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"message"}}],[11,"from","","",0,null],[11,"from","","",0,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"message"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"stdresult"}}],[11,"fmt","tungstenite::protocol","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"role"}}],[11,"from_raw_socket","","Convert a raw socket into a WebSocket without performing a handshake.",10,{"inputs":[{"name":"stream"},{"name":"role"}],"output":{"name":"self"}}],[11,"from_partially_read","","Convert a raw socket into a WebSocket without performing a handshake.",10,{"inputs":[{"name":"stream"},{"generics":["u8"],"name":"vec"},{"name":"role"}],"output":{"name":"self"}}],[11,"get_ref","","Returns a shared reference to the inner stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"stream"}}],[11,"get_mut","","Returns a mutable reference to the inner stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"stream"}}],[11,"read_message","","Read a message from stream, if possible.",10,{"inputs":[{"name":"self"}],"output":{"generics":["message"],"name":"result"}}],[11,"write_message","","Send a message to stream, if possible.",10,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"result"}}],[11,"close","","Close the connection.",10,{"inputs":[{"name":"self"},{"generics":["closeframe"],"name":"option"}],"output":{"name":"result"}}],[11,"write_pending","","Flush the pending send queue.",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"client","tungstenite","Methods to connect to an WebSocket as a client.",null,null],[5,"connect","tungstenite::client","Connect to the given WebSocket in blocking mode.",null,{"inputs":[{"name":"req"}],"output":{"name":"result"}}],[5,"url_mode","","Get the mode of the given URL.",null,{"inputs":[{"name":"url"}],"output":{"generics":["mode"],"name":"result"}}],[5,"client","","Do the client handshake over the given stream.",null,{"inputs":[{"name":"req"},{"name":"stream"}],"output":{"generics":["handshakeerror"],"name":"stdresult"}}],[6,"AutoStream","","TCP stream switcher (plain/TLS).",null,null],[0,"server","tungstenite","Methods to accept an incoming WebSocket connection on a server.",null,null],[5,"accept","tungstenite::server","Accept the given Stream as a WebSocket.",null,{"inputs":[{"name":"s"}],"output":{"generics":["websocket","handshakeerror"],"name":"result"}}],[5,"accept_hdr","","Accept the given Stream as a WebSocket.",null,{"inputs":[{"name":"s"},{"name":"c"}],"output":{"generics":["websocket","handshakeerror"],"name":"result"}}],[0,"handshake","tungstenite","WebSocket handshake control.",null,null],[3,"MidHandshake","tungstenite::handshake","A WebSocket handshake.",null,null],[4,"HandshakeError","","A handshake result.",null,null],[13,"Interrupted","","Handshake was interrupted (would block).",11,null],[13,"Failure","","Handshake failed.",11,null],[0,"headers","","HTTP Request and response header handling.",null,null],[3,"Headers","tungstenite::handshake::headers","HTTP request or response headers.",null,null],[3,"HeadersIter","","The iterator over headers.",null,null],[17,"MAX_HEADERS","","Limit for the number of header lines.",null,null],[8,"FromHttparse","","Trait to convert raw objects into HTTP parseables.",null,null],[10,"from_httparse","","Convert raw object into parsed HTTP headers.",12,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"find_first","","Get first header with the given name, if any.",13,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find","","Iterate over all headers with the given name.",13,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"headersiter"}}],[11,"header_is","","Check if the given header has the given value.",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[11,"header_is_ignore_case","","Check if the given header has the given value (case-insensitive).",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[11,"iter","","Allows to iterate over available headers.",13,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"next","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_httparse","","",13,null],[0,"client","tungstenite::handshake","Client handshake machine.",null,null],[3,"Request","tungstenite::handshake::client","Client request.",null,null],[12,"url","","`ws://` or `wss://` URL to connect to.",15,null],[12,"extra_headers","","Extra HTTP headers to append to the request.",15,null],[3,"ClientHandshake","","Client handshake role.",null,null],[3,"Response","","Server response.",null,null],[12,"code","","HTTP response code of the response.",16,null],[12,"headers","","Received headers.",16,null],[11,"add_protocol","","Adds a WebSocket protocol to the request.",15,{"inputs":[{"name":"self"},{"generics":["str"],"name":"cow"}],"output":null}],[11,"add_header","","Adds a custom header to the request.",15,{"inputs":[{"name":"self"},{"generics":["str"],"name":"cow"},{"generics":["str"],"name":"cow"}],"output":null}],[11,"from","","",15,{"inputs":[{"name":"url"}],"output":{"name":"self"}}],[11,"start","","Initiate a client handshake.",17,{"inputs":[{"name":"s"},{"name":"request"}],"output":{"name":"midhandshake"}}],[11,"stage_finished","","",17,{"inputs":[{"name":"self"},{"name":"stageresult"}],"output":{"generics":["processingresult"],"name":"result"}}],[11,"from_httparse","","",16,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[0,"server","tungstenite::handshake","Server handshake machine.",null,null],[3,"Request","tungstenite::handshake::server","Request from the client.",null,null],[12,"path","","Path part of the URL.",18,null],[12,"headers","","HTTP headers.",18,null],[3,"NoCallback","","Stub for callback that does nothing.",null,null],[3,"ServerHandshake","","Server handshake role.",null,null],[8,"Callback","","The callback trait.",null,null],[10,"on_request","","Called whenever the server read the request from the client and is ready to reply to it. May return additional reply headers. Returning an error resulting in rejecting the incoming connection.",19,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"generics":["option"],"name":"result"}}],[11,"reply","","Reply to the response.",18,{"inputs":[{"name":"self"},{"generics":["vec"],"name":"option"}],"output":{"generics":["vec"],"name":"result"}}],[11,"from_httparse","","",18,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"nocallback"}}],[11,"on_request","","",20,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"generics":["option"],"name":"result"}}],[11,"start","","Start server handshake. `callback` specifies a custom callback which the user can pass to the handshake, this callback will be called when the a websocket client connnects to the server, you can specify the callback if you want to add additional header to the client upon join based on the incoming headers.",21,{"inputs":[{"name":"s"},{"name":"c"}],"output":{"name":"midhandshake"}}],[11,"stage_finished","","",21,{"inputs":[{"name":"self"},{"name":"stageresult"}],"output":{"generics":["processingresult"],"name":"result"}}],[8,"HandshakeRole","tungstenite::handshake","Handshake role.",null,null],[11,"handshake","","Restarts the handshake process.",22,{"inputs":[{"name":"self"}],"output":{"generics":["handshakeerror"],"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"stream","tungstenite","Convenience wrapper for streams to switch between plain TCP and TLS at runtime.",null,null],[4,"Mode","tungstenite::stream","Stream mode, either plain TCP or TLS.",null,null],[13,"Plain","","Plain mode (`ws://` URL).",23,null],[13,"Tls","","TLS mode (`wss://` URL).",23,null],[4,"Stream","","Stream, either plain TCP or TLS.",null,null],[13,"Plain","","Unencrypted socket stream.",24,null],[13,"Tls","","Encrypted socket stream.",24,null],[8,"NoDelay","","Trait to switch TCP_NODELAY.",null,null],[10,"set_nodelay","","Set the TCP_NODELAY option to the given value.",25,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"ioresult"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"read","","",24,null],[11,"write","","",24,null],[11,"flush","","",24,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"set_nodelay","","",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"ioresult"}}],[0,"util","tungstenite","Helper traits to ease non-blocking handling.",null,null],[8,"NonBlockingError","tungstenite::util","Non-blocking IO handling.",null,null],[10,"into_non_blocking","","Convert WouldBlock to None and don't touch other errors.",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"NonBlockingResult","","Non-blocking IO wrapper.",null,null],[16,"Result","","Type of the converted result: `Result<Option<T>, E>`",27,null],[10,"no_block","","Perform the non-block conversion.",27,null],[11,"into_non_blocking","tungstenite::error","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","tungstenite::error::tls","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"openssl_error","","",28,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",28,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"description","","",28,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}]],"paths":[[4,"Message"],[4,"Error"],[3,"CloseFrame"],[4,"Role"],[4,"OpCode"],[4,"Data"],[4,"Control"],[4,"CloseCode"],[3,"Frame"],[3,"FrameSocket"],[3,"WebSocket"],[4,"HandshakeError"],[8,"FromHttparse"],[3,"Headers"],[3,"HeadersIter"],[3,"Request"],[3,"Response"],[3,"ClientHandshake"],[3,"Request"],[8,"Callback"],[3,"NoCallback"],[3,"ServerHandshake"],[3,"MidHandshake"],[4,"Mode"],[4,"Stream"],[8,"NoDelay"],[8,"NonBlockingError"],[8,"NonBlockingResult"],[3,"Error"]]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at compile time. It depends only on libcore.","items":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Greater`.",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Less`.",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Equal`.",null,null],[0,"consts","","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[0,"bit","typenum","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"b0"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"b0"}}],[11,"new","","Instantiates a singleton representing this bit.",0,{"inputs":[],"output":{"name":"b0"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"b1"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"b1"}}],[11,"new","","Instantiates a singleton representing this bit.",1,{"inputs":[],"output":{"name":"b1"}}],[11,"to_u8","","",0,{"inputs":[],"output":{"name":"u8"}}],[11,"to_bool","","",0,{"inputs":[],"output":{"name":"bool"}}],[11,"to_u8","","",1,{"inputs":[],"output":{"name":"u8"}}],[11,"to_bool","","",1,{"inputs":[],"output":{"name":"bool"}}],[11,"not","","",0,null],[11,"not","","",1,null],[11,"bitand","","",0,null],[11,"bitand","","",1,null],[11,"bitand","","",1,null],[11,"bitor","","",0,null],[11,"bitor","","",0,null],[11,"bitor","","",1,null],[11,"bitxor","","",0,null],[11,"bitxor","","",1,null],[11,"bitxor","","",0,null],[11,"bitxor","","",1,null],[11,"min","","",0,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"name":"b0"}}],[11,"min","","",0,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"name":"b0"}}],[11,"min","","",1,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"name":"b0"}}],[11,"min","","",1,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"name":"b1"}}],[11,"max","","",0,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"name":"b0"}}],[11,"max","","",0,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"name":"b1"}}],[11,"max","","",1,{"inputs":[{"name":"self"},{"name":"b0"}],"output":{"name":"b1"}}],[11,"max","","",1,{"inputs":[{"name":"self"},{"name":"b1"}],"output":{"name":"b1"}}],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the most significant bit. `UTerm` by itself represents zero, which is aliased to `U0`.",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least significant bit and `U` is the rest of the number. Conceptually, `U` should be bound by the trait `Unsigned` and `B` should be bound by the trait `Bit`, but enforcing these bounds causes linear instead of logrithmic scaling in some places, so they are left off for now. They may be enforced in future.",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I, B> = <N as SetBit<I, B>>::Output`.",null,null],[8,"GetBit","","",null,null],[16,"Output","","",2,null],[8,"SetBit","","A type operator that, when implemented for unsigned integer `N`, sets the bit at position `I` to `B`.",null,null],[16,"Output","","",3,null],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"uterm"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"uterm"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"uterm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"uterm"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"uterm"}}],[11,"new","","Instantiates a singleton representing this unsigned integer.",4,{"inputs":[],"output":{"name":"uterm"}}],[11,"to_u8","","",4,{"inputs":[],"output":{"name":"u8"}}],[11,"to_u16","","",4,{"inputs":[],"output":{"name":"u16"}}],[11,"to_u32","","",4,{"inputs":[],"output":{"name":"u32"}}],[11,"to_u64","","",4,{"inputs":[],"output":{"name":"u64"}}],[11,"to_usize","","",4,{"inputs":[],"output":{"name":"usize"}}],[11,"to_i8","","",4,{"inputs":[],"output":{"name":"i8"}}],[11,"to_i16","","",4,{"inputs":[],"output":{"name":"i16"}}],[11,"to_i32","","",4,{"inputs":[],"output":{"name":"i32"}}],[11,"to_i64","","",4,{"inputs":[],"output":{"name":"i64"}}],[11,"to_isize","","",4,{"inputs":[],"output":{"name":"isize"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"uint"}}],[11,"new","","Instantiates a singleton representing this unsigned integer.",5,{"inputs":[],"output":{"name":"uint"}}],[11,"to_u8","","",5,{"inputs":[],"output":{"name":"u8"}}],[11,"to_u16","","",5,{"inputs":[],"output":{"name":"u16"}}],[11,"to_u32","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"to_u64","","",5,{"inputs":[],"output":{"name":"u64"}}],[11,"to_usize","","",5,{"inputs":[],"output":{"name":"usize"}}],[11,"to_i8","","",5,{"inputs":[],"output":{"name":"i8"}}],[11,"to_i16","","",5,{"inputs":[],"output":{"name":"i16"}}],[11,"to_i32","","",5,{"inputs":[],"output":{"name":"i32"}}],[11,"to_i64","","",5,{"inputs":[],"output":{"name":"i64"}}],[11,"to_isize","","",5,{"inputs":[],"output":{"name":"isize"}}],[11,"len","","",4,null],[11,"len","","",5,null],[11,"add","","",4,null],[11,"add","","",5,null],[11,"add","","",4,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",4,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"sub","","",4,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",4,null],[11,"sub","","",5,null],[11,"bitand","","",4,null],[11,"bitand","","",5,null],[11,"bitor","","",4,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitxor","","",4,null],[11,"bitxor","","",5,null],[11,"shl","","",4,null],[11,"shl","","",4,null],[11,"shl","","",5,null],[11,"shl","","",5,null],[11,"shl","","",5,null],[11,"shl","","",4,null],[11,"shl","","",5,null],[11,"shr","","",4,null],[11,"shr","","",5,null],[11,"shr","","",4,null],[11,"shr","","",4,null],[11,"shr","","",5,null],[11,"shr","","",5,null],[11,"shr","","",5,null],[11,"mul","","",5,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"mul","","",4,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"div","","",4,null],[11,"div","","",5,null],[11,"rem","","",4,null],[11,"rem","","",5,null],[11,"partial_div","","",4,null],[11,"partial_div","","",5,null],[11,"min","","",4,null],[11,"min","","",5,null],[11,"max","","",4,null],[11,"max","","",5,null],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"pint"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"pint"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"pint"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"nint"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"nint"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"nint"}}],[11,"new","","Instantiates a singleton representing this strictly positive integer.",6,{"inputs":[],"output":{"name":"pint"}}],[11,"new","","Instantiates a singleton representing this strictly negative integer.",7,{"inputs":[],"output":{"name":"nint"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"z0"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"z0"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"z0"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"z0"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"z0"}}],[11,"new","","Instantiates a singleton representing the integer 0.",8,{"inputs":[],"output":{"name":"z0"}}],[11,"to_i8","","",8,{"inputs":[],"output":{"name":"i8"}}],[11,"to_i16","","",8,{"inputs":[],"output":{"name":"i16"}}],[11,"to_i32","","",8,{"inputs":[],"output":{"name":"i32"}}],[11,"to_i64","","",8,{"inputs":[],"output":{"name":"i64"}}],[11,"to_isize","","",8,{"inputs":[],"output":{"name":"isize"}}],[11,"to_i8","","",6,{"inputs":[],"output":{"name":"i8"}}],[11,"to_i16","","",6,{"inputs":[],"output":{"name":"i16"}}],[11,"to_i32","","",6,{"inputs":[],"output":{"name":"i32"}}],[11,"to_i64","","",6,{"inputs":[],"output":{"name":"i64"}}],[11,"to_isize","","",6,{"inputs":[],"output":{"name":"isize"}}],[11,"to_i8","","",7,{"inputs":[],"output":{"name":"i8"}}],[11,"to_i16","","",7,{"inputs":[],"output":{"name":"i16"}}],[11,"to_i32","","",7,{"inputs":[],"output":{"name":"i32"}}],[11,"to_i64","","",7,{"inputs":[],"output":{"name":"i64"}}],[11,"to_isize","","",7,{"inputs":[],"output":{"name":"isize"}}],[11,"neg","","",8,null],[11,"neg","","",6,null],[11,"neg","","",7,null],[11,"add","","",8,null],[11,"add","","",6,null],[11,"add","","",7,null],[11,"add","","",6,null],[11,"add","","",7,null],[11,"add","","",6,null],[11,"add","","",7,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"sub","","",6,null],[11,"sub","","",7,null],[11,"sub","","",6,null],[11,"sub","","",7,null],[11,"sub","","",6,null],[11,"sub","","",7,null],[11,"mul","","",8,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"div","","",8,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"div","","",7,null],[11,"div","","",7,null],[11,"rem","","",8,null],[11,"rem","","",6,null],[11,"rem","","",6,null],[11,"rem","","",7,null],[11,"rem","","",7,null],[11,"powi","","",8,null],[11,"powi","","",8,null],[11,"powi","","",8,null],[11,"powi","","",9,null],[11,"powi","","",10,null],[11,"powi","","",10,null],[11,"powi","","",6,null],[11,"powi","","",7,null],[11,"powi","","",6,null],[11,"powi","","",7,null],[11,"powi","","",7,null],[11,"min","","",8,null],[11,"min","","",8,null],[11,"min","","",8,null],[11,"min","","",6,null],[11,"min","","",7,null],[11,"min","","",6,null],[11,"min","","",7,null],[11,"min","","",6,null],[11,"min","","",7,null],[11,"max","","",8,null],[11,"max","","",8,null],[11,"max","","",8,null],[11,"max","","",6,null],[11,"max","","",7,null],[11,"max","","",6,null],[11,"max","","",7,null],[11,"max","","",6,null],[11,"max","","",7,null],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All number types in this crate implement `NonZero` except `B0`, `U0`, and `Z0`.",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",11,{"inputs":[],"output":{"name":"ordering"}}],[8,"Bit","","The marker trait for compile time bits.",null,null],[10,"to_u8","","",12,{"inputs":[],"output":{"name":"u8"}}],[10,"to_bool","","",12,{"inputs":[],"output":{"name":"bool"}}],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[10,"to_u8","","",13,{"inputs":[],"output":{"name":"u8"}}],[10,"to_u16","","",13,{"inputs":[],"output":{"name":"u16"}}],[10,"to_u32","","",13,{"inputs":[],"output":{"name":"u32"}}],[10,"to_u64","","",13,{"inputs":[],"output":{"name":"u64"}}],[10,"to_usize","","",13,{"inputs":[],"output":{"name":"usize"}}],[10,"to_i8","","",13,{"inputs":[],"output":{"name":"i8"}}],[10,"to_i16","","",13,{"inputs":[],"output":{"name":"i16"}}],[10,"to_i32","","",13,{"inputs":[],"output":{"name":"i32"}}],[10,"to_i64","","",13,{"inputs":[],"output":{"name":"i64"}}],[10,"to_isize","","",13,{"inputs":[],"output":{"name":"isize"}}],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[10,"to_i8","","",14,{"inputs":[],"output":{"name":"i8"}}],[10,"to_i16","","",14,{"inputs":[],"output":{"name":"i16"}}],[10,"to_i32","","",14,{"inputs":[],"output":{"name":"i32"}}],[10,"to_i64","","",14,{"inputs":[],"output":{"name":"i64"}}],[10,"to_isize","","",14,{"inputs":[],"output":{"name":"isize"}}],[8,"TypeArray","","The marker trait for type-level arrays of type-level numbers.",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as `Self`, it is mainly useful for writing macros that can take arbitrary binary or unary operators.",null,null],[16,"Output","","Should always be `Self`",15,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",16,null],[8,"Pow","","A type operator that provides exponentiation by repeated squaring.",null,null],[16,"Output","","The result of the exponentiation.",17,null],[10,"powi","","This function isn't used in this crate, but may be useful for others. It is implemented for primitives.",17,null],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It provides a similar functionality to the function `core::cmp::Ord::cmp` but for types.",null,null],[16,"Output","","The result of the comparison. It should only ever be one of `Greater`, `Less`, or `Equal`.",18,null],[8,"Len","","A type operator that gives the length of an `Array` or the number of bits in a `UInt`.",null,null],[16,"Output","","The length as a type-level unsigned integer.",19,null],[10,"len","","This function isn't used in this crate, but may be useful for others.",19,null],[8,"PartialDiv","","Division as a partial function. This type operator performs division just as `Div`, but is only defined when the result is an integer (i.e. there is no remainder).",null,null],[16,"Output","","The type of the result of the division",20,null],[10,"partial_div","","Method for performing the division",20,null],[8,"Min","","A type operator that returns the minimum of `Self` and `Rhs`.",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",21,null],[10,"min","","Method returning the minimum",21,null],[8,"Max","","A type operator that returns the maximum of `Self` and `Rhs`.",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",22,null],[10,"max","","Method returning the maximum",22,null],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",23,null],[10,"is_less","","Method returning `True` or `False`.",23,null],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",24,null],[10,"is_equal","","Method returning `True` or `False`.",24,null],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",25,null],[10,"is_greater","","Method returning `True` or `False`.",25,null],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",26,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",26,null],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",27,null],[10,"is_not_equal","","Method returning `True` or `False`.",27,null],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",28,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",28,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their purpose is to increase the ergonomics of performing operations on the types defined here. For even more ergonomics, consider using the `op!` macro instead.",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A as BitAnd<B>>::Output`",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A as BitOr<B>>::Output`",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A as BitXor<B>>::Output`",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A as Shl<B>>::Output`",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> = <A as Shr<B>>::Output`",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as Add<B>>::Output`",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A as Sub<B>>::Output`",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A as Mul<B>>::Output`",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A as Div<B>>::Output`",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as Rem<B>>::Output`",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`: `PartialQuot<A, B> = <A as PartialDiv<B>>::Output`",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as Neg>::Output`",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as Abs>::Output`",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as Pow<B>>::Output`",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as Add<B1>>::Output`",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as Sub<B1>>::Output`",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as Mul<A>>::Output`",null,null],[6,"Cube","","Alias to make it easy to square. `Cube<A> = <Square<A> as Mul<A>>::Output`",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> = <A as Cmp<B>>::Output`",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as Len>::Output`",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> = <A as Min<B>>::Output`",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> = <A as Max<B>>::Output`",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A as IsLess<B>>::Output`",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A as IsEqual<B>>::Output`",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> = <A as IsGreater<B>>::Output`",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`: `GrEq<A, B> = <A as IsGreaterOrEqual<B>>::Output`",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A, B> = <A as IsLessOrEqual<B>>::Output`",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A, B> = <A as IsNotEqual<B>>::Output`",null,null],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is defined similarly to `UInt`, only its values can be more than bits, and it is designed to act as an array. So you can only add two if they have the same number of elements, for example.",null,null],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"aterm"}],"output":{"name":"bool"}}],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"aterm"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"self"},{"name":"aterm"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"aterm"}}],[11,"hash","","",29,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"bool"}}],[11,"cmp","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"self"},{"name":"tarr"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"tarr"}}],[11,"hash","","",30,null],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","",29,null],[11,"len","","",30,null],[11,"add","","",29,null],[11,"add","","",30,null],[11,"sub","","",29,null],[11,"sub","","",30,null],[11,"mul","","",29,null],[11,"mul","","",30,null],[11,"mul","typenum::int","",8,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",8,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"div","typenum::array","",29,null],[11,"div","","",30,null],[11,"partial_div","","",29,null],[11,"partial_div","","",30,null],[11,"rem","","",29,null],[11,"rem","","",30,null],[11,"neg","","",29,null],[11,"neg","","",30,null],[11,"eq","typenum","",31,{"inputs":[{"name":"self"},{"name":"greater"}],"output":{"name":"bool"}}],[11,"cmp","","",31,{"inputs":[{"name":"self"},{"name":"greater"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"self"},{"name":"greater"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"greater"}}],[11,"hash","","",31,null],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"greater"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"less"}],"output":{"name":"bool"}}],[11,"cmp","","",32,{"inputs":[{"name":"self"},{"name":"less"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"self"},{"name":"less"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"less"}}],[11,"hash","","",32,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"less"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"equal"}],"output":{"name":"bool"}}],[11,"cmp","","",33,{"inputs":[{"name":"self"},{"name":"equal"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"self"},{"name":"equal"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"equal"}}],[11,"hash","","",33,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"equal"}}],[11,"to_ordering","","",31,{"inputs":[],"output":{"name":"ordering"}}],[11,"to_ordering","","",32,{"inputs":[],"output":{"name":"ordering"}}],[11,"to_ordering","","",33,{"inputs":[],"output":{"name":"ordering"}}],[14,"op","","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!` instead.",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0 or newer.",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null]],"paths":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[6,"P1"],[6,"N1"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[3,"ATerm"],[3,"TArr"],[3,"Greater"],[3,"Less"],[3,"Equal"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed right-to-left and left-to-right text.  It is written in safe Rust, compatible with the current stable release.","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text. If a character is multiple bytes, its class will appear multiple times in the vector.",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",2,null],[4,"BidiClass","","Represents values of the Unicode character property `Bidi_Class`, also known as the bidirectional character type.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,{"inputs":[{"name":"char"}],"output":{"name":"bidiclass"}}],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in visual order.",null,null],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFTâ€‘TOâ€‘RIGHT ISOLATE",null,null],[17,"RLI","","RIGHTâ€‘TOâ€‘LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,null],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go as high as `max_depth`.",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go as high as `max_depth + 1`.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"level"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"ordering"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"level"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ltr","","New LTR level with smallest number value (0).",5,{"inputs":[],"output":{"name":"level"}}],[11,"rtl","","New RTL level with smallest number value (1).",5,{"inputs":[],"output":{"name":"level"}}],[11,"max_implicit_depth","","Maximum depth of the directional status stack during implicit resolutions.",5,{"inputs":[],"output":{"name":"u8"}}],[11,"max_explicit_depth","","Maximum depth of the directional status stack during explicit resolutions.",5,{"inputs":[],"output":{"name":"u8"}}],[11,"new","","Create new level, fail if number is larger than `max_depth + 1`.",5,{"inputs":[{"name":"u8"}],"output":{"generics":["level","error"],"name":"result"}}],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"u8"}],"output":{"generics":["level","error"],"name":"result"}}],[11,"number","","The level number.",5,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"is_ltr","","If this level is left-to-right.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_rtl","","If this level is right-to-left.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raise","","Raise level by `amount`, fail if number is larger than `max_depth + 1`.",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"self"}],"output":{"generics":["level","error"],"name":"result"}}],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if number is larger than `max_depth`.",5,{"inputs":[{"name":"self"}],"output":{"generics":["level","error"],"name":"result"}}],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this, or fail if number is larger than `max_depth + 1`.",5,{"inputs":[{"name":"self"}],"output":{"generics":["level","error"],"name":"result"}}],[11,"bidi_class","","Generate a character type based on a level (as specified in steps X10 and N2).",5,{"inputs":[{"name":"self"}],"output":{"name":"bidiclass"}}],[11,"vec","","",5,null],[11,"into","","Convert to the level number",5,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"from","","Create level by number",5,{"inputs":[{"name":"u8"}],"output":{"name":"level"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","unicode_bidi","",3,{"inputs":[{"name":"self"}],"output":{"name":"bidiclass"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bidiclass"}],"output":{"name":"bool"}}],[6,"LevelRun","","A maximal substring of characters with the same embedding level.",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"paragraphinfo"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"paragraphinfo"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"initialinfo"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"initialinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,{"inputs":[{"name":"str"},{"generics":["level"],"name":"option"}],"output":{"name":"initialinfo"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"bidiinfo"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"bidiinfo"}],"output":{"name":"bool"}}],[11,"new","","Split the text into paragraphs and determine the bidi embedding levels for each paragraph.",2,{"inputs":[{"name":"str"},{"generics":["level"],"name":"option"}],"output":{"name":"bidiinfo"}}],[11,"reordered_levels","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per byte.",2,{"inputs":[{"name":"self"},{"name":"paragraphinfo"},{"generics":["usize"],"name":"range"}],"output":{"generics":["level"],"name":"vec"}}],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per character.",2,{"inputs":[{"name":"self"},{"name":"paragraphinfo"},{"generics":["usize"],"name":"range"}],"output":{"generics":["level"],"name":"vec"}}],[11,"reorder_line","","Re-order a line based on resolved levels and return the line in display order.",2,{"inputs":[{"name":"self"},{"name":"paragraphinfo"},{"generics":["usize"],"name":"range"}],"output":{"generics":["str"],"name":"cow"}}],[11,"visual_runs","","Find the level runs within a line and return them in visual order.",2,null],[11,"has_rtl","","If processed text has any computed RTL levels",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities as described in Unicode Standard Annex #15.","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"size_hint","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible. See Unicode Standard Annex #15 for more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"generics":["char"],"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of Unicode that this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations as described in Unicode Standard Annex #15.",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D (canonical decomposition).",2,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD (compatibility decomposition).",2,{"inputs":[{"name":"self"}],"output":{"name":"decompositions"}}],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C (canonical decomposition followed by canonical composition).",2,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC (compatibility decomposition followed by canonical composition).",2,{"inputs":[{"name":"self"}],"output":{"name":"recompositions"}}]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["unreachable"] = {"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is statically unreachable and can be removed.",null,null],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,{"inputs":[{"name":"self"}],"output":null}],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the Rust programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules donâ€™t allow us to implement `ToSocketAddrs for (Host<S>, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII labels are encoded in punycode per IDNA.",2,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization of this address, as four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization of that address between `[` and `]` brackets, in the format per RFC 5952 A Recommendation for IPv6 Address Text Representation: lowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",2,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"host"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"inputs":[{"name":"str"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"hostandport"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",0,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"hostandport"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"inputs":[],"output":{"name":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple (as opposed to an opaque origin).",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"opaqueorigin"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"opaqueorigin"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"opaqueorigin"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"pop_if_empty","","Remove the last segment of this URLâ€™s path if it is empty, except if these was only one segment to begin with.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"pop","","Remove the last segment of this URLâ€™s path.",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"push","","Append the given segment at the end of this URLâ€™s path.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"extend","","Append each segment from the given iterator at the end of this URLâ€™s path.",7,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"generics":["position"],"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"generics":["position"],"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",8,{"inputs":[{"name":"self"},{"generics":["position"],"name":"range"}],"output":{"name":"str"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"form_urlencoded","","Parser and serializer for the `application/x-www-form-urlencoded` syntax, as used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"finish","","",9,null],[16,"Finished","","",9,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"parse"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.",10,{"inputs":[{"name":"self"}],"output":{"name":"parseintoowned"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"size_hint","","",12,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_mut_string","url","",14,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"finish","","",14,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",13,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer for a suffix of the given target.",13,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Remove any existing name/value pair.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"custom_encoding_override","","Set the character encoding to be used for names and values before percent-encoding.",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"append_pair","","Serialize and append a name/value pair.",13,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"self"}}],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",13,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"finish","","If this serializer was constructed with a string, take and return that string.",13,null],[11,"clone","url","",8,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"parseoptions"}}],[11,"base_url","","Change the base URL",15,{"inputs":[{"name":"self"},{"generics":["url"],"name":"option"}],"output":{"name":"self"}}],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",15,{"inputs":[{"name":"self"},{"generics":["fn"],"name":"option"}],"output":{"name":"self"}}],[11,"parse","","Parse an URL string with the configuration so far.",15,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","Parse an absolute URL from a string.",8,{"inputs":[{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",8,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",8,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_string","","Return the serialization of this URL.",8,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",8,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",8,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",8,{"inputs":[{"name":"self"}],"output":{"generics":["host"],"name":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",8,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"port","","Return the port number for this URL, if any.",8,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",8,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["hostandport"],"name":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesnâ€™t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"generics":["split"],"name":"option"}}],[11,"query","","Return this URLâ€™s query string, if any, as a percent-encoded ASCII string.",8,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"query_pairs","","Parse the URLâ€™s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",8,{"inputs":[{"name":"self"}],"output":{"name":"parse"}}],[11,"fragment","","Return this URLâ€™s fragment identifier, if any.",8,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"set_fragment","","Change this URLâ€™s fragment identifier.",8,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"}],"output":null}],[11,"set_query","","Change this URLâ€™s query string.",8,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"}],"output":null}],[11,"query_pairs_mut","","Manipulate this URLâ€™s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",8,{"inputs":[{"name":"self"}],"output":{"generics":["urlquery"],"name":"serializer"}}],[11,"set_path","","Change this URLâ€™s path.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"path_segments_mut","","Return an object with methods to manipulate this URLâ€™s path segments.",8,{"inputs":[{"name":"self"}],"output":{"generics":["pathsegmentsmut"],"name":"result"}}],[11,"set_port","","Change this URLâ€™s port number.",8,{"inputs":[{"name":"self"},{"generics":["u16"],"name":"option"}],"output":{"name":"result"}}],[11,"set_host","","Change this URLâ€™s host.",8,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"set_ip_host","","Change this URLâ€™s host to the given IP address.",8,{"inputs":[{"name":"self"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_password","","Change this URLâ€™s password.",8,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"}],"output":{"name":"result"}}],[11,"set_username","","Change this URLâ€™s username.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_scheme","","Change this URLâ€™s scheme.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"generics":["url"],"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"generics":["url"],"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",8,{"inputs":[{"name":"self"}],"output":{"generics":["pathbuf"],"name":"result"}}],[11,"to_socket_addrs","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"hash","","",8,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"UrlQuery"],[3,"ParseOptions"]]};
searchIndex["utf8"] = {"doc":"","items":[[3,"LossyDecoder","utf8","A push-based, lossy decoder for UTF-8. Errors are replaced with the U+FFFD replacement character.",null,null],[3,"Incomplete","","",null,null],[12,"buffer","","",0,null],[12,"buffer_len","","",0,null],[4,"DecodeError","","",null,null],[13,"Invalid","","In lossy decoding insert `valid_prefix`, then `\"\\u{FFFD}\"`, then call `decode()` again with `remaining_input`.",1,null],[12,"valid_prefix","utf8::DecodeError","",1,null],[12,"invalid_sequence","","",1,null],[12,"remaining_input","","",1,null],[13,"Incomplete","utf8","Call the `incomplete_suffix.try_complete` method with more input when available. If no more input is available, this is an invalid byte sequence.",1,null],[12,"valid_prefix","utf8::DecodeError","",1,null],[12,"incomplete_suffix","","",1,null],[5,"decode","utf8","",null,null],[11,"new","","Create a new decoder from a callback.",2,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"feed","","Feed one chunk of input into the decoder.",2,null],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[17,"REPLACEMENT_CHARACTER","","The replacement character, U+FFFD. In lossy decoding, insert it for every decoding error.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"decodeerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"incomplete"}}],[11,"empty","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","",0,null],[11,"try_complete","","`None``try_complete``Some((result, remaining_input))``Incomplete``remaining_input``decode()`",0,null]],"paths":[[3,"Incomplete"],[4,"DecodeError"],[3,"LossyDecoder"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes. This is useful for constructing byte based automatons that need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utf8sequence"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"utf8sequence"}],"output":{"name":"bool"}}],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence of byte ranges.",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"utf8range"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"utf8range"}],"output":{"name":"bool"}}],[11,"matches","","Returns true if and only if the given byte is in this range.",0,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range given.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["uuid"] = {"doc":"Generate and parse UUIDs","items":[[3,"Uuid","uuid","A Universally Unique Identifier (UUID).",null,null],[3,"Simple","","An adaptor for formatting a `Uuid` as a simple string.",null,null],[3,"Hyphenated","","An adaptor for formatting a `Uuid` as a hyphenated string.",null,null],[3,"Urn","","An adaptor for formatting a `Uuid` as a URN string.",null,null],[4,"UuidVersion","","The version of the UUID, denoting the generating algorithm.",null,null],[13,"Mac","","Version 1: MAC address",0,null],[13,"Dce","","Version 2: DCE Security",0,null],[13,"Md5","","Version 3: MD5 hash",0,null],[13,"Random","","Version 4: Random",0,null],[13,"Sha1","","Version 5: SHA-1 hash",0,null],[4,"UuidVariant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility",1,null],[13,"RFC4122","","As described in the RFC4122 Specification (default)",1,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility",1,null],[13,"Future","","Reserved for future expansion",1,null],[4,"ParseError","","Error details for string parsing failures.",null,null],[13,"InvalidLength","","",2,null],[13,"InvalidCharacter","","",2,null],[13,"InvalidGroups","","",2,null],[13,"InvalidGroupLength","","",2,null],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"serialize","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[6,"UuidBytes","","A 128-bit (16 byte) buffer containing the ID.",null,null],[17,"NAMESPACE_DNS","","A UUID of the namespace of fully-qualified domain names",null,null],[17,"NAMESPACE_URL","","A UUID of the namespace of URLs",null,null],[17,"NAMESPACE_OID","","A UUID of the namespace of ISO OIDs",null,null],[17,"NAMESPACE_X500","","A UUID of the namespace of X.500 DNs (in DER or a text output format)",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"uuidversion"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"uuidversion"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"uuidvariant"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"uuidvariant"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"uuid"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"uuid"}],"output":{"name":"ordering"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"nil","","The 'nil UUID'.",3,{"inputs":[],"output":{"name":"uuid"}}],[11,"new","","Creates a new `Uuid`.",3,{"inputs":[{"name":"uuidversion"}],"output":{"generics":["uuid"],"name":"option"}}],[11,"new_v4","","Creates a random `Uuid`.",3,{"inputs":[],"output":{"name":"uuid"}}],[11,"from_fields","","Creates a `Uuid` from four field values.",3,null],[11,"from_bytes","","Creates a `Uuid` using the supplied bytes.",3,null],[11,"get_variant","","Returns the variant of the `Uuid` structure.",3,{"inputs":[{"name":"self"}],"output":{"generics":["uuidvariant"],"name":"option"}}],[11,"get_version_num","","Returns the version number of the `Uuid`.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_version","","Returns the version of the `Uuid`.",3,{"inputs":[{"name":"self"}],"output":{"generics":["uuidversion"],"name":"option"}}],[11,"as_bytes","","Return an array of 16 octets containing the UUID data",3,null],[11,"simple","","Returns a wrapper which when formatted via `fmt::Display` will format a string of 32 hexadecimal digits.",3,{"inputs":[{"name":"self"}],"output":{"name":"simple"}}],[11,"hyphenated","","Returns a wrapper which when formatted via `fmt::Display` will format a string of hexadecimal digits separated into groups with a hyphen.",3,{"inputs":[{"name":"self"}],"output":{"name":"hyphenated"}}],[11,"urn","","Returns a wrapper which when formatted via `fmt::Display` will format a string of the UUID as a full URN string.",3,{"inputs":[{"name":"self"}],"output":{"name":"urn"}}],[11,"to_timestamp","","Returns an Optional Tuple of (u64, u16) representing the timestamp and  counter portion of a V1 UUID.  If the supplied UUID is not V1, this  will return None",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with optional hyphens.",3,{"inputs":[{"name":"str"}],"output":{"generics":["uuid","parseerror"],"name":"result"}}],[11,"is_nil","","Tests if the UUID is nil",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","Returns the nil UUID, which is all zeroes",3,{"inputs":[],"output":{"name":"uuid"}}],[11,"from_str","","Parse a hex string and interpret as a `Uuid`.",3,{"inputs":[{"name":"str"}],"output":{"generics":["uuid","parseerror"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"rand","","",3,{"inputs":[{"name":"r"}],"output":{"name":"uuid"}}]],"paths":[[4,"UuidVersion"],[4,"UuidVariant"],[4,"ParseError"],[3,"Uuid"],[3,"Simple"],[3,"Hyphenated"],[3,"Urn"]]};
searchIndex["void"] = {"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,null],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"void"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
